### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplateValuesResult
  id: TemplateValuesResult
  parent: Microsoft.AspNetCore.Routing.Template
  children:
  - Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.AcceptedValues
  - Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.CombinedValues
  langs:
  - csharp
  - vb
  name: TemplateValuesResult
  nameWithType: TemplateValuesResult
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TemplateValuesResult
    path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  summary: "\nThe values used as inputs for constraints and link generation.\n"
  example: []
  syntax:
    content: public class TemplateValuesResult
    content.vb: Public Class TemplateValuesResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.AcceptedValues
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.AcceptedValues
  id: AcceptedValues
  parent: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult
  langs:
  - csharp
  - vb
  name: AcceptedValues
  nameWithType: TemplateValuesResult.AcceptedValues
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.AcceptedValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: AcceptedValues
    path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  summary: "\nThe set of values that will appear in the URL.\n"
  example: []
  syntax:
    content: public RouteValueDictionary AcceptedValues { get; set; }
    content.vb: Public Property AcceptedValues As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.CombinedValues
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.CombinedValues
  id: CombinedValues
  parent: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult
  langs:
  - csharp
  - vb
  name: CombinedValues
  nameWithType: TemplateValuesResult.CombinedValues
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateValuesResult.CombinedValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: CombinedValues
    path: src/Microsoft.AspNetCore.Routing/Template/TemplateValuesResult.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  summary: "\nThe set of values that that were supplied for URL generation.\n"
  remarks: "\nThis combines implicit (ambient) values from the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> of the current request\n(if applicable), explictly provided values, and default values for parameters that appear in\nthe route template.\n\nImplicit (ambient) values which are invalidated due to changes in values lexically earlier in the\nroute template are excluded from this set.\n"
  example: []
  syntax:
    content: public RouteValueDictionary CombinedValues { get; set; }
    content.vb: Public Property CombinedValues As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
