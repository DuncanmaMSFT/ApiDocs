### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  id: HttpMethodRouteConstraint
  parent: Microsoft.AspNetCore.Routing.Constraints
  children:
  - Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.#ctor(System.String[])
  - Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods
  - Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  langs:
  - csharp
  - vb
  name: HttpMethodRouteConstraint
  nameWithType: HttpMethodRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: HttpMethodRouteConstraint
    path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nConstrains the HTTP method of request or a route.\n"
  example: []
  syntax:
    content: 'public class HttpMethodRouteConstraint : IRouteConstraint'
    content.vb: >-
      Public Class HttpMethodRouteConstraint
          Implements IRouteConstraint
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Routing.IRouteConstraint
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.#ctor(System.String[])
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  langs:
  - csharp
  - vb
  name: HttpMethodRouteConstraint(String[])
  nameWithType: HttpMethodRouteConstraint.HttpMethodRouteConstraint(String[])
  fullName: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.HttpMethodRouteConstraint(System.String[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint\" data-throw-if-not-resolved=\"false\"></xref> that accepts the HTTP methods specified\nby <em>allowedMethods</em>.\n"
  example: []
  syntax:
    content: public HttpMethodRouteConstraint(params string[] allowedMethods)
    content.vb: Public Sub New(ParamArray allowedMethods As String())
    parameters:
    - id: allowedMethods
      type: System.String[]
      description: The allowed HTTP methods.
  nameWithType.vb: HttpMethodRouteConstraint.HttpMethodRouteConstraint(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.HttpMethodRouteConstraint(System.String())
  name.vb: HttpMethodRouteConstraint(String())
- uid: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods
  commentId: P:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods
  id: AllowedMethods
  parent: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  langs:
  - csharp
  - vb
  name: AllowedMethods
  nameWithType: HttpMethodRouteConstraint.AllowedMethods
  fullName: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.AllowedMethods
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: AllowedMethods
    path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nGets the HTTP methods allowed by the constraint.\n"
  example: []
  syntax:
    content: public IList<string> AllowedMethods { get; }
    content.vb: Public ReadOnly Property AllowedMethods As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  id: Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  parent: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  langs:
  - csharp
  - vb
  name: Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  nameWithType: HttpMethodRouteConstraint.Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  fullName: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.IRouter, System.String, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteDirection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Match
    path: src/Microsoft.AspNetCore.Routing/Constraints/HttpMethodRouteConstraint.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  example: []
  syntax:
    content: public virtual bool Match(HttpContext httpContext, IRouter route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection)
    content.vb: Public Overridable Function Match(httpContext As HttpContext, route As IRouter, routeKey As String, values As RouteValueDictionary, routeDirection As RouteDirection) As Boolean
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: route
      type: Microsoft.AspNetCore.Routing.IRouter
    - id: routeKey
      type: System.String
    - id: values
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
    - id: routeDirection
      type: Microsoft.AspNetCore.Routing.RouteDirection
    return:
      type: System.Boolean
  implements:
  - Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Routing.Constraints
  commentId: N:Microsoft.AspNetCore.Routing.Constraints
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Constraints
  nameWithType: Microsoft.AspNetCore.Routing.Constraints
  fullName: Microsoft.AspNetCore.Routing.Constraints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Routing.IRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.IRouteConstraint
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteConstraint
  nameWithType: IRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
  isExternal: false
  name: HttpMethodRouteConstraint
  nameWithType: HttpMethodRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.HttpMethodRouteConstraint
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  commentId: M:Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  parent: Microsoft.AspNetCore.Routing.IRouteConstraint
  isExternal: true
  name: Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  nameWithType: IRouteConstraint.Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  fullName: Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.IRouter, System.String, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteDirection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
    name: Match
    nameWithType: IRouteConstraint.Match
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
    name: RouteValueDictionary
    nameWithType: RouteValueDictionary
    fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteDirection
    name: RouteDirection
    nameWithType: RouteDirection
    fullName: Microsoft.AspNetCore.Routing.RouteDirection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
    name: Match
    nameWithType: IRouteConstraint.Match
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
    name: RouteValueDictionary
    nameWithType: RouteValueDictionary
    fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteDirection
    name: RouteDirection
    nameWithType: RouteDirection
    fullName: Microsoft.AspNetCore.Routing.RouteDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing.RouteDirection
  commentId: T:Microsoft.AspNetCore.Routing.RouteDirection
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteDirection
  nameWithType: RouteDirection
  fullName: Microsoft.AspNetCore.Routing.RouteDirection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
