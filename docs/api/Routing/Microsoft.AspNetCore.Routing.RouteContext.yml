### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteContext
  commentId: T:Microsoft.AspNetCore.Routing.RouteContext
  id: RouteContext
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteContext.#ctor(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Routing.RouteContext.Handler
  - Microsoft.AspNetCore.Routing.RouteContext.HttpContext
  - Microsoft.AspNetCore.Routing.RouteContext.RouteData
  langs:
  - csharp
  - vb
  name: RouteContext
  nameWithType: RouteContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteContext
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nA context object for <xref href=\"Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class RouteContext
    content.vb: Public Class RouteContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.RouteContext.#ctor(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteContext.#ctor(Microsoft.AspNetCore.Http.HttpContext)
  id: '#ctor(Microsoft.AspNetCore.Http.HttpContext)'
  parent: Microsoft.AspNetCore.Routing.RouteContext
  langs:
  - csharp
  - vb
  name: RouteContext(HttpContext)
  nameWithType: RouteContext.RouteContext(HttpContext)
  fullName: Microsoft.AspNetCore.Routing.RouteContext.RouteContext(Microsoft.AspNetCore.Http.HttpContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.RouteContext\" data-throw-if-not-resolved=\"false\"></xref> for the provided <em>httpContext</em>.\n"
  example: []
  syntax:
    content: public RouteContext(HttpContext httpContext)
    content.vb: Public Sub New(httpContext As HttpContext)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteContext.Handler
  commentId: P:Microsoft.AspNetCore.Routing.RouteContext.Handler
  id: Handler
  parent: Microsoft.AspNetCore.Routing.RouteContext
  langs:
  - csharp
  - vb
  name: Handler
  nameWithType: RouteContext.Handler
  fullName: Microsoft.AspNetCore.Routing.RouteContext.Handler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Handler
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets or sets the handler for the request. An <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> should set <xref href=\"Microsoft.AspNetCore.Routing.RouteContext.Handler\" data-throw-if-not-resolved=\"false\"></xref>\nwhen it matches.\n"
  example: []
  syntax:
    content: public RequestDelegate Handler { get; set; }
    content.vb: Public Property Handler As RequestDelegate
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.RequestDelegate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Routing.RouteContext.HttpContext
  id: HttpContext
  parent: Microsoft.AspNetCore.Routing.RouteContext
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: RouteContext.HttpContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext.HttpContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: HttpContext
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> associated with the current request.\n"
  example: []
  syntax:
    content: public HttpContext HttpContext { get; }
    content.vb: Public ReadOnly Property HttpContext As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.RouteContext.RouteData
  commentId: P:Microsoft.AspNetCore.Routing.RouteContext.RouteData
  id: RouteData
  parent: Microsoft.AspNetCore.Routing.RouteContext
  langs:
  - csharp
  - vb
  name: RouteData
  nameWithType: RouteContext.RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteContext.RouteData
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteData
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteContext.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> associated with the current context.\n"
  example: []
  syntax:
    content: public RouteData RouteData { get; set; }
    content.vb: Public Property RouteData As RouteData
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.IRouter
  isExternal: false
  name: RouteAsync(RouteContext)
  nameWithType: IRouter.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteContext
  commentId: T:Microsoft.AspNetCore.Routing.RouteContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteContext
  nameWithType: RouteContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Routing.RouteContext.Handler
  commentId: P:Microsoft.AspNetCore.Routing.RouteContext.Handler
- uid: Microsoft.AspNetCore.Http.RequestDelegate
  commentId: T:Microsoft.AspNetCore.Http.RequestDelegate
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: RequestDelegate
  nameWithType: RequestDelegate
  fullName: Microsoft.AspNetCore.Http.RequestDelegate
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
