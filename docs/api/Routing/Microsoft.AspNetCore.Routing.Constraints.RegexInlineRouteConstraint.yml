### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  id: RegexInlineRouteConstraint
  parent: Microsoft.AspNetCore.Routing.Constraints
  children:
  - Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: RegexInlineRouteConstraint
  nameWithType: RegexInlineRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/RegexInlineRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RegexInlineRouteConstraint
    path: src/Microsoft.AspNetCore.Routing/Constraints/RegexInlineRouteConstraint.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nRepresents a regex constraint which can be used as an inlineConstraint.\n"
  example: []
  syntax:
    content: 'public class RegexInlineRouteConstraint : RegexRouteConstraint, IRouteConstraint'
    content.vb: >-
      Public Class RegexInlineRouteConstraint
          Inherits RegexRouteConstraint
          Implements IRouteConstraint
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
  implements:
  - Microsoft.AspNetCore.Routing.IRouteConstraint
  inheritedMembers:
  - Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Constraint
  - Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  langs:
  - csharp
  - vb
  name: RegexInlineRouteConstraint(String)
  nameWithType: RegexInlineRouteConstraint.RegexInlineRouteConstraint(String)
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint.RegexInlineRouteConstraint(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Constraints/RegexInlineRouteConstraint.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Constraints/RegexInlineRouteConstraint.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Constraints
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RegexInlineRouteConstraint(string regexPattern)
    content.vb: Public Sub New(regexPattern As String)
    parameters:
    - id: regexPattern
      type: System.String
      description: The regular expression pattern to match.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Constraints
  commentId: N:Microsoft.AspNetCore.Routing.Constraints
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Constraints
  nameWithType: Microsoft.AspNetCore.Routing.Constraints
  fullName: Microsoft.AspNetCore.Routing.Constraints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
  parent: Microsoft.AspNetCore.Routing.Constraints
  isExternal: false
  name: RegexRouteConstraint
  nameWithType: RegexRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
- uid: Microsoft.AspNetCore.Routing.IRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.IRouteConstraint
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteConstraint
  nameWithType: IRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Constraint
  commentId: P:Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Constraint
  parent: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
  isExternal: false
  name: Constraint
  nameWithType: RegexRouteConstraint.Constraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Constraint
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  commentId: M:Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
  parent: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint
  isExternal: true
  name: Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  nameWithType: RegexRouteConstraint.Match(HttpContext, IRouter, String, RouteValueDictionary, RouteDirection)
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.IRouter, System.String, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteDirection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
    name: Match
    nameWithType: RegexRouteConstraint.Match
    fullName: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
    name: RouteValueDictionary
    nameWithType: RouteValueDictionary
    fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteDirection
    name: RouteDirection
    nameWithType: RouteDirection
    fullName: Microsoft.AspNetCore.Routing.RouteDirection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)
    name: Match
    nameWithType: RegexRouteConstraint.Match
    fullName: Microsoft.AspNetCore.Routing.Constraints.RegexRouteConstraint.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
    name: RouteValueDictionary
    nameWithType: RouteValueDictionary
    fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.RouteDirection
    name: RouteDirection
    nameWithType: RouteDirection
    fullName: Microsoft.AspNetCore.Routing.RouteDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
  isExternal: false
  name: RegexInlineRouteConstraint
  nameWithType: RegexInlineRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.Constraints.RegexInlineRouteConstraint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
