### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  commentId: T:Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  id: PathTokenizer
  parent: Microsoft.AspNetCore.Routing.Internal
  children:
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.#ctor(Microsoft.AspNetCore.Http.PathString)
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Count
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.GetEnumerator
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Item(System.Int32)
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#Generic#IEnumerable{Microsoft#Extensions#Primitives#StringSegment}#GetEnumerator
  - Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: PathTokenizer
  nameWithType: PathTokenizer
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: PathTokenizer
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: 'public struct PathTokenizer : IReadOnlyList<StringSegment>, IReadOnlyCollection<StringSegment>, IEnumerable<StringSegment>, IEnumerable'
    content.vb: >-
      Public Structure PathTokenizer
          Implements IReadOnlyList(Of StringSegment), IReadOnlyCollection(Of StringSegment), IEnumerable(Of StringSegment), IEnumerable
  implements:
  - System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.#ctor(Microsoft.AspNetCore.Http.PathString)
  commentId: M:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.#ctor(Microsoft.AspNetCore.Http.PathString)
  id: '#ctor(Microsoft.AspNetCore.Http.PathString)'
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: PathTokenizer(PathString)
  nameWithType: PathTokenizer.PathTokenizer(PathString)
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.PathTokenizer(Microsoft.AspNetCore.Http.PathString)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public PathTokenizer(PathString path)
    content.vb: Public Sub New(path As PathString)
    parameters:
    - id: path
      type: Microsoft.AspNetCore.Http.PathString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Count
  commentId: P:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Count
  id: Count
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PathTokenizer.Count
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Count
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Item(System.Int32)
  commentId: P:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: PathTokenizer.Item[Int32]
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: this[]
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public StringSegment this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As StringSegment
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
  implements:
  - System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}.Item(System.Int32)
  nameWithType.vb: PathTokenizer.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: PathTokenizer.GetEnumerator()
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public PathTokenizer.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As PathTokenizer.Enumerator
    return:
      type: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Enumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#Generic#IEnumerable{Microsoft#Extensions#Primitives#StringSegment}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#Generic#IEnumerable{Microsoft#Extensions#Primitives#StringSegment}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{Microsoft#Extensions#Primitives#StringSegment}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: IEnumerable<StringSegment>.GetEnumerator()
  nameWithType: PathTokenizer.IEnumerable<StringSegment>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: IEnumerator<StringSegment> IEnumerable<StringSegment>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator As IEnumerator(Of StringSegment) Implements IEnumerable(Of StringSegment).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Extensions.Primitives.StringSegment}
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}.GetEnumerator
  nameWithType.vb: PathTokenizer.System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator()
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Routing.Internal.PathTokenizer
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: PathTokenizer.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Routing/Internal/PathTokenizer.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PathTokenizer.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Routing.Internal
  commentId: N:Microsoft.AspNetCore.Routing.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Internal
  nameWithType: Microsoft.AspNetCore.Routing.Internal
  fullName: Microsoft.AspNetCore.Routing.Internal
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<StringSegment>
  nameWithType: IReadOnlyList<StringSegment>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Extensions.Primitives.StringSegment>
  nameWithType.vb: IReadOnlyList(Of StringSegment)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Extensions.Primitives.StringSegment)
  name.vb: IReadOnlyList(Of StringSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<StringSegment>
  nameWithType: IReadOnlyCollection<StringSegment>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.Extensions.Primitives.StringSegment>
  nameWithType.vb: IReadOnlyCollection(Of StringSegment)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.Extensions.Primitives.StringSegment)
  name.vb: IReadOnlyCollection(Of StringSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<StringSegment>
  nameWithType: IEnumerable<StringSegment>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>
  nameWithType.vb: IEnumerable(Of StringSegment)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Primitives.StringSegment)
  name.vb: IEnumerable(Of StringSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{Microsoft.Extensions.Primitives.StringSegment}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<StringSegment>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.Extensions.Primitives.StringSegment>.Count
  nameWithType.vb: IReadOnlyCollection(Of StringSegment).Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.Extensions.Primitives.StringSegment).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.StringSegment}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IReadOnlyList<StringSegment>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Extensions.Primitives.StringSegment>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of StringSegment).Item(Int32)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Extensions.Primitives.StringSegment).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<StringSegment>.Item
    fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Extensions.Primitives.StringSegment>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of StringSegment).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of Microsoft.Extensions.Primitives.StringSegment).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.StringSegment
  commentId: T:Microsoft.Extensions.Primitives.StringSegment
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringSegment
  nameWithType: StringSegment
  fullName: Microsoft.Extensions.Primitives.StringSegment
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IReadOnlyList<T>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<T>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of T).Item(Int32)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<T>.Item
    fullName: System.Collections.Generic.IReadOnlyList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of T).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Enumerator
  commentId: T:Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Enumerator
  parent: Microsoft.AspNetCore.Routing.Internal
  isExternal: false
  name: PathTokenizer.Enumerator
  nameWithType: PathTokenizer.Enumerator
  fullName: Microsoft.AspNetCore.Routing.Internal.PathTokenizer.Enumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Primitives.StringSegment}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<StringSegment>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of StringSegment).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Primitives.StringSegment).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<StringSegment>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Primitives.StringSegment>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of StringSegment).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Primitives.StringSegment).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Extensions.Primitives.StringSegment}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Extensions.Primitives.StringSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<StringSegment>
  nameWithType: IEnumerator<StringSegment>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Extensions.Primitives.StringSegment>
  nameWithType.vb: IEnumerator(Of StringSegment)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Extensions.Primitives.StringSegment)
  name.vb: IEnumerator(Of StringSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringSegment
    name: StringSegment
    nameWithType: StringSegment
    fullName: Microsoft.Extensions.Primitives.StringSegment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
