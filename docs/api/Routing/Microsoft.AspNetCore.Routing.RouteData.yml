### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  id: RouteData
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteData.#ctor
  - Microsoft.AspNetCore.Routing.RouteData.#ctor(Microsoft.AspNetCore.Routing.RouteData)
  - Microsoft.AspNetCore.Routing.RouteData.DataTokens
  - Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.RouteData.Routers
  - Microsoft.AspNetCore.Routing.RouteData.Values
  langs:
  - csharp
  - vb
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteData
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nInformation about the current routing path.\n"
  example: []
  syntax:
    content: public class RouteData
    content.vb: Public Class RouteData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.RouteData.#ctor
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: RouteData()
  nameWithType: RouteData.RouteData()
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteData()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public RouteData()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteData.#ctor(Microsoft.AspNetCore.Routing.RouteData)
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.#ctor(Microsoft.AspNetCore.Routing.RouteData)
  id: '#ctor(Microsoft.AspNetCore.Routing.RouteData)'
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: RouteData(RouteData)
  nameWithType: RouteData.RouteData(RouteData)
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteData(Microsoft.AspNetCore.Routing.RouteData)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> instance with values copied from <em>other</em>.\n"
  example: []
  syntax:
    content: public RouteData(RouteData other)
    content.vb: Public Sub New(other As RouteData)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Routing.RouteData
      description: The other <xref href="Microsoft.AspNetCore.Routing.RouteData" data-throw-if-not-resolved="false"></xref> instance to copy.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.RouteData.DataTokens
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.DataTokens
  id: DataTokens
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: DataTokens
  nameWithType: RouteData.DataTokens
  fullName: Microsoft.AspNetCore.Routing.RouteData.DataTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: DataTokens
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the data tokens produced by routes on the current routing path.\n"
  example: []
  syntax:
    content: public RouteValueDictionary DataTokens { get; }
    content.vb: Public ReadOnly Property DataTokens As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.RouteData.Routers
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Routers
  id: Routers
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: Routers
  nameWithType: RouteData.Routers
  fullName: Microsoft.AspNetCore.Routing.RouteData.Routers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Routers
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> instances on the current routing path.\n"
  example: []
  syntax:
    content: public IList<IRouter> Routers { get; }
    content.vb: Public ReadOnly Property Routers As IList(Of IRouter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.RouteData.Values
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Values
  id: Values
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: RouteData.Values
  fullName: Microsoft.AspNetCore.Routing.RouteData.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Values
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the set of values produced by routes on the current routing path.\n"
  example: []
  syntax:
    content: public RouteValueDictionary Values { get; }
    content.vb: Public ReadOnly Property Values As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  parent: Microsoft.AspNetCore.Routing.RouteData
  langs:
  - csharp
  - vb
  name: PushState(IRouter, RouteValueDictionary, RouteValueDictionary)
  nameWithType: RouteData.PushState(IRouter, RouteValueDictionary, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: PushState
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\n<p>\nCreates a snapshot of the current state of the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> before appending\n<em>router</em> to <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Routers\" data-throw-if-not-resolved=\"false\"></xref>, merging <em>values</em> into\n<xref href=\"Microsoft.AspNetCore.Routing.RouteData.Values\" data-throw-if-not-resolved=\"false\"></xref>, and merging <em>dataTokens</em> into <xref href=\"Microsoft.AspNetCore.Routing.RouteData.DataTokens\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nCall <xref href=\"Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore\" data-throw-if-not-resolved=\"false\"></xref> to restore the state of this <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref>\nto the state at the time of calling\n<xref href=\"Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter%2cMicrosoft.AspNetCore.Routing.RouteValueDictionary%2cMicrosoft.AspNetCore.Routing.RouteValueDictionary)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public RouteData.RouteDataSnapshot PushState(IRouter router, RouteValueDictionary values, RouteValueDictionary dataTokens)
    content.vb: Public Function PushState(router As IRouter, values As RouteValueDictionary, dataTokens As RouteValueDictionary) As RouteData.RouteDataSnapshot
    parameters:
    - id: router
      type: Microsoft.AspNetCore.Routing.IRouter
      description: "\nAn <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> to append to <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Routers\" data-throw-if-not-resolved=\"false\"></xref>. If <code>null</code>, then <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Routers\" data-throw-if-not-resolved=\"false\"></xref>\nwill not be changed.\n"
    - id: values
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: "\nA <xref href=\"Microsoft.AspNetCore.Routing.RouteValueDictionary\" data-throw-if-not-resolved=\"false\"></xref> to merge into <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Values\" data-throw-if-not-resolved=\"false\"></xref>. If <code>null</code>, then\n<xref href=\"Microsoft.AspNetCore.Routing.RouteData.Values\" data-throw-if-not-resolved=\"false\"></xref> will not be changed.\n"
    - id: dataTokens
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: "\nA <xref href=\"Microsoft.AspNetCore.Routing.RouteValueDictionary\" data-throw-if-not-resolved=\"false\"></xref> to merge into <xref href=\"Microsoft.AspNetCore.Routing.RouteData.DataTokens\" data-throw-if-not-resolved=\"false\"></xref>. If <code>null</code>, then\n<xref href=\"Microsoft.AspNetCore.Routing.RouteData.DataTokens\" data-throw-if-not-resolved=\"false\"></xref> will not be changed.\n"
    return:
      type: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
      description: A <xref href="Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot" data-throw-if-not-resolved="false"></xref> that captures the current state.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRouter>
  nameWithType: IList<IRouter>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.IRouter>
  nameWithType.vb: IList(Of IRouter)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.IRouter)
  name.vb: IList(Of IRouter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.RouteData.Routers
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Routers
- uid: Microsoft.AspNetCore.Routing.RouteData.Values
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Values
- uid: Microsoft.AspNetCore.Routing.RouteData.DataTokens
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.DataTokens
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore
- uid: Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.PushState(Microsoft.AspNetCore.Routing.IRouter,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  commentId: T:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData.RouteDataSnapshot
  nameWithType: RouteData.RouteDataSnapshot
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
