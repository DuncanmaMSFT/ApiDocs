### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  commentId: T:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  id: RouteData.RouteDataSnapshot
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.#ctor(Microsoft.AspNetCore.Routing.RouteData,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore
  langs:
  - csharp
  - vb
  name: RouteData.RouteDataSnapshot
  nameWithType: RouteData.RouteDataSnapshot
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteDataSnapshot
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 177
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nA snapshot of the state of a <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public struct RouteDataSnapshot
    content.vb: Public Structure RouteDataSnapshot
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.#ctor(Microsoft.AspNetCore.Routing.RouteData,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.#ctor(Microsoft.AspNetCore.Routing.RouteData,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: '#ctor(Microsoft.AspNetCore.Routing.RouteData,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter},Microsoft.AspNetCore.Routing.RouteValueDictionary)'
  parent: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  langs:
  - csharp
  - vb
  name: RouteDataSnapshot(RouteData, RouteValueDictionary, IList<IRouter>, RouteValueDictionary)
  nameWithType: RouteData.RouteDataSnapshot.RouteDataSnapshot(RouteData, RouteValueDictionary, IList<IRouter>, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.RouteDataSnapshot(Microsoft.AspNetCore.Routing.RouteData, Microsoft.AspNetCore.Routing.RouteValueDictionary, System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.IRouter>, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot\" data-throw-if-not-resolved=\"false\"></xref> for <em>routeData</em>.\n"
  example: []
  syntax:
    content: public RouteDataSnapshot(RouteData routeData, RouteValueDictionary dataTokens, IList<IRouter> routers, RouteValueDictionary values)
    content.vb: Public Sub New(routeData As RouteData, dataTokens As RouteValueDictionary, routers As IList(Of IRouter), values As RouteValueDictionary)
    parameters:
    - id: routeData
      type: Microsoft.AspNetCore.Routing.RouteData
      description: The <xref href="Microsoft.AspNetCore.Routing.RouteData" data-throw-if-not-resolved="false"></xref>.
    - id: dataTokens
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The data tokens.
    - id: routers
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
      description: The routers.
    - id: values
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The route values.
  nameWithType.vb: RouteData.RouteDataSnapshot.RouteDataSnapshot(RouteData, RouteValueDictionary, IList(Of IRouter), RouteValueDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.RouteDataSnapshot(Microsoft.AspNetCore.Routing.RouteData, Microsoft.AspNetCore.Routing.RouteValueDictionary, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.IRouter), Microsoft.AspNetCore.Routing.RouteValueDictionary)
  name.vb: RouteDataSnapshot(RouteData, RouteValueDictionary, IList(Of IRouter), RouteValueDictionary)
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore
  commentId: M:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore
  id: Restore
  parent: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  langs:
  - csharp
  - vb
  name: Restore()
  nameWithType: RouteData.RouteDataSnapshot.Restore()
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot.Restore()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Restore
    path: src/Microsoft.AspNetCore.Routing.Abstractions/RouteData.cs
    startLine: 211
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nRestores the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> to the captured state.\n"
  example: []
  syntax:
    content: public void Restore()
    content.vb: Public Sub Restore
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  commentId: T:Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteData.RouteDataSnapshot
  nameWithType: RouteData.RouteDataSnapshot
  fullName: Microsoft.AspNetCore.Routing.RouteData.RouteDataSnapshot
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRouter>
  nameWithType: IList<IRouter>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.IRouter>
  nameWithType.vb: IList(Of IRouter)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.IRouter)
  name.vb: IList(Of IRouter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
