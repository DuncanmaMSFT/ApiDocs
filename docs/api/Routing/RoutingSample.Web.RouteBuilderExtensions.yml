### YamlMime:ManagedReference
items:
- uid: RoutingSample.Web.RouteBuilderExtensions
  commentId: T:RoutingSample.Web.RouteBuilderExtensions
  id: RouteBuilderExtensions
  parent: RoutingSample.Web
  children:
  - RoutingSample.Web.RouteBuilderExtensions.AddPrefixRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,Microsoft.AspNetCore.Routing.IRouteHandler)
  - RoutingSample.Web.RouteBuilderExtensions.MapLocaleRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: RouteBuilderExtensions
  nameWithType: RouteBuilderExtensions
  fullName: RoutingSample.Web.RouteBuilderExtensions
  type: Class
  source:
    remote:
      path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteBuilderExtensions
    path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
    startLine: 8
  assemblies:
  - RoutingSample.Web
  namespace: RoutingSample.Web
  syntax:
    content: public static class RouteBuilderExtensions
    content.vb: Public Module RouteBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: RoutingSample.Web.RouteBuilderExtensions.AddPrefixRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,Microsoft.AspNetCore.Routing.IRouteHandler)
  commentId: M:RoutingSample.Web.RouteBuilderExtensions.AddPrefixRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,Microsoft.AspNetCore.Routing.IRouteHandler)
  id: AddPrefixRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,Microsoft.AspNetCore.Routing.IRouteHandler)
  isExtensionMethod: true
  parent: RoutingSample.Web.RouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddPrefixRoute(IRouteBuilder, String, IRouteHandler)
  nameWithType: RouteBuilderExtensions.AddPrefixRoute(IRouteBuilder, String, IRouteHandler)
  fullName: RoutingSample.Web.RouteBuilderExtensions.AddPrefixRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, Microsoft.AspNetCore.Routing.IRouteHandler)
  type: Method
  source:
    remote:
      path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: AddPrefixRoute
    path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
    startLine: 10
  assemblies:
  - RoutingSample.Web
  namespace: RoutingSample.Web
  syntax:
    content: public static IRouteBuilder AddPrefixRoute(this IRouteBuilder routeBuilder, string prefix, IRouteHandler handler)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddPrefixRoute(routeBuilder As IRouteBuilder, prefix As String, handler As IRouteHandler) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: prefix
      type: System.String
    - id: handler
      type: Microsoft.AspNetCore.Routing.IRouteHandler
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: RoutingSample.Web.RouteBuilderExtensions.MapLocaleRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  commentId: M:RoutingSample.Web.RouteBuilderExtensions.MapLocaleRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  id: MapLocaleRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: RoutingSample.Web.RouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapLocaleRoute(IRouteBuilder, String, String, Object)
  nameWithType: RouteBuilderExtensions.MapLocaleRoute(IRouteBuilder, String, String, Object)
  fullName: RoutingSample.Web.RouteBuilderExtensions.MapLocaleRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapLocaleRoute
    path: samples/RoutingSample.Web/RouteBuilderExtensions.cs
    startLine: 19
  assemblies:
  - RoutingSample.Web
  namespace: RoutingSample.Web
  syntax:
    content: public static IRouteBuilder MapLocaleRoute(this IRouteBuilder routeBuilder, string locale, string routeTemplate, object defaults)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapLocaleRoute(routeBuilder As IRouteBuilder, locale As String, routeTemplate As String, defaults As Object) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: locale
      type: System.String
    - id: routeTemplate
      type: System.String
    - id: defaults
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: RoutingSample.Web
  commentId: N:RoutingSample.Web
  isExternal: false
  name: RoutingSample.Web
  nameWithType: RoutingSample.Web
  fullName: RoutingSample.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.IRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.IRouteBuilder
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteBuilder
  nameWithType: IRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.IRouteBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.IRouteHandler
  commentId: T:Microsoft.AspNetCore.Routing.IRouteHandler
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteHandler
  nameWithType: IRouteHandler
  fullName: Microsoft.AspNetCore.Routing.IRouteHandler
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
