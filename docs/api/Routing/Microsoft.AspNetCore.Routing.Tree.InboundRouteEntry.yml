### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  commentId: T:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  id: InboundRouteEntry
  parent: Microsoft.AspNetCore.Routing.Tree
  children:
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Constraints
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Defaults
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Handler
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteName
  - Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
  langs:
  - csharp
  - vb
  name: InboundRouteEntry
  nameWithType: InboundRouteEntry
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: InboundRouteEntry
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nUsed to build an <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref>. Represents a URL template tha will be used to match incoming\nrequest URLs.\n"
  example: []
  syntax:
    content: public class InboundRouteEntry
    content.vb: Public Class InboundRouteEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Constraints
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Constraints
  id: Constraints
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: InboundRouteEntry.Constraints
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Constraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Constraints
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the route constraints.\n"
  example: []
  syntax:
    content: public IDictionary<string, IRouteConstraint> Constraints { get; set; }
    content.vb: Public Property Constraints As IDictionary(Of String, IRouteConstraint)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Defaults
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Defaults
  id: Defaults
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: Defaults
  nameWithType: InboundRouteEntry.Defaults
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Defaults
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Defaults
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the route defaults.\n"
  example: []
  syntax:
    content: public RouteValueDictionary Defaults { get; set; }
    content.vb: Public Property Defaults As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Handler
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Handler
  id: Handler
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: Handler
  nameWithType: InboundRouteEntry.Handler
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Handler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Handler
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> to invoke when this entry matches.\n"
  example: []
  syntax:
    content: public IRouter Handler { get; set; }
    content.vb: Public Property Handler As IRouter
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.IRouter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
  id: Order
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: InboundRouteEntry.Order
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Order
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the order of the entry.\n"
  remarks: "\nEntries are ordered first by <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order\" data-throw-if-not-resolved=\"false\"></xref> (ascending) then by <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence\" data-throw-if-not-resolved=\"false\"></xref> (descending).\n"
  example: []
  syntax:
    content: public int Order { get; set; }
    content.vb: Public Property Order As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
  id: Precedence
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: Precedence
  nameWithType: InboundRouteEntry.Precedence
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Precedence
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the precedence of the entry.\n"
  remarks: "\nEntries are ordered first by <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order\" data-throw-if-not-resolved=\"false\"></xref> (ascending) then by <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence\" data-throw-if-not-resolved=\"false\"></xref> (descending).\n"
  example: []
  syntax:
    content: public decimal Precedence { get; set; }
    content.vb: Public Property Precedence As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteName
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteName
  id: RouteName
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: RouteName
  nameWithType: InboundRouteEntry.RouteName
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteName
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the name of the route.\n"
  example: []
  syntax:
    content: public string RouteName { get; set; }
    content.vb: Public Property RouteName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
  id: RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry
  langs:
  - csharp
  - vb
  name: RouteTemplate
  nameWithType: InboundRouteEntry.RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteTemplate
    path: src/Microsoft.AspNetCore.Routing/Tree/InboundRouteEntry.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RouteTemplate RouteTemplate { get; set; }
    content.vb: Public Property RouteTemplate As RouteTemplate
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouter
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: TreeRouter
  nameWithType: TreeRouter
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter
- uid: Microsoft.AspNetCore.Routing.Tree
  commentId: N:Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Tree
  nameWithType: Microsoft.AspNetCore.Routing.Tree
  fullName: Microsoft.AspNetCore.Routing.Tree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IRouteConstraint>
  nameWithType: IDictionary<String, IRouteConstraint>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.AspNetCore.Routing.IRouteConstraint>
  nameWithType.vb: IDictionary(Of String, IRouteConstraint)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.AspNetCore.Routing.IRouteConstraint)
  name.vb: IDictionary(Of String, IRouteConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Order
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.Precedence
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
  commentId: P:Microsoft.AspNetCore.Routing.Tree.InboundRouteEntry.RouteTemplate
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  commentId: T:Microsoft.AspNetCore.Routing.Template.RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: RouteTemplate
  nameWithType: RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
