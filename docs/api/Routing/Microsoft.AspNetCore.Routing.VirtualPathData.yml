### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.VirtualPathData
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathData
  id: VirtualPathData
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String)
  - Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.VirtualPathData.DataTokens
  - Microsoft.AspNetCore.Routing.VirtualPathData.Router
  - Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPath
  langs:
  - csharp
  - vb
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: VirtualPathData
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nRepresents information about the route and virtual path that are the result of\ngenerating a URL with the ASP.NET routing middleware.\n"
  example: []
  syntax:
    content: public class VirtualPathData
    content.vb: Public Class VirtualPathData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String)
  commentId: M:Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String)
  id: '#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String)'
  parent: Microsoft.AspNetCore.Routing.VirtualPathData
  langs:
  - csharp
  - vb
  name: VirtualPathData(IRouter, String)
  nameWithType: VirtualPathData.VirtualPathData(IRouter, String)
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPathData(Microsoft.AspNetCore.Routing.IRouter, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\n Initializes a new instance of the <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathData\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public VirtualPathData(IRouter router, string virtualPath)
    content.vb: Public Sub New(router As IRouter, virtualPath As String)
    parameters:
    - id: router
      type: Microsoft.AspNetCore.Routing.IRouter
      description: The object that is used to generate the URL.
    - id: virtualPath
      type: System.String
      description: The generated URL.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.VirtualPathData.#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: '#ctor(Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)'
  parent: Microsoft.AspNetCore.Routing.VirtualPathData
  langs:
  - csharp
  - vb
  name: VirtualPathData(IRouter, String, RouteValueDictionary)
  nameWithType: VirtualPathData.VirtualPathData(IRouter, String, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPathData(Microsoft.AspNetCore.Routing.IRouter, System.String, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\n Initializes a new instance of the <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathData\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public VirtualPathData(IRouter router, string virtualPath, RouteValueDictionary dataTokens)
    content.vb: Public Sub New(router As IRouter, virtualPath As String, dataTokens As RouteValueDictionary)
    parameters:
    - id: router
      type: Microsoft.AspNetCore.Routing.IRouter
      description: The object that is used to generate the URL.
    - id: virtualPath
      type: System.String
      description: The generated URL.
    - id: dataTokens
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The collection of custom values.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.DataTokens
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathData.DataTokens
  id: DataTokens
  parent: Microsoft.AspNetCore.Routing.VirtualPathData
  langs:
  - csharp
  - vb
  name: DataTokens
  nameWithType: VirtualPathData.DataTokens
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData.DataTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: DataTokens
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the collection of custom values for the <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathData.Router\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RouteValueDictionary DataTokens { get; }
    content.vb: Public ReadOnly Property DataTokens As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.Router
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathData.Router
  id: Router
  parent: Microsoft.AspNetCore.Routing.VirtualPathData
  langs:
  - csharp
  - vb
  name: Router
  nameWithType: VirtualPathData.Router
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData.Router
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Router
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> that was used to generate the URL.\n"
  example: []
  syntax:
    content: public IRouter Router { get; set; }
    content.vb: Public Property Router As IRouter
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.IRouter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPath
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPath
  id: VirtualPath
  parent: Microsoft.AspNetCore.Routing.VirtualPathData
  langs:
  - csharp
  - vb
  name: VirtualPath
  nameWithType: VirtualPathData.VirtualPath
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData.VirtualPath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: VirtualPath
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathData.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets or sets the URL that was generated from the <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathData.Router\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string VirtualPath { get; set; }
    content.vb: Public Property VirtualPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.VirtualPathData
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Routing.VirtualPathData.Router
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathData.Router
