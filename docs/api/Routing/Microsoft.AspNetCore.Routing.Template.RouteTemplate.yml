### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  commentId: T:Microsoft.AspNetCore.Routing.Template.RouteTemplate
  id: RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Template
  children:
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.#ctor(System.String,System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment})
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetParameter(System.String)
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetSegment(System.Int32)
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.Parameters
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.Segments
  - Microsoft.AspNetCore.Routing.Template.RouteTemplate.TemplateText
  langs:
  - csharp
  - vb
  name: RouteTemplate
  nameWithType: RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteTemplate
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public class RouteTemplate
    content.vb: Public Class RouteTemplate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.#ctor(System.String,System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment})
  commentId: M:Microsoft.AspNetCore.Routing.Template.RouteTemplate.#ctor(System.String,System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment})
  id: '#ctor(System.String,System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment})'
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: RouteTemplate(String, List<TemplateSegment>)
  nameWithType: RouteTemplate.RouteTemplate(String, List<TemplateSegment>)
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.RouteTemplate(System.String, System.Collections.Generic.List<Microsoft.AspNetCore.Routing.Template.TemplateSegment>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public RouteTemplate(string template, List<TemplateSegment> segments)
    content.vb: Public Sub New(template As String, segments As List(Of TemplateSegment))
    parameters:
    - id: template
      type: System.String
    - id: segments
      type: System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  nameWithType.vb: RouteTemplate.RouteTemplate(String, List(Of TemplateSegment))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Template.RouteTemplate.RouteTemplate(System.String, System.Collections.Generic.List(Of Microsoft.AspNetCore.Routing.Template.TemplateSegment))
  name.vb: RouteTemplate(String, List(Of TemplateSegment))
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.TemplateText
  commentId: P:Microsoft.AspNetCore.Routing.Template.RouteTemplate.TemplateText
  id: TemplateText
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: TemplateText
  nameWithType: RouteTemplate.TemplateText
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.TemplateText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TemplateText
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public string TemplateText { get; }
    content.vb: Public ReadOnly Property TemplateText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.Parameters
  commentId: P:Microsoft.AspNetCore.Routing.Template.RouteTemplate.Parameters
  id: Parameters
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: RouteTemplate.Parameters
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Parameters
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public IList<TemplatePart> Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As IList(Of TemplatePart)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplatePart}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.Segments
  commentId: P:Microsoft.AspNetCore.Routing.Template.RouteTemplate.Segments
  id: Segments
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: RouteTemplate.Segments
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.Segments
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Segments
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public IList<TemplateSegment> Segments { get; }
    content.vb: Public ReadOnly Property Segments As IList(Of TemplateSegment)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetSegment(System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetSegment(System.Int32)
  id: GetSegment(System.Int32)
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: GetSegment(Int32)
  nameWithType: RouteTemplate.GetSegment(Int32)
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetSegment(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetSegment
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public TemplateSegment GetSegment(int index)
    content.vb: Public Function GetSegment(index As Integer) As TemplateSegment
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetParameter(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetParameter(System.String)
  id: GetParameter(System.String)
  parent: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  langs:
  - csharp
  - vb
  name: GetParameter(String)
  nameWithType: RouteTemplate.GetParameter(String)
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate.GetParameter(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetParameter
    path: src/Microsoft.AspNetCore.Routing/Template/RouteTemplate.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  summary: "\nGets the parameter matching the given name.\n"
  example: []
  syntax:
    content: public TemplatePart GetParameter(string name)
    content.vb: Public Function GetParameter(name As String) As TemplatePart
    parameters:
    - id: name
      type: System.String
      description: The name of the parameter to match.
    return:
      type: Microsoft.AspNetCore.Routing.Template.TemplatePart
      description: The matching parameter or <code>null</code> if no parameter matches the given name.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TemplateSegment>
  nameWithType: List<TemplateSegment>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.Routing.Template.TemplateSegment>
  nameWithType.vb: List(Of TemplateSegment)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.Routing.Template.TemplateSegment)
  name.vb: List(Of TemplateSegment)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Template.TemplateSegment
    name: TemplateSegment
    nameWithType: TemplateSegment
    fullName: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Template.TemplateSegment
    name: TemplateSegment
    nameWithType: TemplateSegment
    fullName: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplatePart}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplatePart}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TemplatePart>
  nameWithType: IList<TemplatePart>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.Template.TemplatePart>
  nameWithType.vb: IList(Of TemplatePart)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.Template.TemplatePart)
  name.vb: IList(Of TemplatePart)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Template.TemplatePart
    name: TemplatePart
    nameWithType: TemplatePart
    fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Template.TemplatePart
    name: TemplatePart
    nameWithType: TemplatePart
    fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Template.TemplateSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TemplateSegment>
  nameWithType: IList<TemplateSegment>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.Template.TemplateSegment>
  nameWithType.vb: IList(Of TemplateSegment)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.Template.TemplateSegment)
  name.vb: IList(Of TemplateSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Template.TemplateSegment
    name: TemplateSegment
    nameWithType: TemplateSegment
    fullName: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Template.TemplateSegment
    name: TemplateSegment
    nameWithType: TemplateSegment
    fullName: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Routing.Template.TemplateSegment
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplateSegment
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: TemplateSegment
  nameWithType: TemplateSegment
  fullName: Microsoft.AspNetCore.Routing.Template.TemplateSegment
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplatePart
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: TemplatePart
  nameWithType: TemplatePart
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart
