### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree
  commentId: T:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree
  id: LinkGenerationDecisionTree
  parent: Microsoft.AspNetCore.Routing.Internal
  children:
  - Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch})
  - Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)
  langs:
  - csharp
  - vb
  name: LinkGenerationDecisionTree
  nameWithType: LinkGenerationDecisionTree
  fullName: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: LinkGenerationDecisionTree
    path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public class LinkGenerationDecisionTree
    content.vb: Public Class LinkGenerationDecisionTree
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch})
  commentId: M:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch})
  id: '#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch})'
  parent: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree
  langs:
  - csharp
  - vb
  name: LinkGenerationDecisionTree(IReadOnlyList<OutboundMatch>)
  nameWithType: LinkGenerationDecisionTree.LinkGenerationDecisionTree(IReadOnlyList<OutboundMatch>)
  fullName: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.LinkGenerationDecisionTree(System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Routing.Tree.OutboundMatch>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public LinkGenerationDecisionTree(IReadOnlyList<OutboundMatch> entries)
    content.vb: Public Sub New(entries As IReadOnlyList(Of OutboundMatch))
    parameters:
    - id: entries
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch}
  nameWithType.vb: LinkGenerationDecisionTree.LinkGenerationDecisionTree(IReadOnlyList(Of OutboundMatch))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.LinkGenerationDecisionTree(System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Routing.Tree.OutboundMatch))
  name.vb: LinkGenerationDecisionTree(IReadOnlyList(Of OutboundMatch))
- uid: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)
  id: GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree
  langs:
  - csharp
  - vb
  name: GetMatches(VirtualPathContext)
  nameWithType: LinkGenerationDecisionTree.GetMatches(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetMatches
    path: src/Microsoft.AspNetCore.Routing/Internal/LinkGenerationDecisionTree.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Internal
  syntax:
    content: public IList<OutboundMatchResult> GetMatches(VirtualPathContext context)
    content.vb: Public Function GetMatches(context As VirtualPathContext) As IList(Of OutboundMatchResult)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.VirtualPathContext
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.Internal
  commentId: N:Microsoft.AspNetCore.Routing.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Internal
  nameWithType: Microsoft.AspNetCore.Routing.Internal
  fullName: Microsoft.AspNetCore.Routing.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<OutboundMatch>
  nameWithType: IReadOnlyList<OutboundMatch>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Routing.Tree.OutboundMatch>
  nameWithType.vb: IReadOnlyList(Of OutboundMatch)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Routing.Tree.OutboundMatch)
  name.vb: IReadOnlyList(Of OutboundMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundMatch
    name: OutboundMatch
    nameWithType: OutboundMatch
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundMatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundMatch
    name: OutboundMatch
    nameWithType: OutboundMatch
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundMatch
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OutboundMatchResult>
  nameWithType: IList<OutboundMatchResult>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult>
  nameWithType.vb: IList(Of OutboundMatchResult)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult)
  name.vb: IList(Of OutboundMatchResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult
    name: OutboundMatchResult
    nameWithType: OutboundMatchResult
    fullName: Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult
    name: OutboundMatchResult
    nameWithType: OutboundMatchResult
    fullName: Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
