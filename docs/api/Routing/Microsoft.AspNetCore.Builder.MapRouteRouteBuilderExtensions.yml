### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  id: MapRouteRouteBuilderExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  - Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: MapRouteRouteBuilderExtensions
  nameWithType: MapRouteRouteBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapRouteRouteBuilderExtensions
    path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nProvides extension methods for <xref href=\"Microsoft.AspNetCore.Routing.IRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref> to add routes.\n"
  example: []
  syntax:
    content: public static class MapRouteRouteBuilderExtensions
    content.vb: Public Module MapRouteRouteBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  id: MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapRoute(IRouteBuilder, String, String)
  nameWithType: MapRouteRouteBuilderExtensions.MapRoute(IRouteBuilder, String, String)
  fullName: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapRoute
    path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a route to the <xref href=\"Microsoft.AspNetCore.Routing.IRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref> with the specified name and template.\n"
  example: []
  syntax:
    content: public static IRouteBuilder MapRoute(this IRouteBuilder routeBuilder, string name, string template)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapRoute(routeBuilder As IRouteBuilder, name As String, template As String) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: The <xref href="Microsoft.AspNetCore.Routing.IRouteBuilder" data-throw-if-not-resolved="false"></xref> to add the route to.
    - id: name
      type: System.String
      description: The name of the route.
    - id: template
      type: System.String
      description: The URL pattern of the route.
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  id: MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapRoute(IRouteBuilder, String, String, Object)
  nameWithType: MapRouteRouteBuilderExtensions.MapRoute(IRouteBuilder, String, String, Object)
  fullName: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapRoute
    path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a route to the <xref href=\"Microsoft.AspNetCore.Routing.IRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref> with the specified name, template, and default values.\n"
  example: []
  syntax:
    content: public static IRouteBuilder MapRoute(this IRouteBuilder routeBuilder, string name, string template, object defaults)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapRoute(routeBuilder As IRouteBuilder, name As String, template As String, defaults As Object) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: The <xref href="Microsoft.AspNetCore.Routing.IRouteBuilder" data-throw-if-not-resolved="false"></xref> to add the route to.
    - id: name
      type: System.String
      description: The name of the route.
    - id: template
      type: System.String
      description: The URL pattern of the route.
    - id: defaults
      type: System.Object
      description: "\nAn object that contains default values for route parameters. The object's properties represent the names \nand values of the default values.\n"
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  id: MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapRoute(IRouteBuilder, String, String, Object, Object)
  nameWithType: MapRouteRouteBuilderExtensions.MapRoute(IRouteBuilder, String, String, Object, Object)
  fullName: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapRoute
    path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a route to the <xref href=\"Microsoft.AspNetCore.Routing.IRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref> with the specified name, template, default values, and\nconstraints.\n"
  example: []
  syntax:
    content: public static IRouteBuilder MapRoute(this IRouteBuilder routeBuilder, string name, string template, object defaults, object constraints)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapRoute(routeBuilder As IRouteBuilder, name As String, template As String, defaults As Object, constraints As Object) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: The <xref href="Microsoft.AspNetCore.Routing.IRouteBuilder" data-throw-if-not-resolved="false"></xref> to add the route to.
    - id: name
      type: System.String
      description: The name of the route.
    - id: template
      type: System.String
      description: The URL pattern of the route.
    - id: defaults
      type: System.Object
      description: "\nAn object that contains default values for route parameters. The object's properties represent the names\nand values of the default values.\n"
    - id: constraints
      type: System.Object
      description: "\nAn object that contains constraints for the route. The object's properties represent the names and values\nof the constraints.\n"
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  id: MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapRoute(IRouteBuilder, String, String, Object, Object, Object)
  nameWithType: MapRouteRouteBuilderExtensions.MapRoute(IRouteBuilder, String, String, Object, Object, Object)
  fullName: Microsoft.AspNetCore.Builder.MapRouteRouteBuilderExtensions.MapRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: MapRoute
    path: src/Microsoft.AspNetCore.Routing/MapRouteRouteBuilderExtensions.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds a route to the <xref href=\"Microsoft.AspNetCore.Routing.IRouteBuilder\" data-throw-if-not-resolved=\"false\"></xref> with the specified name, template, default values, and\ndata tokens.\n"
  example: []
  syntax:
    content: public static IRouteBuilder MapRoute(this IRouteBuilder routeBuilder, string name, string template, object defaults, object constraints, object dataTokens)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapRoute(routeBuilder As IRouteBuilder, name As String, template As String, defaults As Object, constraints As Object, dataTokens As Object) As IRouteBuilder
    parameters:
    - id: routeBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: The <xref href="Microsoft.AspNetCore.Routing.IRouteBuilder" data-throw-if-not-resolved="false"></xref> to add the route to.
    - id: name
      type: System.String
      description: The name of the route.
    - id: template
      type: System.String
      description: The URL pattern of the route.
    - id: defaults
      type: System.Object
      description: "\nAn object that contains default values for route parameters. The object's properties represent the names\nand values of the default values.\n"
    - id: constraints
      type: System.Object
      description: "\nAn object that contains constraints for the route. The object's properties represent the names and values\nof the constraints.\n"
    - id: dataTokens
      type: System.Object
      description: "\nAn object that contains data tokens for the route. The object's properties represent the names and values\nof the data tokens.\n"
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Routing.IRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.IRouteBuilder
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteBuilder
  nameWithType: IRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.IRouteBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
