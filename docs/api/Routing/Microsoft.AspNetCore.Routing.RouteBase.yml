### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.RouteBase
  commentId: T:Microsoft.AspNetCore.Routing.RouteBase
  id: RouteBase
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.RouteBase.#ctor(System.String,System.String,Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.RouteBase.ConstraintResolver
  - Microsoft.AspNetCore.Routing.RouteBase.Constraints
  - Microsoft.AspNetCore.Routing.RouteBase.DataTokens
  - Microsoft.AspNetCore.Routing.RouteBase.Defaults
  - Microsoft.AspNetCore.Routing.RouteBase.GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.AspNetCore.Routing.RouteBase.GetDefaults(Microsoft.AspNetCore.Routing.Template.RouteTemplate,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.RouteBase.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  - Microsoft.AspNetCore.Routing.RouteBase.Name
  - Microsoft.AspNetCore.Routing.RouteBase.OnRouteMatched(Microsoft.AspNetCore.Routing.RouteContext)
  - Microsoft.AspNetCore.Routing.RouteBase.OnVirtualPathGenerated(Microsoft.AspNetCore.Routing.VirtualPathContext)
  - Microsoft.AspNetCore.Routing.RouteBase.ParsedTemplate
  - Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  - Microsoft.AspNetCore.Routing.RouteBase.ToString
  langs:
  - csharp
  - vb
  name: RouteBase
  nameWithType: RouteBase
  fullName: Microsoft.AspNetCore.Routing.RouteBase
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteBase
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: 'public abstract class RouteBase : INamedRouter, IRouter'
    content.vb: >-
      Public MustInherit Class RouteBase
          Implements INamedRouter, IRouter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Routing.INamedRouter
  - Microsoft.AspNetCore.Routing.IRouter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Routing.RouteBase.#ctor(System.String,System.String,Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.#ctor(System.String,System.String,Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: '#ctor(System.String,System.String,Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNetCore.Routing.RouteValueDictionary)'
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: RouteBase(String, String, IInlineConstraintResolver, RouteValueDictionary, IDictionary<String, Object>, RouteValueDictionary)
  nameWithType: RouteBase.RouteBase(String, String, IInlineConstraintResolver, RouteValueDictionary, IDictionary<String, Object>, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.RouteBase(System.String, System.String, Microsoft.AspNetCore.Routing.IInlineConstraintResolver, Microsoft.AspNetCore.Routing.RouteValueDictionary, System.Collections.Generic.IDictionary<System.String, System.Object>, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public RouteBase(string template, string name, IInlineConstraintResolver constraintResolver, RouteValueDictionary defaults, IDictionary<string, object> constraints, RouteValueDictionary dataTokens)
    content.vb: Public Sub New(template As String, name As String, constraintResolver As IInlineConstraintResolver, defaults As RouteValueDictionary, constraints As IDictionary(Of String, Object), dataTokens As RouteValueDictionary)
    parameters:
    - id: template
      type: System.String
    - id: name
      type: System.String
    - id: constraintResolver
      type: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
    - id: defaults
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
    - id: constraints
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: dataTokens
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  nameWithType.vb: RouteBase.RouteBase(String, String, IInlineConstraintResolver, RouteValueDictionary, IDictionary(Of String, Object), RouteValueDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.RouteBase.RouteBase(System.String, System.String, Microsoft.AspNetCore.Routing.IInlineConstraintResolver, Microsoft.AspNetCore.Routing.RouteValueDictionary, System.Collections.Generic.IDictionary(Of System.String, System.Object), Microsoft.AspNetCore.Routing.RouteValueDictionary)
  name.vb: RouteBase(String, String, IInlineConstraintResolver, RouteValueDictionary, IDictionary(Of String, Object), RouteValueDictionary)
- uid: Microsoft.AspNetCore.Routing.RouteBase.Constraints
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.Constraints
  id: Constraints
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: RouteBase.Constraints
  fullName: Microsoft.AspNetCore.Routing.RouteBase.Constraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Constraints
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual IDictionary<string, IRouteConstraint> Constraints { get; protected set; }
    content.vb: Public Overridable Property Constraints As IDictionary(Of String, IRouteConstraint)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Routing.RouteBase.ConstraintResolver
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.ConstraintResolver
  id: ConstraintResolver
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: ConstraintResolver
  nameWithType: RouteBase.ConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.RouteBase.ConstraintResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: ConstraintResolver
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: protected virtual IInlineConstraintResolver ConstraintResolver { get; set; }
    content.vb: Protected Overridable Property ConstraintResolver As IInlineConstraintResolver
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  modifiers.csharp:
  - protected
  - virtual
  - get
  - set
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Routing.RouteBase.DataTokens
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.DataTokens
  id: DataTokens
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: DataTokens
  nameWithType: RouteBase.DataTokens
  fullName: Microsoft.AspNetCore.Routing.RouteBase.DataTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: DataTokens
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual RouteValueDictionary DataTokens { get; protected set; }
    content.vb: Public Overridable Property DataTokens As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Routing.RouteBase.Defaults
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.Defaults
  id: Defaults
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: Defaults
  nameWithType: RouteBase.Defaults
  fullName: Microsoft.AspNetCore.Routing.RouteBase.Defaults
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Defaults
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual RouteValueDictionary Defaults { get; protected set; }
    content.vb: Public Overridable Property Defaults As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Routing.RouteBase.Name
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.Name
  id: Name
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RouteBase.Name
  fullName: Microsoft.AspNetCore.Routing.RouteBase.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Name
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual string Name { get; protected set; }
    content.vb: Public Overridable Property Name As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.AspNetCore.Routing.INamedRouter.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Routing.RouteBase.ParsedTemplate
  commentId: P:Microsoft.AspNetCore.Routing.RouteBase.ParsedTemplate
  id: ParsedTemplate
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: ParsedTemplate
  nameWithType: RouteBase.ParsedTemplate
  fullName: Microsoft.AspNetCore.Routing.RouteBase.ParsedTemplate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: ParsedTemplate
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public virtual RouteTemplate ParsedTemplate { get; protected set; }
    content.vb: Public Overridable Property ParsedTemplate As RouteTemplate
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Routing.RouteBase.OnRouteMatched(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.OnRouteMatched(Microsoft.AspNetCore.Routing.RouteContext)
  id: OnRouteMatched(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: OnRouteMatched(RouteContext)
  nameWithType: RouteBase.OnRouteMatched(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.OnRouteMatched(Microsoft.AspNetCore.Routing.RouteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: OnRouteMatched
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: protected abstract Task OnRouteMatched(RouteContext context)
    content.vb: Protected MustOverride Function OnRouteMatched(context As RouteContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.RouteContext
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.AspNetCore.Routing.RouteBase.OnVirtualPathGenerated(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.OnVirtualPathGenerated(Microsoft.AspNetCore.Routing.VirtualPathContext)
  id: OnVirtualPathGenerated(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: OnVirtualPathGenerated(VirtualPathContext)
  nameWithType: RouteBase.OnVirtualPathGenerated(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.OnVirtualPathGenerated(Microsoft.AspNetCore.Routing.VirtualPathContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: OnVirtualPathGenerated
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: protected abstract VirtualPathData OnVirtualPathGenerated(VirtualPathContext context)
    content.vb: Protected MustOverride Function OnVirtualPathGenerated(context As VirtualPathContext) As VirtualPathData
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.VirtualPathContext
    return:
      type: Microsoft.AspNetCore.Routing.VirtualPathData
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  id: RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: RouteAsync(RouteContext)
  nameWithType: RouteBase.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteAsync
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  example: []
  syntax:
    content: public virtual Task RouteAsync(RouteContext context)
    content.vb: Public Overridable Function RouteAsync(context As RouteContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.RouteContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Routing.RouteBase.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  id: GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: GetVirtualPath(VirtualPathContext)
  nameWithType: RouteBase.GetVirtualPath(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetVirtualPath
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  example: []
  syntax:
    content: public virtual VirtualPathData GetVirtualPath(VirtualPathContext context)
    content.vb: Public Overridable Function GetVirtualPath(context As VirtualPathContext) As VirtualPathData
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.VirtualPathContext
    return:
      type: Microsoft.AspNetCore.Routing.VirtualPathData
  implements:
  - Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Routing.RouteBase.GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver,Microsoft.AspNetCore.Routing.Template.RouteTemplate,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: GetConstraints(IInlineConstraintResolver, RouteTemplate, IDictionary<String, Object>)
  nameWithType: RouteBase.GetConstraints(IInlineConstraintResolver, RouteTemplate, IDictionary<String, Object>)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver, Microsoft.AspNetCore.Routing.Template.RouteTemplate, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetConstraints
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 168
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: protected static IDictionary<string, IRouteConstraint> GetConstraints(IInlineConstraintResolver inlineConstraintResolver, RouteTemplate parsedTemplate, IDictionary<string, object> constraints)
    content.vb: Protected Shared Function GetConstraints(inlineConstraintResolver As IInlineConstraintResolver, parsedTemplate As RouteTemplate, constraints As IDictionary(Of String, Object)) As IDictionary(Of String, IRouteConstraint)
    parameters:
    - id: inlineConstraintResolver
      type: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
    - id: parsedTemplate
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
    - id: constraints
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  nameWithType.vb: RouteBase.GetConstraints(IInlineConstraintResolver, RouteTemplate, IDictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Microsoft.AspNetCore.Routing.RouteBase.GetConstraints(Microsoft.AspNetCore.Routing.IInlineConstraintResolver, Microsoft.AspNetCore.Routing.Template.RouteTemplate, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: GetConstraints(IInlineConstraintResolver, RouteTemplate, IDictionary(Of String, Object))
- uid: Microsoft.AspNetCore.Routing.RouteBase.GetDefaults(Microsoft.AspNetCore.Routing.Template.RouteTemplate,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.GetDefaults(Microsoft.AspNetCore.Routing.Template.RouteTemplate,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: GetDefaults(Microsoft.AspNetCore.Routing.Template.RouteTemplate,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: GetDefaults(RouteTemplate, RouteValueDictionary)
  nameWithType: RouteBase.GetDefaults(RouteTemplate, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.RouteBase.GetDefaults(Microsoft.AspNetCore.Routing.Template.RouteTemplate, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetDefaults
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 199
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: protected static RouteValueDictionary GetDefaults(RouteTemplate parsedTemplate, RouteValueDictionary defaults)
    content.vb: Protected Shared Function GetDefaults(parsedTemplate As RouteTemplate, defaults As RouteValueDictionary) As RouteValueDictionary
    parameters:
    - id: parsedTemplate
      type: Microsoft.AspNetCore.Routing.Template.RouteTemplate
    - id: defaults
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Routing.RouteBase.ToString
  commentId: M:Microsoft.AspNetCore.Routing.RouteBase.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Routing.RouteBase
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RouteBase.ToString()
  fullName: Microsoft.AspNetCore.Routing.RouteBase.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: ToString
    path: src/Microsoft.AspNetCore.Routing/RouteBase.cs
    startLine: 266
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Routing.INamedRouter
  commentId: T:Microsoft.AspNetCore.Routing.INamedRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: INamedRouter
  nameWithType: INamedRouter
  fullName: Microsoft.AspNetCore.Routing.INamedRouter
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IInlineConstraintResolver
  nameWithType: IInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Routing.IRouteConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IRouteConstraint>
  nameWithType: IDictionary<String, IRouteConstraint>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.AspNetCore.Routing.IRouteConstraint>
  nameWithType.vb: IDictionary(Of String, IRouteConstraint)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.AspNetCore.Routing.IRouteConstraint)
  name.vb: IDictionary(Of String, IRouteConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Routing.IRouteConstraint
    name: IRouteConstraint
    nameWithType: IRouteConstraint
    fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.INamedRouter.Name
  commentId: P:Microsoft.AspNetCore.Routing.INamedRouter.Name
  parent: Microsoft.AspNetCore.Routing.INamedRouter
  isExternal: false
  name: Name
  nameWithType: INamedRouter.Name
  fullName: Microsoft.AspNetCore.Routing.INamedRouter.Name
- uid: Microsoft.AspNetCore.Routing.Template.RouteTemplate
  commentId: T:Microsoft.AspNetCore.Routing.Template.RouteTemplate
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: RouteTemplate
  nameWithType: RouteTemplate
  fullName: Microsoft.AspNetCore.Routing.Template.RouteTemplate
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: Microsoft.AspNetCore.Routing.RouteContext
  commentId: T:Microsoft.AspNetCore.Routing.RouteContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteContext
  nameWithType: RouteContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
- uid: Microsoft.AspNetCore.Routing.VirtualPathData
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData
- uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.IRouter
  isExternal: false
  name: RouteAsync(RouteContext)
  nameWithType: IRouter.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.IRouter
  isExternal: false
  name: GetVirtualPath(VirtualPathContext)
  nameWithType: IRouter.GetVirtualPath(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
    name: GetVirtualPath
    nameWithType: IRouter.GetVirtualPath
    fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.VirtualPathContext
    name: VirtualPathContext
    nameWithType: VirtualPathContext
    fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
    name: GetVirtualPath
    nameWithType: IRouter.GetVirtualPath
    fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.VirtualPathContext
    name: VirtualPathContext
    nameWithType: VirtualPathContext
    fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
