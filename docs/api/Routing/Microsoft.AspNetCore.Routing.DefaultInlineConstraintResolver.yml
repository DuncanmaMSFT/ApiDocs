### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  id: DefaultInlineConstraintResolver
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions})
  - Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)
  langs:
  - csharp
  - vb
  name: DefaultInlineConstraintResolver
  nameWithType: DefaultInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: DefaultInlineConstraintResolver
    path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nThe default implementation of <xref href=\"Microsoft.AspNetCore.Routing.IInlineConstraintResolver\" data-throw-if-not-resolved=\"false\"></xref>. Resolves constraints by parsing\na constraint key and constraint arguments, using a map to resolve the constraint type, and calling an\nappropriate constructor for the constraint type.\n"
  example: []
  syntax:
    content: 'public class DefaultInlineConstraintResolver : IInlineConstraintResolver'
    content.vb: >-
      Public Class DefaultInlineConstraintResolver
          Implements IInlineConstraintResolver
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions})
  commentId: M:Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions})'
  parent: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  langs:
  - csharp
  - vb
  name: DefaultInlineConstraintResolver(IOptions<RouteOptions>)
  nameWithType: DefaultInlineConstraintResolver.DefaultInlineConstraintResolver(IOptions<RouteOptions>)
  fullName: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.DefaultInlineConstraintResolver(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Routing.RouteOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DefaultInlineConstraintResolver(IOptions<RouteOptions> routeOptions)
    content.vb: Public Sub New(routeOptions As IOptions(Of RouteOptions))
    parameters:
    - id: routeOptions
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions}
      description: "\nAccessor for <xref href=\"Microsoft.AspNetCore.Routing.RouteOptions\" data-throw-if-not-resolved=\"false\"></xref> containing the constraints of interest.\n"
  nameWithType.vb: DefaultInlineConstraintResolver.DefaultInlineConstraintResolver(IOptions(Of RouteOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.DefaultInlineConstraintResolver(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Routing.RouteOptions))
  name.vb: DefaultInlineConstraintResolver(IOptions(Of RouteOptions))
- uid: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)
  id: ResolveConstraint(System.String)
  parent: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  langs:
  - csharp
  - vb
  name: ResolveConstraint(String)
  nameWithType: DefaultInlineConstraintResolver.ResolveConstraint(String)
  fullName: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: ResolveConstraint
    path: src/Microsoft.AspNetCore.Routing/DefaultInlineConstraintResolver.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing
  example:
  - "\nA typical constraint looks like the following\n\"exampleConstraint(arg1, arg2, 12)\".\nHere if the type registered for exampleConstraint has a single constructor with one argument,\nThe entire string \"arg1, arg2, 12\" will be treated as a single argument.\nIn all other cases arguments are split at comma.\n"
  syntax:
    content: public virtual IRouteConstraint ResolveConstraint(string inlineConstraint)
    content.vb: Public Overridable Function ResolveConstraint(inlineConstraint As String) As IRouteConstraint
    parameters:
    - id: inlineConstraint
      type: System.String
    return:
      type: Microsoft.AspNetCore.Routing.IRouteConstraint
  implements:
  - Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IInlineConstraintResolver
  nameWithType: IInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  commentId: T:Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
  isExternal: false
  name: DefaultInlineConstraintResolver
  nameWithType: DefaultInlineConstraintResolver
  fullName: Microsoft.AspNetCore.Routing.DefaultInlineConstraintResolver
- uid: Microsoft.AspNetCore.Routing.RouteOptions
  commentId: T:Microsoft.AspNetCore.Routing.RouteOptions
  isExternal: false
  name: RouteOptions
  nameWithType: RouteOptions
  fullName: Microsoft.AspNetCore.Routing.RouteOptions
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Routing.RouteOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<RouteOptions>
  nameWithType: IOptions<RouteOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Routing.RouteOptions>
  nameWithType.vb: IOptions(Of RouteOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Routing.RouteOptions)
  name.vb: IOptions(Of RouteOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.RouteOptions
    name: RouteOptions
    nameWithType: RouteOptions
    fullName: Microsoft.AspNetCore.Routing.RouteOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.RouteOptions
    name: RouteOptions
    nameWithType: RouteOptions
    fullName: Microsoft.AspNetCore.Routing.RouteOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
  parent: Microsoft.AspNetCore.Routing.IInlineConstraintResolver
  isExternal: true
  name: ResolveConstraint(String)
  nameWithType: IInlineConstraintResolver.ResolveConstraint(String)
  fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
    name: ResolveConstraint
    nameWithType: IInlineConstraintResolver.ResolveConstraint
    fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)
    name: ResolveConstraint
    nameWithType: IInlineConstraintResolver.ResolveConstraint
    fullName: Microsoft.AspNetCore.Routing.IInlineConstraintResolver.ResolveConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.IRouteConstraint
  commentId: T:Microsoft.AspNetCore.Routing.IRouteConstraint
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouteConstraint
  nameWithType: IRouteConstraint
  fullName: Microsoft.AspNetCore.Routing.IRouteConstraint
