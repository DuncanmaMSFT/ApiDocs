### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplatePart
  id: TemplatePart
  parent: Microsoft.AspNetCore.Routing.Template
  children:
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateLiteral(System.String)
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateParameter(System.String,System.Boolean,System.Boolean,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint})
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.DefaultValue
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.InlineConstraints
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.IsCatchAll
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.IsLiteral
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptional
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptionalSeperator
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.IsParameter
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.Name
  - Microsoft.AspNetCore.Routing.Template.TemplatePart.Text
  langs:
  - csharp
  - vb
  name: TemplatePart
  nameWithType: TemplatePart
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TemplatePart
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public class TemplatePart
    content.vb: Public Class TemplatePart
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateLiteral(System.String)
  commentId: M:Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateLiteral(System.String)
  id: CreateLiteral(System.String)
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: CreateLiteral(String)
  nameWithType: TemplatePart.CreateLiteral(String)
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateLiteral(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: CreateLiteral
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public static TemplatePart CreateLiteral(string text)
    content.vb: Public Shared Function CreateLiteral(text As String) As TemplatePart
    parameters:
    - id: text
      type: System.String
    return:
      type: Microsoft.AspNetCore.Routing.Template.TemplatePart
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateParameter(System.String,System.Boolean,System.Boolean,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint})
  commentId: M:Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateParameter(System.String,System.Boolean,System.Boolean,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint})
  id: CreateParameter(System.String,System.Boolean,System.Boolean,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint})
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: CreateParameter(String, Boolean, Boolean, Object, IEnumerable<InlineConstraint>)
  nameWithType: TemplatePart.CreateParameter(String, Boolean, Boolean, Object, IEnumerable<InlineConstraint>)
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateParameter(System.String, System.Boolean, System.Boolean, System.Object, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Routing.Template.InlineConstraint>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: CreateParameter
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public static TemplatePart CreateParameter(string name, bool isCatchAll, bool isOptional, object defaultValue, IEnumerable<InlineConstraint> inlineConstraints)
    content.vb: Public Shared Function CreateParameter(name As String, isCatchAll As Boolean, isOptional As Boolean, defaultValue As Object, inlineConstraints As IEnumerable(Of InlineConstraint)) As TemplatePart
    parameters:
    - id: name
      type: System.String
    - id: isCatchAll
      type: System.Boolean
    - id: isOptional
      type: System.Boolean
    - id: defaultValue
      type: System.Object
    - id: inlineConstraints
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint}
    return:
      type: Microsoft.AspNetCore.Routing.Template.TemplatePart
  nameWithType.vb: TemplatePart.CreateParameter(String, Boolean, Boolean, Object, IEnumerable(Of InlineConstraint))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Routing.Template.TemplatePart.CreateParameter(System.String, System.Boolean, System.Boolean, System.Object, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Routing.Template.InlineConstraint))
  name.vb: CreateParameter(String, Boolean, Boolean, Object, IEnumerable(Of InlineConstraint))
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsCatchAll
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.IsCatchAll
  id: IsCatchAll
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: IsCatchAll
  nameWithType: TemplatePart.IsCatchAll
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsCatchAll
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: IsCatchAll
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool IsCatchAll { get; }
    content.vb: Public ReadOnly Property IsCatchAll As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsLiteral
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.IsLiteral
  id: IsLiteral
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: IsLiteral
  nameWithType: TemplatePart.IsLiteral
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsLiteral
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: IsLiteral
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool IsLiteral { get; }
    content.vb: Public ReadOnly Property IsLiteral As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsParameter
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.IsParameter
  id: IsParameter
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: IsParameter
  nameWithType: TemplatePart.IsParameter
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsParameter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: IsParameter
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool IsParameter { get; }
    content.vb: Public ReadOnly Property IsParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptional
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptional
  id: IsOptional
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: TemplatePart.IsOptional
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptional
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: IsOptional
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool IsOptional { get; }
    content.vb: Public ReadOnly Property IsOptional As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptionalSeperator
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptionalSeperator
  id: IsOptionalSeperator
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: IsOptionalSeperator
  nameWithType: TemplatePart.IsOptionalSeperator
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.IsOptionalSeperator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: IsOptionalSeperator
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public bool IsOptionalSeperator { get; set; }
    content.vb: Public Property IsOptionalSeperator As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.Name
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.Name
  id: Name
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TemplatePart.Name
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Name
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.Text
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.Text
  id: Text
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TemplatePart.Text
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.Text
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Text
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public string Text { get; }
    content.vb: Public ReadOnly Property Text As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.DefaultValue
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.DefaultValue
  id: DefaultValue
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: TemplatePart.DefaultValue
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.DefaultValue
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: DefaultValue
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public object DefaultValue { get; }
    content.vb: Public ReadOnly Property DefaultValue As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart.InlineConstraints
  commentId: P:Microsoft.AspNetCore.Routing.Template.TemplatePart.InlineConstraints
  id: InlineConstraints
  parent: Microsoft.AspNetCore.Routing.Template.TemplatePart
  langs:
  - csharp
  - vb
  name: InlineConstraints
  nameWithType: TemplatePart.InlineConstraints
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart.InlineConstraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: InlineConstraints
    path: src/Microsoft.AspNetCore.Routing/Template/TemplatePart.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Template
  syntax:
    content: public IEnumerable<InlineConstraint> InlineConstraints { get; }
    content.vb: Public ReadOnly Property InlineConstraints As IEnumerable(Of InlineConstraint)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Routing.Template
  commentId: N:Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Template
  nameWithType: Microsoft.AspNetCore.Routing.Template
  fullName: Microsoft.AspNetCore.Routing.Template
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.Template.TemplatePart
  commentId: T:Microsoft.AspNetCore.Routing.Template.TemplatePart
  parent: Microsoft.AspNetCore.Routing.Template
  isExternal: false
  name: TemplatePart
  nameWithType: TemplatePart
  fullName: Microsoft.AspNetCore.Routing.Template.TemplatePart
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Template.InlineConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<InlineConstraint>
  nameWithType: IEnumerable<InlineConstraint>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Routing.Template.InlineConstraint>
  nameWithType.vb: IEnumerable(Of InlineConstraint)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Routing.Template.InlineConstraint)
  name.vb: IEnumerable(Of InlineConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Template.InlineConstraint
    name: InlineConstraint
    nameWithType: InlineConstraint
    fullName: Microsoft.AspNetCore.Routing.Template.InlineConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Template.InlineConstraint
    name: InlineConstraint
    nameWithType: InlineConstraint
    fullName: Microsoft.AspNetCore.Routing.Template.InlineConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
