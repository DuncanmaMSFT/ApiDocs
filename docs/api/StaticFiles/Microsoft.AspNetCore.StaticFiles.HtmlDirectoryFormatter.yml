### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter
  commentId: T:Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter
  id: HtmlDirectoryFormatter
  parent: Microsoft.AspNetCore.StaticFiles
  children:
  - Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  - Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  langs:
  - csharp
  - vb
  name: HtmlDirectoryFormatter
  nameWithType: HtmlDirectoryFormatter
  fullName: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: HtmlDirectoryFormatter
    path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nGenerates an HTML view for a directory.\n"
  example: []
  syntax:
    content: 'public class HtmlDirectoryFormatter : IDirectoryFormatter'
    content.vb: >-
      Public Class HtmlDirectoryFormatter
          Implements IDirectoryFormatter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  id: '#ctor(System.Text.Encodings.Web.HtmlEncoder)'
  parent: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter
  langs:
  - csharp
  - vb
  name: HtmlDirectoryFormatter(HtmlEncoder)
  nameWithType: HtmlDirectoryFormatter.HtmlDirectoryFormatter(HtmlEncoder)
  fullName: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.HtmlDirectoryFormatter(System.Text.Encodings.Web.HtmlEncoder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: .ctor
    path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  syntax:
    content: public HtmlDirectoryFormatter(HtmlEncoder encoder)
    content.vb: Public Sub New(encoder As HtmlEncoder)
    parameters:
    - id: encoder
      type: System.Text.Encodings.Web.HtmlEncoder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  commentId: M:Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  id: GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  parent: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter
  langs:
  - csharp
  - vb
  name: GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  nameWithType: HtmlDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  fullName: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: GenerateContentAsync
    path: src/Microsoft.AspNetCore.StaticFiles/HtmlDirectoryFormatter.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nGenerates an HTML view for a directory.\n"
  example: []
  syntax:
    content: public virtual Task GenerateContentAsync(HttpContext context, IEnumerable<IFileInfo> contents)
    content.vb: Public Overridable Function GenerateContentAsync(context As HttpContext, contents As IEnumerable(Of IFileInfo)) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: contents
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  nameWithType.vb: HtmlDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.StaticFiles.HtmlDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo))
  name.vb: GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
references:
- uid: Microsoft.AspNetCore.StaticFiles
  commentId: N:Microsoft.AspNetCore.StaticFiles
  isExternal: false
  name: Microsoft.AspNetCore.StaticFiles
  nameWithType: Microsoft.AspNetCore.StaticFiles
  fullName: Microsoft.AspNetCore.StaticFiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  commentId: T:Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  parent: Microsoft.AspNetCore.StaticFiles
  isExternal: false
  name: IDirectoryFormatter
  nameWithType: IDirectoryFormatter
  fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  commentId: M:Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  parent: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  isExternal: true
  name: GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  nameWithType: IDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>)
  nameWithType.vb: IDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
  fullname.vb: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo))
  name.vb: GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
  spec.csharp:
  - uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
    name: GenerateContentAsync
    nameWithType: IDirectoryFormatter.GenerateContentAsync
    fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
    name: GenerateContentAsync
    nameWithType: IDirectoryFormatter.GenerateContentAsync
    fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFileInfo>
  nameWithType: IEnumerable<IFileInfo>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>
  nameWithType.vb: IEnumerable(Of IFileInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo)
  name.vb: IEnumerable(Of IFileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
