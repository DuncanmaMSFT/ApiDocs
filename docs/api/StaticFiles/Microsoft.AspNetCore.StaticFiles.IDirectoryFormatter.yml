### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  commentId: T:Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  id: IDirectoryFormatter
  parent: Microsoft.AspNetCore.StaticFiles
  children:
  - Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  langs:
  - csharp
  - vb
  name: IDirectoryFormatter
  nameWithType: IDirectoryFormatter
  fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/IDirectoryFormatter.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: IDirectoryFormatter
    path: src/Microsoft.AspNetCore.StaticFiles/IDirectoryFormatter.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nGenerates the view for a directory\n"
  example: []
  syntax:
    content: public interface IDirectoryFormatter
    content.vb: Public Interface IDirectoryFormatter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  commentId: M:Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  id: GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo})
  parent: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter
  langs:
  - csharp
  - vb
  name: GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  nameWithType: IDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable<IFileInfo>)
  fullName: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.StaticFiles/IDirectoryFormatter.cs
      branch: master
      repo: https://github.com/aspnet/StaticFiles.git
    id: GenerateContentAsync
    path: src/Microsoft.AspNetCore.StaticFiles/IDirectoryFormatter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.StaticFiles
  namespace: Microsoft.AspNetCore.StaticFiles
  summary: "\nGenerates the view for a directory.\nImplementers should properly handle HEAD requests.\nImplementers should set all necessary response headers (e.g. Content-Type, Content-Length, etc.).\n"
  example: []
  syntax:
    content: Task GenerateContentAsync(HttpContext context, IEnumerable<IFileInfo> contents)
    content.vb: Function GenerateContentAsync(context As HttpContext, contents As IEnumerable(Of IFileInfo)) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: contents
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: IDirectoryFormatter.GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
  fullName.vb: Microsoft.AspNetCore.StaticFiles.IDirectoryFormatter.GenerateContentAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo))
  name.vb: GenerateContentAsync(HttpContext, IEnumerable(Of IFileInfo))
references:
- uid: Microsoft.AspNetCore.StaticFiles
  commentId: N:Microsoft.AspNetCore.StaticFiles
  isExternal: false
  name: Microsoft.AspNetCore.StaticFiles
  nameWithType: Microsoft.AspNetCore.StaticFiles
  fullName: Microsoft.AspNetCore.StaticFiles
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFileInfo>
  nameWithType: IEnumerable<IFileInfo>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>
  nameWithType.vb: IEnumerable(Of IFileInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo)
  name.vb: IEnumerable(Of IFileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
