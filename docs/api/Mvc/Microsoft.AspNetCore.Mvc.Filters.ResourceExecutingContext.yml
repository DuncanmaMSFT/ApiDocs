### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  id: ResourceExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ValueProviderFactories
  langs:
  - csharp
  - vb
  name: ResourceExecutingContext
  nameWithType: ResourceExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResourceExecutingContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA context for resource filters, specifically <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext%2cMicrosoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)\" data-throw-if-not-resolved=\"false\"></xref> calls.\n"
  example: []
  syntax:
    content: 'public class ResourceExecutingContext : FilterContext'
    content.vb: >-
      Public Class ResourceExecutingContext
          Inherits FilterContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionContext
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  - Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  - Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  - Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  - Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})'
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  langs:
  - csharp
  - vb
  name: ResourceExecutingContext(ActionContext, IList<IFilterMetadata>, IList<IValueProviderFactory>)
  nameWithType: ResourceExecutingContext.ResourceExecutingContext(ActionContext, IList<IFilterMetadata>, IList<IValueProviderFactory>)
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ResourceExecutingContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResourceExecutingContext(ActionContext actionContext, IList<IFilterMetadata> filters, IList<IValueProviderFactory> valueProviderFactories)
    content.vb: Public Sub New(actionContext As ActionContext, filters As IList(Of IFilterMetadata), valueProviderFactories As IList(Of IValueProviderFactory))
    parameters:
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: filters
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
      description: The list of <xref href="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" data-throw-if-not-resolved="false"></xref> instances.
    - id: valueProviderFactories
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
      description: The list of <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory" data-throw-if-not-resolved="false"></xref> instances.
  nameWithType.vb: ResourceExecutingContext.ResourceExecutingContext(ActionContext, IList(Of IFilterMetadata), IList(Of IValueProviderFactory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ResourceExecutingContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata), System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory))
  name.vb: ResourceExecutingContext(ActionContext, IList(Of IFilterMetadata), IList(Of IValueProviderFactory))
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  id: Result
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ResourceExecutingContext.Result
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Result
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets the result of the action to be executed.\n"
  remarks: "\nSetting <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result\" data-throw-if-not-resolved=\"false\"></xref> to a non-<code>null</code> value inside a resource filter will\nshort-circuit execution of additional resource filters and the action itself.\n"
  example: []
  syntax:
    content: public virtual IActionResult Result { get; set; }
    content.vb: Public Overridable Property Result As IActionResult
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ValueProviderFactories
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ValueProviderFactories
  id: ValueProviderFactories
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  langs:
  - csharp
  - vb
  name: ValueProviderFactories
  nameWithType: ResourceExecutingContext.ValueProviderFactories
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ValueProviderFactories
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderFactories
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutingContext.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory\" data-throw-if-not-resolved=\"false\"></xref> instances used by model binding.\n"
  example: []
  syntax:
    content: public IList<IValueProviderFactory> ValueProviderFactories { get; }
    content.vb: Public ReadOnly Property ValueProviderFactories As IList(Of IValueProviderFactory)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)
  parent: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  isExternal: false
  name: OnResourceExecuting(ResourceExecutingContext)
  nameWithType: IResourceFilter.OnResourceExecuting(ResourceExecutingContext)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)
    name: OnResourceExecuting
    nameWithType: IResourceFilter.OnResourceExecuting
    fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
    name: ResourceExecutingContext
    nameWithType: ResourceExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)
    name: OnResourceExecuting
    nameWithType: IResourceFilter.OnResourceExecuting
    fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
    name: ResourceExecutingContext
    nameWithType: ResourceExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterContext
  nameWithType: FilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  isExternal: false
  name: Filters
  nameWithType: FilterContext.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionContext.ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: HttpContext
  nameWithType: ActionContext.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ModelState
  nameWithType: ActionContext.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
- uid: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: RouteData
  nameWithType: ActionContext.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IResourceFilter
  nameWithType: IResourceFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResourceExecutingContext
  nameWithType: ResourceExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProviderFactory
  nameWithType: IValueProviderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFilterMetadata>
  nameWithType: IList<IFilterMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>
  nameWithType.vb: IList(Of IFilterMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  name.vb: IList(Of IFilterMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IValueProviderFactory>
  nameWithType: IList<IValueProviderFactory>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory>
  nameWithType.vb: IList(Of IValueProviderFactory)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory)
  name.vb: IList(Of IValueProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
