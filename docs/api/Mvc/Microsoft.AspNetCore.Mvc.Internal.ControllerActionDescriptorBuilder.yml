### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder
  id: ControllerActionDescriptorBuilder
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.AddRouteValues(System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.Build(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)
  langs:
  - csharp
  - vb
  name: ControllerActionDescriptorBuilder
  nameWithType: ControllerActionDescriptorBuilder
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerActionDescriptorBuilder
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates instances of <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ControllerActionDescriptorBuilder
    content.vb: Public Module ControllerActionDescriptorBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.Build(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.Build(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)
  id: Build(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder
  langs:
  - csharp
  - vb
  name: Build(ApplicationModel)
  nameWithType: ControllerActionDescriptorBuilder.Build(ApplicationModel)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.Build(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Build
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates instances of <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IList<ControllerActionDescriptor> Build(ApplicationModel application)
    content.vb: Public Shared Function Build(application As ApplicationModel) As IList(Of ControllerActionDescriptor)
    parameters:
    - id: application
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
      description: The <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor}
      description: The list of <xref href="Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.AddRouteValues(System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.AddRouteValues(System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  id: AddRouteValues(System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder
  langs:
  - csharp
  - vb
  name: AddRouteValues(ISet<String>, ControllerActionDescriptor, ControllerModel, ActionModel)
  nameWithType: ControllerActionDescriptorBuilder.AddRouteValues(ISet<String>, ControllerActionDescriptor, ControllerModel, ActionModel)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.AddRouteValues(System.Collections.Generic.ISet<System.String>, Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor, Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel, Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddRouteValues
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionDescriptorBuilder.cs
    startLine: 412
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AddRouteValues(ISet<string> keys, ControllerActionDescriptor actionDescriptor, ControllerModel controller, ActionModel action)
    content.vb: Public Shared Sub AddRouteValues(keys As ISet(Of String), actionDescriptor As ControllerActionDescriptor, controller As ControllerModel, action As ActionModel)
    parameters:
    - id: keys
      type: System.Collections.Generic.ISet{System.String}
    - id: actionDescriptor
      type: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
    - id: controller
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
    - id: action
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel
  nameWithType.vb: ControllerActionDescriptorBuilder.AddRouteValues(ISet(Of String), ControllerActionDescriptor, ControllerModel, ActionModel)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ControllerActionDescriptorBuilder.AddRouteValues(System.Collections.Generic.ISet(Of System.String), Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor, Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel, Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)
  name.vb: AddRouteValues(ISet(Of String), ControllerActionDescriptor, ControllerModel, ActionModel)
references:
- uid: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: ControllerActionDescriptor
  nameWithType: ControllerActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ApplicationModel
  nameWithType: ApplicationModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ControllerActionDescriptor>
  nameWithType: IList<ControllerActionDescriptor>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor>
  nameWithType.vb: IList(Of ControllerActionDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)
  name.vb: IList(Of ControllerActionDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
    name: ControllerActionDescriptor
    nameWithType: ControllerActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
    name: ControllerActionDescriptor
    nameWithType: ControllerActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullname.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ControllerModel
  nameWithType: ControllerModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ActionModel
  nameWithType: ActionModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
