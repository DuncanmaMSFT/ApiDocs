### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper
  id: ResponseContentTypeHelper
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String,System.String,System.String,System.String@,System.Text.Encoding@)
  langs:
  - csharp
  - vb
  name: ResponseContentTypeHelper
  nameWithType: ResponseContentTypeHelper
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseContentTypeHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResponseContentTypeHelper
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseContentTypeHelper.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static class ResponseContentTypeHelper
    content.vb: Public Module ResponseContentTypeHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String,System.String,System.String,System.String@,System.Text.Encoding@)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String,System.String,System.String,System.String@,System.Text.Encoding@)
  id: ResolveContentTypeAndEncoding(System.String,System.String,System.String,System.String@,System.Text.Encoding@)
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper
  langs:
  - csharp
  - vb
  name: ResolveContentTypeAndEncoding(String, String, String, out String, out Encoding)
  nameWithType: ResponseContentTypeHelper.ResolveContentTypeAndEncoding(String, String, String, out String, out Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String, System.String, System.String, out System.String, out System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseContentTypeHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResolveContentTypeAndEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseContentTypeHelper.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the content type and encoding that need to be used for the response.\nThe priority for selecting the content type is:\n1. ContentType property set on the action result\n2. <xref href=\"Microsoft.AspNetCore.Http.HttpResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property set on <xref href=\"Microsoft.AspNetCore.Http.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref>\n3. Default content type set on the action result\n"
  remarks: "\nThe user supplied content type is not modified and is used as is. For example, if user\nsets the content type to be \"text/plain\" without any encoding, then the default content type's\nencoding is used to write the response and the ContentType header is set to be \"text/plain\" without any\n\"charset\" information.\n"
  example: []
  syntax:
    content: public static void ResolveContentTypeAndEncoding(string actionResultContentType, string httpResponseContentType, string defaultContentType, out string resolvedContentType, out Encoding resolvedContentTypeEncoding)
    content.vb: Public Shared Sub ResolveContentTypeAndEncoding(actionResultContentType As String, httpResponseContentType As String, defaultContentType As String, ByRef resolvedContentType As String, ByRef resolvedContentTypeEncoding As Encoding)
    parameters:
    - id: actionResultContentType
      type: System.String
      description: ContentType set on the action result
    - id: httpResponseContentType
      type: System.String
      description: >-
        <xref href="Microsoft.AspNetCore.Http.HttpResponse.ContentType" data-throw-if-not-resolved="false"></xref> property set
            on <xref href="Microsoft.AspNetCore.Http.HttpResponse" data-throw-if-not-resolved="false"></xref>
    - id: defaultContentType
      type: System.String
      description: The default content type of the action result.
    - id: resolvedContentType
      type: System.String
      description: The content type to be used for the response content type header
    - id: resolvedContentTypeEncoding
      type: System.Text.Encoding
      description: Encoding to be used for writing the response
  nameWithType.vb: ResponseContentTypeHelper.ResolveContentTypeAndEncoding(String, String, String, ByRef String, ByRef Encoding)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String, System.String, System.String, ByRef System.String, ByRef System.Text.Encoding)
  name.vb: ResolveContentTypeAndEncoding(String, String, String, ByRef String, ByRef Encoding)
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HttpResponse.ContentType
  commentId: P:Microsoft.AspNetCore.Http.HttpResponse.ContentType
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
