### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult
  commentId: T:Microsoft.AspNetCore.Mvc.VirtualFileResult
  id: VirtualFileResult
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  - Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.VirtualFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  - Microsoft.AspNetCore.Mvc.VirtualFileResult.FileName
  - Microsoft.AspNetCore.Mvc.VirtualFileResult.FileProvider
  langs:
  - csharp
  - vb
  name: VirtualFileResult
  nameWithType: VirtualFileResult
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VirtualFileResult
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.FileResult\" data-throw-if-not-resolved=\"false\"></xref> that on execution writes the file specified using a virtual path to the response\nusing mechanisms provided by the host.\n"
  example: []
  syntax:
    content: 'public class VirtualFileResult : FileResult, IActionResult'
    content.vb: >-
      Public Class VirtualFileResult
          Inherits FileResult
          Implements IActionResult
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionResult
  - Microsoft.AspNetCore.Mvc.FileResult
  implements:
  - Microsoft.AspNetCore.Mvc.IActionResult
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.FileResult.ContentType
  - Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  - Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.AspNetCore.Mvc.VirtualFileResult
  langs:
  - csharp
  - vb
  name: VirtualFileResult(String, String)
  nameWithType: VirtualFileResult.VirtualFileResult(String, String)
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult.VirtualFileResult(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.VirtualFileResult\" data-throw-if-not-resolved=\"false\"></xref> instance with the provided <em>fileName</em>\nand the provided <em>contentType</em>.\n"
  example: []
  syntax:
    content: public VirtualFileResult(string fileName, string contentType)
    content.vb: Public Sub New(fileName As String, contentType As String)
    parameters:
    - id: fileName
      type: System.String
      description: The path to the file. The path must be relative/virtual.
    - id: contentType
      type: System.String
      description: The Content-Type header of the response.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  id: '#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)'
  parent: Microsoft.AspNetCore.Mvc.VirtualFileResult
  langs:
  - csharp
  - vb
  name: VirtualFileResult(String, MediaTypeHeaderValue)
  nameWithType: VirtualFileResult.VirtualFileResult(String, MediaTypeHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult.VirtualFileResult(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.VirtualFileResult\" data-throw-if-not-resolved=\"false\"></xref> instance with\nthe provided <em>fileName</em> and the\nprovided <em>contentType</em>.\n"
  example: []
  syntax:
    content: public VirtualFileResult(string fileName, MediaTypeHeaderValue contentType)
    content.vb: Public Sub New(fileName As String, contentType As MediaTypeHeaderValue)
    parameters:
    - id: fileName
      type: System.String
      description: The path to the file. The path must be relative/virtual.
    - id: contentType
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: The Content-Type header of the response.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult.FileName
  commentId: P:Microsoft.AspNetCore.Mvc.VirtualFileResult.FileName
  id: FileName
  parent: Microsoft.AspNetCore.Mvc.VirtualFileResult
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: VirtualFileResult.FileName
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult.FileName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileName
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the path to the file that will be sent back as the response.\n"
  example: []
  syntax:
    content: public string FileName { get; set; }
    content.vb: Public Property FileName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult.FileProvider
  commentId: P:Microsoft.AspNetCore.Mvc.VirtualFileResult.FileProvider
  id: FileProvider
  parent: Microsoft.AspNetCore.Mvc.VirtualFileResult
  langs:
  - csharp
  - vb
  name: FileProvider
  nameWithType: VirtualFileResult.FileProvider
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult.FileProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> used to resolve paths.\n"
  example: []
  syntax:
    content: public IFileProvider FileProvider { get; set; }
    content.vb: Public Property FileProvider As IFileProvider
    parameters: []
    return:
      type: Microsoft.Extensions.FileProviders.IFileProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.VirtualFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  id: ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.VirtualFileResult
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: VirtualFileResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/VirtualFileResult.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.FileResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileResult
  nameWithType: FileResult
  fullName: Microsoft.AspNetCore.Mvc.FileResult
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionResult
  nameWithType: ActionResult
  fullName: Microsoft.AspNetCore.Mvc.ActionResult
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Microsoft.AspNetCore.Mvc.FileResult.ContentType
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.ContentType
  parent: Microsoft.AspNetCore.Mvc.FileResult
  isExternal: false
  name: ContentType
  nameWithType: FileResult.ContentType
  fullName: Microsoft.AspNetCore.Mvc.FileResult.ContentType
- uid: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  commentId: P:Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
  parent: Microsoft.AspNetCore.Mvc.FileResult
  isExternal: false
  name: FileDownloadName
  nameWithType: FileResult.FileDownloadName
  fullName: Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: false
  name: ExecuteResult(ActionContext)
  nameWithType: ActionResult.ExecuteResult(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult
  commentId: T:Microsoft.AspNetCore.Mvc.VirtualFileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: VirtualFileResult
  nameWithType: VirtualFileResult
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: false
  name: ExecuteResultAsync(ActionContext)
  nameWithType: ActionResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
