### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  id: DependencyContextRazorViewEngineOptionsSetup
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  langs:
  - csharp
  - vb
  name: DependencyContextRazorViewEngineOptionsSetup
  nameWithType: DependencyContextRazorViewEngineOptionsSetup
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/DependencyContextRazorViewEngineOptionsSetup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DependencyContextRazorViewEngineOptionsSetup
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/DependencyContextRazorViewEngineOptionsSetup.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nSets up compilation and parse option default options for <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions\" data-throw-if-not-resolved=\"false\"></xref> using\n<xref href=\"Microsoft.Extensions.DependencyModel.DependencyContext\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class DependencyContextRazorViewEngineOptionsSetup : ConfigureOptions<RazorViewEngineOptions>, IConfigureOptions<RazorViewEngineOptions>'
    content.vb: >-
      Public Class DependencyContextRazorViewEngineOptionsSetup
          Inherits ConfigureOptions(Of RazorViewEngineOptions)
          Implements IConfigureOptions(Of RazorViewEngineOptions)
  inheritance:
  - System.Object
  - Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  implements:
  - Microsoft.Extensions.Options.IConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  inheritedMembers:
  - Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Configure(Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  - Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Action
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)'
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  langs:
  - csharp
  - vb
  name: DependencyContextRazorViewEngineOptionsSetup(IHostingEnvironment)
  nameWithType: DependencyContextRazorViewEngineOptionsSetup.DependencyContextRazorViewEngineOptionsSetup(IHostingEnvironment)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup.DependencyContextRazorViewEngineOptionsSetup(Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/DependencyContextRazorViewEngineOptionsSetup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/DependencyContextRazorViewEngineOptionsSetup.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DependencyContextRazorViewEngineOptionsSetup(IHostingEnvironment hostingEnvironment)
    content.vb: Public Sub New(hostingEnvironment As IHostingEnvironment)
    parameters:
    - id: hostingEnvironment
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  isExternal: false
  name: RazorViewEngineOptions
  nameWithType: RazorViewEngineOptions
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
- uid: Microsoft.Extensions.DependencyModel.DependencyContext
  commentId: T:Microsoft.Extensions.DependencyModel.DependencyContext
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Internal
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: T:Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.ConfigureOptions`1
  name: ConfigureOptions<RazorViewEngineOptions>
  nameWithType: ConfigureOptions<RazorViewEngineOptions>
  fullName: Microsoft.Extensions.Options.ConfigureOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: ConfigureOptions(Of RazorViewEngineOptions)
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: ConfigureOptions(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1
    name: ConfigureOptions
    nameWithType: ConfigureOptions
    fullName: Microsoft.Extensions.Options.ConfigureOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1
    name: ConfigureOptions
    nameWithType: ConfigureOptions
    fullName: Microsoft.Extensions.Options.ConfigureOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: T:Microsoft.Extensions.Options.IConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IConfigureOptions`1
  name: IConfigureOptions<RazorViewEngineOptions>
  nameWithType: IConfigureOptions<RazorViewEngineOptions>
  fullName: Microsoft.Extensions.Options.IConfigureOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: IConfigureOptions(Of RazorViewEngineOptions)
  fullname.vb: Microsoft.Extensions.Options.IConfigureOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: IConfigureOptions(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    nameWithType: IConfigureOptions
    fullName: Microsoft.Extensions.Options.IConfigureOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    nameWithType: IConfigureOptions
    fullName: Microsoft.Extensions.Options.IConfigureOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Configure(Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  commentId: M:Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Configure(Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  parent: Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  definition: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
  name: Configure(RazorViewEngineOptions)
  nameWithType: ConfigureOptions<RazorViewEngineOptions>.Configure(RazorViewEngineOptions)
  fullName: Microsoft.Extensions.Options.ConfigureOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>.Configure(Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  nameWithType.vb: ConfigureOptions(Of RazorViewEngineOptions).Configure(RazorViewEngineOptions)
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions).Configure(Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
    name: Configure
    nameWithType: ConfigureOptions<RazorViewEngineOptions>.Configure
    fullName: Microsoft.Extensions.Options.ConfigureOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
    name: Configure
    nameWithType: ConfigureOptions(Of RazorViewEngineOptions).Configure
    fullName: Microsoft.Extensions.Options.ConfigureOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions).Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Action
  commentId: P:Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}.Action
  parent: Microsoft.Extensions.Options.ConfigureOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  definition: Microsoft.Extensions.Options.ConfigureOptions`1.Action
  name: Action
  nameWithType: ConfigureOptions<RazorViewEngineOptions>.Action
  fullName: Microsoft.Extensions.Options.ConfigureOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>.Action
  nameWithType.vb: ConfigureOptions(Of RazorViewEngineOptions).Action
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions).Action
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Options.ConfigureOptions`1
  commentId: T:Microsoft.Extensions.Options.ConfigureOptions`1
  isExternal: true
  name: ConfigureOptions<TOptions>
  nameWithType: ConfigureOptions<TOptions>
  fullName: Microsoft.Extensions.Options.ConfigureOptions<TOptions>
  nameWithType.vb: ConfigureOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of TOptions)
  name.vb: ConfigureOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1
    name: ConfigureOptions
    nameWithType: ConfigureOptions
    fullName: Microsoft.Extensions.Options.ConfigureOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1
    name: ConfigureOptions
    nameWithType: ConfigureOptions
    fullName: Microsoft.Extensions.Options.ConfigureOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Options.IConfigureOptions`1
  commentId: T:Microsoft.Extensions.Options.IConfigureOptions`1
  isExternal: true
  name: IConfigureOptions<TOptions>
  nameWithType: IConfigureOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IConfigureOptions<TOptions>
  nameWithType.vb: IConfigureOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IConfigureOptions(Of TOptions)
  name.vb: IConfigureOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    nameWithType: IConfigureOptions
    fullName: Microsoft.Extensions.Options.IConfigureOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IConfigureOptions`1
    name: IConfigureOptions
    nameWithType: IConfigureOptions
    fullName: Microsoft.Extensions.Options.IConfigureOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
  commentId: M:Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
  isExternal: true
  name: Configure(TOptions)
  nameWithType: ConfigureOptions<TOptions>.Configure(TOptions)
  fullName: Microsoft.Extensions.Options.ConfigureOptions<TOptions>.Configure(TOptions)
  nameWithType.vb: ConfigureOptions(Of TOptions).Configure(TOptions)
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of TOptions).Configure(TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
    name: Configure
    nameWithType: ConfigureOptions<TOptions>.Configure
    fullName: Microsoft.Extensions.Options.ConfigureOptions<TOptions>.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.ConfigureOptions`1.Configure(`0)
    name: Configure
    nameWithType: ConfigureOptions(Of TOptions).Configure
    fullName: Microsoft.Extensions.Options.ConfigureOptions(Of TOptions).Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.ConfigureOptions`1.Action
  commentId: P:Microsoft.Extensions.Options.ConfigureOptions`1.Action
  isExternal: true
  name: Action
  nameWithType: ConfigureOptions<TOptions>.Action
  fullName: Microsoft.Extensions.Options.ConfigureOptions<TOptions>.Action
  nameWithType.vb: ConfigureOptions(Of TOptions).Action
  fullname.vb: Microsoft.Extensions.Options.ConfigureOptions(Of TOptions).Action
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
  isExternal: false
  name: DependencyContextRazorViewEngineOptionsSetup
  nameWithType: DependencyContextRazorViewEngineOptionsSetup
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.DependencyContextRazorViewEngineOptionsSetup
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IHostingEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
