### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  id: ICompilerCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache.GetOrAdd(System.String,System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult})
  langs:
  - csharp
  - vb
  name: ICompilerCache
  nameWithType: ICompilerCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/ICompilerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ICompilerCache
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/ICompilerCache.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nCaches the result of runtime compilation of Razor files for the duration of the app lifetime.\n"
  example: []
  syntax:
    content: public interface ICompilerCache
    content.vb: Public Interface ICompilerCache
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache.GetOrAdd(System.String,System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache.GetOrAdd(System.String,System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult})
  id: GetOrAdd(System.String,System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult})
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(String, Func<RelativeFileInfo, CompilationResult>)
  nameWithType: ICompilerCache.GetOrAdd(String, Func<RelativeFileInfo, CompilationResult>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache.GetOrAdd(System.String, System.Func<Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/ICompilerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetOrAdd
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/ICompilerCache.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nGet an existing compilation result, or create and add a new one if it is\nnot available in the cache or is expired.\n"
  example: []
  syntax:
    content: CompilerCacheResult GetOrAdd(string relativePath, Func<RelativeFileInfo, CompilationResult> compile)
    content.vb: Function GetOrAdd(relativePath As String, compile As Func(Of RelativeFileInfo, CompilationResult)) As CompilerCacheResult
    parameters:
    - id: relativePath
      type: System.String
      description: Application relative path to the file.
    - id: compile
      type: System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult}
      description: An delegate that will generate a compilation result.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
      description: A cached <xref href="Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ICompilerCache.GetOrAdd(String, Func(Of RelativeFileInfo, CompilationResult))
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache.GetOrAdd(System.String, System.Func(Of Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult))
  name.vb: GetOrAdd(String, Func(Of RelativeFileInfo, CompilationResult))
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Internal
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: CompilationResult
  nameWithType: CompilationResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult}
  parent: System
  definition: System.Func`2
  name: Func<RelativeFileInfo, CompilationResult>
  nameWithType: Func<RelativeFileInfo, CompilationResult>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult>
  nameWithType.vb: Func(Of RelativeFileInfo, CompilationResult)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)
  name.vb: Func(Of RelativeFileInfo, CompilationResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo
    name: RelativeFileInfo
    nameWithType: RelativeFileInfo
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
    name: CompilationResult
    nameWithType: CompilationResult
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo
    name: RelativeFileInfo
    nameWithType: RelativeFileInfo
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.RelativeFileInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
    name: CompilationResult
    nameWithType: CompilationResult
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: CompilerCacheResult
  nameWithType: CompilerCacheResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Compilation
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Compilation
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
