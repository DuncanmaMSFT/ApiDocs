### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  commentId: T:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  id: ValidationAttributeAdapter`1
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  children:
  - Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.#ctor(`0,Microsoft.Extensions.Localization.IStringLocalizer)
  - Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  - Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.Attribute
  - Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object[])
  - Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.MergeAttribute(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  langs:
  - csharp
  - vb
  name: ValidationAttributeAdapter<TAttribute>
  nameWithType: ValidationAttributeAdapter<TAttribute>
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationAttributeAdapter
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  summary: "\nAn implementation of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator\" data-throw-if-not-resolved=\"false\"></xref> which understands data annotation attributes.\n"
  example: []
  syntax:
    content: 'public abstract class ValidationAttributeAdapter<TAttribute> : IClientModelValidator where TAttribute : ValidationAttribute'
    content.vb: >-
      Public MustInherit Class ValidationAttributeAdapter(Of TAttribute As ValidationAttribute)
          Implements IClientModelValidator
    typeParameters:
    - id: TAttribute
      description: The type of the attribute.
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute)
  name.vb: ValidationAttributeAdapter(Of TAttribute)
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.#ctor(`0,Microsoft.Extensions.Localization.IStringLocalizer)
  commentId: M:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.#ctor(`0,Microsoft.Extensions.Localization.IStringLocalizer)
  id: '#ctor(`0,Microsoft.Extensions.Localization.IStringLocalizer)'
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  langs:
  - csharp
  - vb
  name: ValidationAttributeAdapter(TAttribute, IStringLocalizer)
  nameWithType: ValidationAttributeAdapter<TAttribute>.ValidationAttributeAdapter(TAttribute, IStringLocalizer)
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.ValidationAttributeAdapter(TAttribute, Microsoft.Extensions.Localization.IStringLocalizer)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  summary: "\nCreate a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ValidationAttributeAdapter(TAttribute attribute, IStringLocalizer stringLocalizer)
    content.vb: Public Sub New(attribute As TAttribute, stringLocalizer As IStringLocalizer)
    parameters:
    - id: attribute
      type: '{TAttribute}'
      description: The <em>TAttribute</em> instance to validate.
    - id: stringLocalizer
      type: Microsoft.Extensions.Localization.IStringLocalizer
      description: The <xref href="Microsoft.Extensions.Localization.IStringLocalizer" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).ValidationAttributeAdapter(TAttribute, IStringLocalizer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).ValidationAttributeAdapter(TAttribute, Microsoft.Extensions.Localization.IStringLocalizer)
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.Attribute
  commentId: P:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.Attribute
  id: Attribute
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  langs:
  - csharp
  - vb
  name: Attribute
  nameWithType: ValidationAttributeAdapter<TAttribute>.Attribute
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.Attribute
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Attribute
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  summary: "\nGets the <em>TAttribute</em> instance.\n"
  example: []
  syntax:
    content: public TAttribute Attribute { get; }
    content.vb: Public ReadOnly Property Attribute As TAttribute
    parameters: []
    return:
      type: '{TAttribute}'
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).Attribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).Attribute
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  commentId: M:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  id: AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  langs:
  - csharp
  - vb
  name: AddValidation(ClientModelValidationContext)
  nameWithType: ValidationAttributeAdapter<TAttribute>.AddValidation(ClientModelValidationContext)
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddValidation
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  example: []
  syntax:
    content: public abstract void AddValidation(ClientModelValidationContext context)
    content.vb: Public MustOverride Sub AddValidation(context As ClientModelValidationContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).AddValidation(ClientModelValidationContext)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.MergeAttribute(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.MergeAttribute(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  id: MergeAttribute(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  langs:
  - csharp
  - vb
  name: MergeAttribute(IDictionary<String, String>, String, String)
  nameWithType: ValidationAttributeAdapter<TAttribute>.MergeAttribute(IDictionary<String, String>, String, String)
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.MergeAttribute(System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttribute
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  summary: "\nAdds the given <em>key</em> and <em>value</em> into\n<em>attributes</em> if <em>attributes</em> does not contain a value for\n<em>key</em>.\n"
  example: []
  syntax:
    content: protected static bool MergeAttribute(IDictionary<string, string> attributes, string key, string value)
    content.vb: Protected Shared Function MergeAttribute(attributes As IDictionary(Of String, String), key As String, value As String) As Boolean
    parameters:
    - id: attributes
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The HTML attributes dictionary.
    - id: key
      type: System.String
      description: The attribute key.
    - id: value
      type: System.String
      description: The attribute value.
    return:
      type: System.Boolean
      description: <code>true</code> if an attribute was added, otherwise <code>false</code>.
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).MergeAttribute(IDictionary(Of String, String), String, String)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).MergeAttribute(System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String)
  name.vb: MergeAttribute(IDictionary(Of String, String), String, String)
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object[])
  commentId: M:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object[])
  id: GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object[])
  parent: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  langs:
  - csharp
  - vb
  name: GetErrorMessage(ModelMetadata, Object[])
  nameWithType: ValidationAttributeAdapter<TAttribute>.GetErrorMessage(ModelMetadata, Object[])
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetErrorMessage
    path: src/Microsoft.AspNetCore.Mvc.DataAnnotations/Internal/ValidationAttributeAdapterOfTAttribute.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Mvc.DataAnnotations
  namespace: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  summary: "\nGets the error message formatted using the <xref href=\"Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter%601.Attribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual string GetErrorMessage(ModelMetadata modelMetadata, params object[] arguments)
    content.vb: Protected Overridable Function GetErrorMessage(modelMetadata As ModelMetadata, ParamArray arguments As Object()) As String
    parameters:
    - id: modelMetadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref> associated with the model annotated with

        <xref href="Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter%601.Attribute" data-throw-if-not-resolved="false"></xref>.
    - id: arguments
      type: System.Object[]
      description: The value arguments which will be used in constructing the error message.
    return:
      type: System.String
      description: Formatted error string.
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).GetErrorMessage(ModelMetadata, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Object())
  name.vb: GetErrorMessage(ModelMetadata, Object())
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IClientModelValidator
  nameWithType: IClientModelValidator
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  commentId: T:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
  isExternal: false
  name: ValidationAttributeAdapter<TAttribute>
  nameWithType: ValidationAttributeAdapter<TAttribute>
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute)
  fullname.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute)
  name.vb: ValidationAttributeAdapter(Of TAttribute)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
    name: ValidationAttributeAdapter
    nameWithType: ValidationAttributeAdapter
    fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter
  - name: <
    nameWithType: <
    fullName: <
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1
    name: ValidationAttributeAdapter
    nameWithType: ValidationAttributeAdapter
    fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.IStringLocalizer
  commentId: T:Microsoft.Extensions.Localization.IStringLocalizer
  parent: Microsoft.Extensions.Localization
  isExternal: true
  name: IStringLocalizer
  nameWithType: IStringLocalizer
  fullName: Microsoft.Extensions.Localization.IStringLocalizer
- uid: '{TAttribute}'
  commentId: '!:TAttribute'
  definition: TAttribute
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: TAttribute
  isExternal: false
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
  isExternal: false
  name: AddValidation(ClientModelValidationContext)
  nameWithType: IClientModelValidator.AddValidation(ClientModelValidationContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
    name: AddValidation
    nameWithType: IClientModelValidator.AddValidation
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
    name: ClientModelValidationContext
    nameWithType: ClientModelValidationContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)
    name: AddValidation
    nameWithType: IClientModelValidator.AddValidation
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
    name: ClientModelValidationContext
    nameWithType: ClientModelValidationContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: ClientModelValidationContext
  nameWithType: ClientModelValidationContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.Attribute
  commentId: P:Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter`1.Attribute
  isExternal: false
  name: Attribute
  nameWithType: ValidationAttributeAdapter<TAttribute>.Attribute
  fullName: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter<TAttribute>.Attribute
  nameWithType.vb: ValidationAttributeAdapter(Of TAttribute).Attribute
  fullname.vb: Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.ValidationAttributeAdapter(Of TAttribute).Attribute
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
