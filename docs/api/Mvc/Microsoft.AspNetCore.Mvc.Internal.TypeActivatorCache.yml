### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache
  id: TypeActivatorCache
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  langs:
  - csharp
  - vb
  name: TypeActivatorCache
  nameWithType: TypeActivatorCache
  fullName: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/TypeActivatorCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TypeActivatorCache
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/TypeActivatorCache.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCaches <xref href=\"Microsoft.Extensions.DependencyInjection.ObjectFactory\" data-throw-if-not-resolved=\"false\"></xref> instances produced by \n<xref href=\"Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type%2cSystem.Type%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class TypeActivatorCache : ITypeActivatorCache'
    content.vb: >-
      Public Class TypeActivatorCache
          Implements ITypeActivatorCache
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  id: CreateInstance``1(System.IServiceProvider,System.Type)
  parent: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache
  langs:
  - csharp
  - vb
  name: CreateInstance<TInstance>(IServiceProvider, Type)
  nameWithType: TypeActivatorCache.CreateInstance<TInstance>(IServiceProvider, Type)
  fullName: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache.CreateInstance<TInstance>(System.IServiceProvider, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/TypeActivatorCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateInstance
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/TypeActivatorCache.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public TInstance CreateInstance<TInstance>(IServiceProvider serviceProvider, Type implementationType)
    content.vb: Public Function CreateInstance(Of TInstance)(serviceProvider As IServiceProvider, implementationType As Type) As TInstance
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: implementationType
      type: System.Type
    typeParameters:
    - id: TInstance
    return:
      type: '{TInstance}'
  implements:
  - Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  nameWithType.vb: TypeActivatorCache.CreateInstance(Of TInstance)(IServiceProvider, Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.TypeActivatorCache.CreateInstance(Of TInstance)(System.IServiceProvider, System.Type)
  name.vb: CreateInstance(Of TInstance)(IServiceProvider, Type)
references:
- uid: Microsoft.Extensions.DependencyInjection.ObjectFactory
  commentId: T:Microsoft.Extensions.DependencyInjection.ObjectFactory
- uid: Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])
  commentId: M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: ITypeActivatorCache
  nameWithType: ITypeActivatorCache
  fullName: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  parent: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache
  definition: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
  name: CreateInstance<TInstance>(IServiceProvider, Type)
  nameWithType: ITypeActivatorCache.CreateInstance<TInstance>(IServiceProvider, Type)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance<TInstance>(System.IServiceProvider, System.Type)
  nameWithType.vb: ITypeActivatorCache.CreateInstance(Of TInstance)(IServiceProvider, Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance(Of TInstance)(System.IServiceProvider, System.Type)
  name.vb: CreateInstance(Of TInstance)(IServiceProvider, Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
    name: CreateInstance<TInstance>
    nameWithType: ITypeActivatorCache.CreateInstance<TInstance>
    fullName: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance<TInstance>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)
    name: CreateInstance(Of TInstance)
    nameWithType: ITypeActivatorCache.CreateInstance(Of TInstance)
    fullName: Microsoft.AspNetCore.Mvc.Internal.ITypeActivatorCache.CreateInstance(Of TInstance)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{TInstance}'
  commentId: '!:TInstance'
  definition: TInstance
  name: TInstance
  nameWithType: TInstance
  fullName: TInstance
- uid: TInstance
  isExternal: false
  name: TInstance
  nameWithType: TInstance
  fullName: TInstance
