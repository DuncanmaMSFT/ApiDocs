### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  id: ModelExpressionProvider
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  children:
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache)
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  langs:
  - csharp
  - vb
  name: ModelExpressionProvider
  nameWithType: ModelExpressionProvider
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelExpressionProvider
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nA default implementation of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ModelExpressionProvider : IModelExpressionProvider'
    content.vb: >-
      Public Class ModelExpressionProvider
          Implements IModelExpressionProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache)'
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  langs:
  - csharp
  - vb
  name: ModelExpressionProvider(IModelMetadataProvider, ExpressionTextCache)
  nameWithType: ModelExpressionProvider.ModelExpressionProvider(IModelMetadataProvider, ExpressionTextCache)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.ModelExpressionProvider(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nCreates a  new <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelExpressionProvider(IModelMetadataProvider modelMetadataProvider, ExpressionTextCache expressionTextCache)
    content.vb: Public Sub New(modelMetadataProvider As IModelMetadataProvider, expressionTextCache As ExpressionTextCache)
    parameters:
    - id: modelMetadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" data-throw-if-not-resolved="false"></xref>.
    - id: expressionTextCache
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache
      description: The <xref href="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  langs:
  - csharp
  - vb
  name: CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  nameWithType: ModelExpressionProvider.CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression<TModel, TValue>(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateModelExpression
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ModelExpressionProvider.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  example: []
  syntax:
    content: public ModelExpression CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel> viewData, Expression<Func<TModel, TValue>> expression)
    content.vb: Public Function CreateModelExpression(Of TModel, TValue)(viewData As ViewDataDictionary(Of TModel), expression As Expression(Of Func(Of TModel, TValue))) As ModelExpression
    parameters:
    - id: viewData
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{{TModel}}
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TValue}}}
    typeParameters:
    - id: TModel
    - id: TValue
    return:
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression
  implements:
  - Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{{TModel}},System.Linq.Expressions.Expression{System.Func{{TModel},{TValue}}})
  nameWithType.vb: ModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TValue)))
  name.vb: CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelMetadataProvider
  nameWithType: IModelMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures
  commentId: N:Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewFeatures
  nameWithType: Microsoft.AspNetCore.Mvc.ViewFeatures
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: IModelExpressionProvider
  nameWithType: IModelExpressionProvider
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
  isExternal: false
  name: ModelExpressionProvider
  nameWithType: ModelExpressionProvider
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
  isExternal: false
  name: ExpressionTextCache
  nameWithType: ExpressionTextCache
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.Internal
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{{TModel}},System.Linq.Expressions.Expression{System.Func{{TModel},{TValue}}})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider
  definition: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  nameWithType: IModelExpressionProvider.CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression<TModel, TValue>(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)
  nameWithType.vb: IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TValue)))
  name.vb: CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: CreateModelExpression<TModel, TValue>
    nameWithType: IModelExpressionProvider.CreateModelExpression<TModel, TValue>
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression<TModel, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: CreateModelExpression(Of TModel, TValue)
    nameWithType: IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{{TModel}}
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{`0}
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  definition: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
  name: ViewDataDictionary<TModel>
  nameWithType: ViewDataDictionary<TModel>
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>
  nameWithType.vb: ViewDataDictionary(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel)
  name.vb: ViewDataDictionary(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},{TValue}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, TValue>>
  nameWithType: Expression<Func<TModel, TValue>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, TValue>>
  nameWithType.vb: Expression(Of Func(Of TModel, TValue))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, TValue))
  name.vb: Expression(Of Func(Of TModel, TValue))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: ModelExpression
  nameWithType: ModelExpression
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExternal: true
  name: CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  nameWithType: IModelExpressionProvider.CreateModelExpression<TModel, TValue>(ViewDataDictionary<TModel>, Expression<Func<TModel, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression<TModel, TValue>(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)
  nameWithType.vb: IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TValue)))
  name.vb: CreateModelExpression(Of TModel, TValue)(ViewDataDictionary(Of TModel), Expression(Of Func(Of TModel, TValue)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: CreateModelExpression<TModel, TValue>
    nameWithType: IModelExpressionProvider.CreateModelExpression<TModel, TValue>
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression<TModel, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
    name: CreateModelExpression(Of TModel, TValue)
    nameWithType: IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression(Of TModel, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
  isExternal: false
  name: ViewDataDictionary<TModel>
  nameWithType: ViewDataDictionary<TModel>
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>
  nameWithType.vb: ViewDataDictionary(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel)
  name.vb: ViewDataDictionary(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
