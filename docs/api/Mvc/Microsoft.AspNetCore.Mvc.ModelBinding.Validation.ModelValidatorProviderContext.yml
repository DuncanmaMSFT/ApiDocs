### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  id: ModelValidatorProviderContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem})
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.Results
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ValidatorMetadata
  langs:
  - csharp
  - vb
  name: ModelValidatorProviderContext
  nameWithType: ModelValidatorProviderContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelValidatorProviderContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  summary: "\nA context for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class ModelValidatorProviderContext
    content.vb: Public Class ModelValidatorProviderContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem})'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  langs:
  - csharp
  - vb
  name: ModelValidatorProviderContext(ModelMetadata, IList<ValidatorItem>)
  nameWithType: ModelValidatorProviderContext.ModelValidatorProviderContext(ModelMetadata, IList<ValidatorItem>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelValidatorProviderContext(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelValidatorProviderContext(ModelMetadata modelMetadata, IList<ValidatorItem> items)
    content.vb: Public Sub New(modelMetadata As ModelMetadata, items As IList(Of ValidatorItem))
    parameters:
    - id: modelMetadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref>.
    - id: items
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem}
      description: The list of <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem" data-throw-if-not-resolved="false"></xref>s.
  nameWithType.vb: ModelValidatorProviderContext.ModelValidatorProviderContext(ModelMetadata, IList(Of ValidatorItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelValidatorProviderContext(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem))
  name.vb: ModelValidatorProviderContext(ModelMetadata, IList(Of ValidatorItem))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata
  id: ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  langs:
  - csharp
  - vb
  name: ModelMetadata
  nameWithType: ModelValidatorProviderContext.ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelMetadata
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelMetadata ModelMetadata { get; set; }
    content.vb: Public Property ModelMetadata As ModelMetadata
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ValidatorMetadata
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ValidatorMetadata
  id: ValidatorMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  langs:
  - csharp
  - vb
  name: ValidatorMetadata
  nameWithType: ModelValidatorProviderContext.ValidatorMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ValidatorMetadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidatorMetadata
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  summary: "\nGets the validator metadata.\n"
  remarks: "\nThis property provides convenience access to <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<object> ValidatorMetadata { get; }
    content.vb: Public ReadOnly Property ValidatorMetadata As IReadOnlyList(Of Object)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.Results
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.Results
  id: Results
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: ModelValidatorProviderContext.Results
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.Results
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Results
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Validation/ModelValidatorProviderContext.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem\" data-throw-if-not-resolved=\"false\"></xref> instances. <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider\" data-throw-if-not-resolved=\"false\"></xref> instances\nshould add the appropriate <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.Validator\" data-throw-if-not-resolved=\"false\"></xref> properties when\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)\" data-throw-if-not-resolved=\"false\"></xref>\nis called.\n"
  example: []
  syntax:
    content: public IList<ValidatorItem> Results { get; }
    content.vb: Public ReadOnly Property Results As IList(Of ValidatorItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IModelValidatorProvider
  nameWithType: IModelValidatorProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: ModelValidatorProviderContext
  nameWithType: ModelValidatorProviderContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
  isExternal: false
  name: ValidatorItem
  nameWithType: ValidatorItem
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ValidatorItem>
  nameWithType: IList<ValidatorItem>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem>
  nameWithType.vb: IList(Of ValidatorItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem)
  name.vb: IList(Of ValidatorItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
    name: ValidatorItem
    nameWithType: ValidatorItem
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
    name: ValidatorItem
    nameWithType: ValidatorItem
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  isExternal: false
  name: ValidatorMetadata
  nameWithType: ModelMetadata.ValidatorMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata
- uid: System.Collections.Generic.IReadOnlyList{System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Object>
  nameWithType: IReadOnlyList<Object>
  fullName: System.Collections.Generic.IReadOnlyList<System.Object>
  nameWithType.vb: IReadOnlyList(Of Object)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Object)
  name.vb: IReadOnlyList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.Validator
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.Validator
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  isExternal: false
  name: CreateValidators(ModelValidatorProviderContext)
  nameWithType: IModelValidatorProvider.CreateValidators(ModelValidatorProviderContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)
    name: CreateValidators
    nameWithType: IModelValidatorProvider.CreateValidators
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
    name: ModelValidatorProviderContext
    nameWithType: ModelValidatorProviderContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)
    name: CreateValidators
    nameWithType: IModelValidatorProvider.CreateValidators
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
    name: ModelValidatorProviderContext
    nameWithType: ModelValidatorProviderContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
  - name: )
    nameWithType: )
    fullName: )
