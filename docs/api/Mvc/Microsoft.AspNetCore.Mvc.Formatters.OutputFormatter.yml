### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  id: OutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String,System.Type)
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  - Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  langs:
  - csharp
  - vb
  name: OutputFormatter
  nameWithType: OutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OutputFormatter
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nWrites an object to the output stream.\n"
  example: []
  syntax:
    content: 'public abstract class OutputFormatter : IOutputFormatter, IApiResponseTypeMetadataProvider'
    content.vb: >-
      Public MustInherit Class OutputFormatter
          Implements IOutputFormatter, IApiResponseTypeMetadataProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  - Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes
  id: SupportedMediaTypes
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: SupportedMediaTypes
  nameWithType: OutputFormatter.SupportedMediaTypes
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SupportedMediaTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the mutable collection of media type elements supported by\nthis <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MediaTypeCollection SupportedMediaTypes { get; }
    content.vb: Public ReadOnly Property SupportedMediaTypes As MediaTypeCollection
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)
  id: CanWriteType(System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: CanWriteType(Type)
  nameWithType: OutputFormatter.CanWriteType(Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanWriteType
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns a value indicating whether or not the given type can be written by this serializer.\n"
  example: []
  syntax:
    content: protected virtual bool CanWriteType(Type type)
    content.vb: Protected Overridable Function CanWriteType(type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: The object type.
    return:
      type: System.Boolean
      description: <code>true</code> if the type can be written, otherwise <code>false</code>.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String,System.Type)
  id: GetSupportedContentTypes(System.String,System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: GetSupportedContentTypes(String, Type)
  nameWithType: OutputFormatter.GetSupportedContentTypes(String, Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetSupportedContentTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public virtual IReadOnlyList<string> GetSupportedContentTypes(string contentType, Type objectType)
    content.vb: Public Overridable Function GetSupportedContentTypes(contentType As String, objectType As Type) As IReadOnlyList(Of String)
    parameters:
    - id: contentType
      type: System.String
    - id: objectType
      type: System.Type
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
  implements:
  - Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  id: CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: CanWriteResult(OutputFormatterCanWriteContext)
  nameWithType: OutputFormatter.CanWriteResult(OutputFormatterCanWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanWriteResult
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public virtual bool CanWriteResult(OutputFormatterCanWriteContext context)
    content.vb: Public Overridable Function CanWriteResult(context As OutputFormatterCanWriteContext) As Boolean
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
    return:
      type: System.Boolean
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  id: WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: WriteAsync(OutputFormatterWriteContext)
  nameWithType: OutputFormatter.WriteAsync(OutputFormatterWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 133
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public virtual Task WriteAsync(OutputFormatterWriteContext context)
    content.vb: Public Overridable Function WriteAsync(context As OutputFormatterWriteContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  id: WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: WriteResponseHeaders(OutputFormatterWriteContext)
  nameWithType: OutputFormatter.WriteResponseHeaders(OutputFormatterWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteResponseHeaders
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 148
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nSets the headers on <xref href=\"Microsoft.AspNetCore.Http.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public virtual void WriteResponseHeaders(OutputFormatterWriteContext context)
    content.vb: Public Overridable Sub WriteResponseHeaders(context As OutputFormatterWriteContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
      description: The formatter context associated with the call.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  id: WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  langs:
  - csharp
  - vb
  name: WriteResponseBodyAsync(OutputFormatterWriteContext)
  nameWithType: OutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteResponseBodyAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/OutputFormatter.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nWrites the response body.\n"
  example: []
  syntax:
    content: public abstract Task WriteResponseBodyAsync(OutputFormatterWriteContext context)
    content.vb: Public MustOverride Function WriteResponseBodyAsync(context As OutputFormatterWriteContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
      description: The formatter context associated with the call.
    return:
      type: System.Threading.Tasks.Task
      description: A task which can write the response body.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: IOutputFormatter
  nameWithType: IOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: IApiResponseTypeMetadataProvider
  nameWithType: IApiResponseTypeMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: OutputFormatter
  nameWithType: OutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: MediaTypeCollection
  nameWithType: MediaTypeCollection
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  isExternal: true
  name: GetSupportedContentTypes(String, Type)
  nameWithType: IApiResponseTypeMetadataProvider.GetSupportedContentTypes(String, Type)
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String, System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
    name: GetSupportedContentTypes
    nameWithType: IApiResponseTypeMetadataProvider.GetSupportedContentTypes
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
    name: GetSupportedContentTypes
    nameWithType: IApiResponseTypeMetadataProvider.GetSupportedContentTypes
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  isExternal: false
  name: CanWriteResult(OutputFormatterCanWriteContext)
  nameWithType: IOutputFormatter.CanWriteResult(OutputFormatterCanWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
    name: CanWriteResult
    nameWithType: IOutputFormatter.CanWriteResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
    name: OutputFormatterCanWriteContext
    nameWithType: OutputFormatterCanWriteContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)
    name: CanWriteResult
    nameWithType: IOutputFormatter.CanWriteResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
    name: OutputFormatterCanWriteContext
    nameWithType: OutputFormatterCanWriteContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: OutputFormatterCanWriteContext
  nameWithType: OutputFormatterCanWriteContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
- uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  isExternal: false
  name: WriteAsync(OutputFormatterWriteContext)
  nameWithType: IOutputFormatter.WriteAsync(OutputFormatterWriteContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
    name: WriteAsync
    nameWithType: IOutputFormatter.WriteAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
    name: OutputFormatterWriteContext
    nameWithType: OutputFormatterWriteContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)
    name: WriteAsync
    nameWithType: IOutputFormatter.WriteAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
    name: OutputFormatterWriteContext
    nameWithType: OutputFormatterWriteContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: OutputFormatterWriteContext
  nameWithType: OutputFormatterWriteContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
