### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterContext
  id: FilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  langs:
  - csharp
  - vb
  name: FilterContext
  nameWithType: FilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FilterContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nAn abstract context for filters.\n"
  example: []
  syntax:
    content: 'public abstract class FilterContext : ActionContext'
    content.vb: >-
      Public MustInherit Class FilterContext
          Inherits ActionContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionContext
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  - Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  - Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  - Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.FilterContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})'
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  langs:
  - csharp
  - vb
  name: FilterContext(ActionContext, IList<IFilterMetadata>)
  nameWithType: FilterContext.FilterContext(ActionContext, IList<IFilterMetadata>)
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext.FilterContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterContext\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public FilterContext(ActionContext actionContext, IList<IFilterMetadata> filters)
    content.vb: Public Sub New(actionContext As ActionContext, filters As IList(Of IFilterMetadata))
    parameters:
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: filters
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
      description: All applicable <xref href="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" data-throw-if-not-resolved="false"></xref> implementations.
  nameWithType.vb: FilterContext.FilterContext(ActionContext, IList(Of IFilterMetadata))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Filters.FilterContext.FilterContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata))
  name.vb: FilterContext(ActionContext, IList(Of IFilterMetadata))
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  id: Filters
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: FilterContext.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filters
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterContext.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets all applicable <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata\" data-throw-if-not-resolved=\"false\"></xref> implementations.\n"
  example: []
  syntax:
    content: public virtual IList<IFilterMetadata> Filters { get; }
    content.vb: Public Overridable ReadOnly Property Filters As IList(Of IFilterMetadata)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionContext.ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: HttpContext
  nameWithType: ActionContext.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ModelState
  nameWithType: ActionContext.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
- uid: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: RouteData
  nameWithType: ActionContext.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterContext
  nameWithType: FilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFilterMetadata>
  nameWithType: IList<IFilterMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>
  nameWithType.vb: IList(Of IFilterMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  name.vb: IList(Of IFilterMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
