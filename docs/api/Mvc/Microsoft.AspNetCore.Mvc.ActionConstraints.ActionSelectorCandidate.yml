### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  commentId: T:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  id: ActionSelectorCandidate
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints
  children:
  - Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint})
  - Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Action
  - Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Constraints
  langs:
  - csharp
  - vb
  name: ActionSelectorCandidate
  nameWithType: ActionSelectorCandidate
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionSelectorCandidate
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ActionConstraints
  summary: "\nA candidate action for action selection.\n"
  example: []
  syntax:
    content: public struct ActionSelectorCandidate
    content.vb: Public Structure ActionSelectorCandidate
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint})
  commentId: M:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint})
  id: '#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint})'
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  langs:
  - csharp
  - vb
  name: ActionSelectorCandidate(ActionDescriptor, IReadOnlyList<IActionConstraint>)
  nameWithType: ActionSelectorCandidate.ActionSelectorCandidate(ActionDescriptor, IReadOnlyList<IActionConstraint>)
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.ActionSelectorCandidate(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ActionConstraints
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionSelectorCandidate(ActionDescriptor action, IReadOnlyList<IActionConstraint> constraints)
    content.vb: Public Sub New(action As ActionDescriptor, constraints As IReadOnlyList(Of IActionConstraint))
    parameters:
    - id: action
      type: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
      description: The <xref href="Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" data-throw-if-not-resolved="false"></xref> representing a candidate for selection.
    - id: constraints
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint}
      description: "\nThe list of <xref href=\"Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint\" data-throw-if-not-resolved=\"false\"></xref> instances associated with <em>action</em>.\n"
  nameWithType.vb: ActionSelectorCandidate.ActionSelectorCandidate(ActionDescriptor, IReadOnlyList(Of IActionConstraint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.ActionSelectorCandidate(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint))
  name.vb: ActionSelectorCandidate(ActionDescriptor, IReadOnlyList(Of IActionConstraint))
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Action
  commentId: P:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Action
  id: Action
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ActionSelectorCandidate.Action
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Action
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Action
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ActionConstraints
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> representing a candiate for selection.\n"
  example: []
  syntax:
    content: public ActionDescriptor Action { get; }
    content.vb: Public ReadOnly Property Action As ActionDescriptor
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Constraints
  commentId: P:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Constraints
  id: Constraints
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: ActionSelectorCandidate.Constraints
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Constraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Constraints
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ActionConstraints/ActionSelectorCandidate.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ActionConstraints
  summary: "\nThe list of <xref href=\"Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint\" data-throw-if-not-resolved=\"false\"></xref> instances associated with <see name=\"Action\"></see>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<IActionConstraint> Constraints { get; }
    content.vb: Public ReadOnly Property Constraints As IReadOnlyList(Of IActionConstraint)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints
  commentId: N:Microsoft.AspNetCore.Mvc.ActionConstraints
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ActionConstraints
  nameWithType: Microsoft.AspNetCore.Mvc.ActionConstraints
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  commentId: T:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints
  isExternal: false
  name: ActionSelectorCandidate
  nameWithType: ActionSelectorCandidate
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  commentId: T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints
  isExternal: false
  name: IActionConstraint
  nameWithType: IActionConstraint
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IActionConstraint>
  nameWithType: IReadOnlyList<IActionConstraint>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint>
  nameWithType.vb: IReadOnlyList(Of IActionConstraint)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint)
  name.vb: IReadOnlyList(Of IActionConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
    name: IActionConstraint
    nameWithType: IActionConstraint
    fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
    name: IActionConstraint
    nameWithType: IActionConstraint
    fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
