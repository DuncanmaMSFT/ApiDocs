### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  id: SelectListItem
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Disabled
  - Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Group
  - Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected
  - Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text
  - Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value
  langs:
  - csharp
  - vb
  name: SelectListItem
  nameWithType: SelectListItem
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectListItem
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nRepresents an item in a <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectList\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList\" data-throw-if-not-resolved=\"false\"></xref>.\nThis class is typically rendered as an HTML <pre><code>&lt;option&gt;</code></pre> element with the specified\nattribute values.\n"
  example: []
  syntax:
    content: public class SelectListItem
    content.vb: Public Class SelectListItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Disabled
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Disabled
  id: Disabled
  parent: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  langs:
  - csharp
  - vb
  name: Disabled
  nameWithType: SelectListItem.Disabled
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Disabled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Disabled
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets or sets a value that indicates whether this <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> is disabled.\nThis property is typically rendered as a <pre><code>disabled=\"disabled\"</code></pre> attribute in the HTML\n<pre><code>&lt;option&gt;</code></pre> element.\n"
  example: []
  syntax:
    content: public bool Disabled { get; set; }
    content.vb: Public Property Disabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Group
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Group
  id: Group
  parent: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: SelectListItem.Group
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Group
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Group
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nRepresents the optgroup HTML element this item is wrapped into.\nIn a select list, multiple groups with the same name are supported.\nThey are compared with reference equality.\n"
  example: []
  syntax:
    content: public SelectListGroup Group { get; set; }
    content.vb: Public Property Group As SelectListGroup
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected
  id: Selected
  parent: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  langs:
  - csharp
  - vb
  name: Selected
  nameWithType: SelectListItem.Selected
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Selected
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets or sets a value that indicates whether this <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> is selected.\nThis property is typically rendered as a <pre><code>selected=\"selected\"</code></pre> attribute in the HTML\n<pre><code>&lt;option&gt;</code></pre> element.\n"
  example: []
  syntax:
    content: public bool Selected { get; set; }
    content.vb: Public Property Selected As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text
  id: Text
  parent: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: SelectListItem.Text
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Text
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets or sets a value that indicates the display text of this <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref>.\nThis property is typically rendered as the inner HTML in the HTML <pre><code>&lt;option&gt;</code></pre> element.\n"
  example: []
  syntax:
    content: public string Text { get; set; }
    content.vb: Public Property Text As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value
  id: Value
  parent: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SelectListItem.Value
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Value
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/SelectListItem.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets or sets a value that indicates the value of this <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref>.\nThis property is typically rendered as a <pre><code>value=\"...\"</code></pre> attribute in the HTML\n<pre><code>&lt;option&gt;</code></pre> element.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectList
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.SelectList
  isExternal: false
  name: SelectList
  nameWithType: SelectList
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectList
- uid: Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: MultiSelectList
  nameWithType: MultiSelectList
  fullName: Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  isExternal: false
  name: SelectListItem
  nameWithType: SelectListItem
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: SelectListGroup
  nameWithType: SelectListGroup
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
