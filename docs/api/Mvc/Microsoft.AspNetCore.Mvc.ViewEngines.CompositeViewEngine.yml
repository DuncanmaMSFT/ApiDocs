### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  id: CompositeViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  children:
  - Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions})
  - Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.ViewEngines
  langs:
  - csharp
  - vb
  name: CompositeViewEngine
  nameWithType: CompositeViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompositeViewEngine
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  example: []
  syntax:
    content: 'public class CompositeViewEngine : ICompositeViewEngine, IViewEngine'
    content.vb: >-
      Public Class CompositeViewEngine
          Implements ICompositeViewEngine, IViewEngine
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions})'
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  langs:
  - csharp
  - vb
  name: CompositeViewEngine(IOptions<MvcViewOptions>)
  nameWithType: CompositeViewEngine.CompositeViewEngine(IOptions<MvcViewOptions>)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.CompositeViewEngine(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.MvcViewOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CompositeViewEngine(IOptions<MvcViewOptions> optionsAccessor)
    content.vb: Public Sub New(optionsAccessor As IOptions(Of MvcViewOptions))
    parameters:
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions}
      description: The options accessor for <xref href="Microsoft.AspNetCore.Mvc.MvcViewOptions" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: CompositeViewEngine.CompositeViewEngine(IOptions(Of MvcViewOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.CompositeViewEngine(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.MvcViewOptions))
  name.vb: CompositeViewEngine(IOptions(Of MvcViewOptions))
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.ViewEngines
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.ViewEngines
  id: ViewEngines
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  langs:
  - csharp
  - vb
  name: ViewEngines
  nameWithType: CompositeViewEngine.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.ViewEngines
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewEngines
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  example: []
  syntax:
    content: public IReadOnlyList<IViewEngine> ViewEngines { get; }
    content.vb: Public ReadOnly Property ViewEngines As IReadOnlyList(Of IViewEngine)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  id: FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  langs:
  - csharp
  - vb
  name: FindView(ActionContext, String, Boolean)
  nameWithType: CompositeViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindView
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  example: []
  syntax:
    content: public ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage)
    content.vb: Public Function FindView(context As ActionContext, viewName As String, isMainPage As Boolean) As ViewEngineResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: viewName
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(System.String,System.String,System.Boolean)
  id: GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  langs:
  - csharp
  - vb
  name: GetView(String, String, Boolean)
  nameWithType: CompositeViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetView
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/CompositeViewEngine.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  example: []
  syntax:
    content: public ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage)
    content.vb: Public Function GetView(executingFilePath As String, viewPath As String, isMainPage As Boolean) As ViewEngineResult
    parameters:
    - id: executingFilePath
      type: System.String
    - id: viewPath
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines
  commentId: N:Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewEngines
  nameWithType: Microsoft.AspNetCore.Mvc.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: ICompositeViewEngine
  nameWithType: ICompositeViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: IViewEngine
  nameWithType: IViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
  isExternal: false
  name: CompositeViewEngine
  nameWithType: CompositeViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine
- uid: Microsoft.AspNetCore.Mvc.MvcViewOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcViewOptions
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: MvcViewOptions
  nameWithType: MvcViewOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcViewOptions
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<MvcViewOptions>
  nameWithType: IOptions<MvcViewOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.MvcViewOptions>
  nameWithType.vb: IOptions(Of MvcViewOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.MvcViewOptions)
  name.vb: IOptions(Of MvcViewOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcViewOptions
    name: MvcViewOptions
    nameWithType: MvcViewOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcViewOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcViewOptions
    name: MvcViewOptions
    nameWithType: MvcViewOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcViewOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  isExternal: false
  name: ViewEngines
  nameWithType: ICompositeViewEngine.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IViewEngine>
  nameWithType: IReadOnlyList<IViewEngine>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine>
  nameWithType.vb: IReadOnlyList(Of IViewEngine)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine)
  name.vb: IReadOnlyList(Of IViewEngine)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
    name: IViewEngine
    nameWithType: IViewEngine
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
    name: IViewEngine
    nameWithType: IViewEngine
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: FindView(ActionContext, String, Boolean)
  nameWithType: IViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: ViewEngineResult
  nameWithType: ViewEngineResult
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: GetView(String, String, Boolean)
  nameWithType: IViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
