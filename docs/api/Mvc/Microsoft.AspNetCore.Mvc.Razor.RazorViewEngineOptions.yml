### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  id: RazorViewEngineOptions
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  langs:
  - csharp
  - vb
  name: RazorViewEngineOptions
  nameWithType: RazorViewEngineOptions
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RazorViewEngineOptions
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nProvides programmatic configuration for the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class RazorViewEngineOptions
    content.vb: Public Class RazorViewEngineOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders
  id: ViewLocationExpanders
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: ViewLocationExpanders
  nameWithType: RazorViewEngineOptions.ViewLocationExpanders
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationExpanders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewLocationExpanders
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets a <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> used by the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<IViewLocationExpander> ViewLocationExpanders { get; }
    content.vb: Public ReadOnly Property ViewLocationExpanders As IList(Of IViewLocationExpander)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders
  id: FileProviders
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: FileProviders
  nameWithType: RazorViewEngineOptions.FileProviders
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.FileProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileProviders
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the sequence of <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> instances used by <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> to\nlocate Razor files.\n"
  remarks: "\nAt startup, this is initialized to include an instance of <xref href=\"Microsoft.Extensions.FileProviders.PhysicalFileProvider\" data-throw-if-not-resolved=\"false\"></xref> that is\nrooted at the application root.\n"
  example: []
  syntax:
    content: public IList<IFileProvider> FileProviders { get; }
    content.vb: Public ReadOnly Property FileProviders As IList(Of IFileProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  id: ViewLocationFormats
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: ViewLocationFormats
  nameWithType: RazorViewEngineOptions.ViewLocationFormats
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewLocationFormats
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the locations where <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> will search for views.\n"
  remarks: "\n<p>\nThe locations of the views returned from controllers that do not belong to an area.\nLocations are composite format strings (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx),\nwhich may contain the following format items:\n</p>\n<ul><li>{0} - Action Name</li><li>{1} - Controller Name</li></ul>\n<p>\nThe values for these locations are case-sensitive on case-sensitive file systems.\nFor example, the view for the <code>Test</code> action of <code>HomeController</code> should be located at\n<code>/Views/Home/Test.cshtml</code>. Locations such as <code>/views/home/test.cshtml</code> would not be discovered.\n</p>\n"
  example: []
  syntax:
    content: public IList<string> ViewLocationFormats { get; }
    content.vb: Public ReadOnly Property ViewLocationFormats As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  id: AreaViewLocationFormats
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: AreaViewLocationFormats
  nameWithType: RazorViewEngineOptions.AreaViewLocationFormats
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AreaViewLocationFormats
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the locations where <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> will search for views within an\narea.\n"
  remarks: "\n<p>\nThe locations of the views returned from controllers that belong to an area.\nLocations are composite format strings (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx),\nwhich may contain the following format items:\n</p>\n<ul><li>{0} - Action Name</li><li>{1} - Controller Name</li><li>{2} - Area Name</li></ul>\n<p>\nThe values for these locations are case-sensitive on case-sensitive file systems.\nFor example, the view for the <code>Test</code> action of <code>HomeController</code> under <code>Admin</code> area should\nbe located at <code>/Areas/Admin/Views/Home/Test.cshtml</code>.\nLocations such as <code>/areas/admin/views/home/test.cshtml</code> would not be discovered.\n</p>\n"
  example: []
  syntax:
    content: public IList<string> AreaViewLocationFormats { get; }
    content.vb: Public ReadOnly Property AreaViewLocationFormats As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences
  id: AdditionalCompilationReferences
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: AdditionalCompilationReferences
  nameWithType: RazorViewEngineOptions.AdditionalCompilationReferences
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AdditionalCompilationReferences
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AdditionalCompilationReferences
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the <xref href=\"Microsoft.CodeAnalysis.MetadataReference\" data-throw-if-not-resolved=\"false\"></xref> instances that should be included in Razor compilation, along with\nthose discovered by <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public IList<MetadataReference> AdditionalCompilationReferences { get; }
    content.vb: Public ReadOnly Property AdditionalCompilationReferences As IList(Of MetadataReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback
  id: CompilationCallback
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: CompilationCallback
  nameWithType: RazorViewEngineOptions.CompilationCallback
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationCallback
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompilationCallback
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the callback that is used to customize Razor compilation\nto change compilation settings you can update <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext.Compilation\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  remarks: "\nCustomizations made here would not reflect in tooling (Intellisense).\n"
  example: []
  syntax:
    content: public Action<RoslynCompilationContext> CompilationCallback { get; set; }
    content.vb: Public Property CompilationCallback As Action(Of RoslynCompilationContext)
    parameters: []
    return:
      type: System.Action{Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions
  id: ParseOptions
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: ParseOptions
  nameWithType: RazorViewEngineOptions.ParseOptions
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ParseOptions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ParseOptions
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the <xref href=\"Microsoft.CodeAnalysis.CSharp.CSharpParseOptions\" data-throw-if-not-resolved=\"false\"></xref> options used by Razor view compilation.\n"
  example: []
  syntax:
    content: public CSharpParseOptions ParseOptions { get; set; }
    content.vb: Public Property ParseOptions As CSharpParseOptions
    parameters: []
    return:
      type: Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions
  id: CompilationOptions
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  langs:
  - csharp
  - vb
  name: CompilationOptions
  nameWithType: RazorViewEngineOptions.CompilationOptions
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.CompilationOptions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompilationOptions
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngineOptions.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the <xref href=\"Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions\" data-throw-if-not-resolved=\"false\"></xref> used by Razor view compilation.\n"
  example: []
  syntax:
    content: public CSharpCompilationOptions CompilationOptions { get; set; }
    content.vb: Public Property CompilationOptions As CSharpCompilationOptions
    parameters: []
    return:
      type: Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  isExternal: false
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IViewLocationExpander>
  nameWithType: IList<IViewLocationExpander>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander>
  nameWithType.vb: IList(Of IViewLocationExpander)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander)
  name.vb: IList(Of IViewLocationExpander)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
    name: IViewLocationExpander
    nameWithType: IViewLocationExpander
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
    name: IViewLocationExpander
    nameWithType: IViewLocationExpander
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders.PhysicalFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.PhysicalFileProvider
- uid: System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFileProvider>
  nameWithType: IList<IFileProvider>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.FileProviders.IFileProvider>
  nameWithType.vb: IList(Of IFileProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.FileProviders.IFileProvider)
  name.vb: IList(Of IFileProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileProvider
    name: IFileProvider
    nameWithType: IFileProvider
    fullName: Microsoft.Extensions.FileProviders.IFileProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileProvider
    name: IFileProvider
    nameWithType: IFileProvider
    fullName: Microsoft.Extensions.FileProviders.IFileProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.MetadataReference
  commentId: T:Microsoft.CodeAnalysis.MetadataReference
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider
  isExternal: false
  name: MetadataReferenceFeatureProvider
  nameWithType: MetadataReferenceFeatureProvider
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider
- uid: System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.CodeAnalysis.MetadataReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataReference>
  nameWithType: IList<MetadataReference>
  fullName: System.Collections.Generic.IList<Microsoft.CodeAnalysis.MetadataReference>
  nameWithType.vb: IList(Of MetadataReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.CodeAnalysis.MetadataReference)
  name.vb: IList(Of MetadataReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.CodeAnalysis.MetadataReference
    name: MetadataReference
    nameWithType: MetadataReference
    fullName: Microsoft.CodeAnalysis.MetadataReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.CodeAnalysis.MetadataReference
    name: MetadataReference
    nameWithType: MetadataReference
    fullName: Microsoft.CodeAnalysis.MetadataReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext.Compilation
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext.Compilation
- uid: System.Action{Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext}
  parent: System
  definition: System.Action`1
  name: Action<RoslynCompilationContext>
  nameWithType: Action<RoslynCompilationContext>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext>
  nameWithType.vb: Action(Of RoslynCompilationContext)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext)
  name.vb: Action(Of RoslynCompilationContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext
    name: RoslynCompilationContext
    nameWithType: RoslynCompilationContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext
    name: RoslynCompilationContext
    nameWithType: RoslynCompilationContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.RoslynCompilationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
  commentId: T:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
  parent: Microsoft.CodeAnalysis.CSharp
  isExternal: true
  name: CSharpParseOptions
  nameWithType: CSharpParseOptions
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
- uid: Microsoft.CodeAnalysis.CSharp
  commentId: N:Microsoft.CodeAnalysis.CSharp
  isExternal: false
  name: Microsoft.CodeAnalysis.CSharp
  nameWithType: Microsoft.CodeAnalysis.CSharp
  fullName: Microsoft.CodeAnalysis.CSharp
- uid: Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
  commentId: T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
  parent: Microsoft.CodeAnalysis.CSharp
  isExternal: true
  name: CSharpCompilationOptions
  nameWithType: CSharpCompilationOptions
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
