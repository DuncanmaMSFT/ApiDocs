### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  id: IFilterFactory
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  - Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  langs:
  - csharp
  - vb
  name: IFilterFactory
  nameWithType: IFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IFilterFactory
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nAn interface for filter metadata which can create an instance of an executable filter.\n"
  example: []
  syntax:
    content: 'public interface IFilterFactory : IFilterMetadata'
    content.vb: >-
      Public Interface IFilterFactory
          Inherits IFilterMetadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  id: IsReusable
  parent: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  langs:
  - csharp
  - vb
  name: IsReusable
  nameWithType: IFilterFactory.IsReusable
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsReusable
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets a value that indicates if the result of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)\" data-throw-if-not-resolved=\"false\"></xref>\ncan be reused across requests.\n"
  example: []
  syntax:
    content: bool IsReusable { get; }
    content.vb: ReadOnly Property IsReusable As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  id: CreateInstance(System.IServiceProvider)
  parent: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  langs:
  - csharp
  - vb
  name: CreateInstance(IServiceProvider)
  nameWithType: IFilterFactory.CreateInstance(IServiceProvider)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateInstance
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IFilterFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCreates an instance of the executable filter.\n"
  example: []
  syntax:
    content: IFilterMetadata CreateInstance(IServiceProvider serviceProvider)
    content.vb: Function CreateInstance(serviceProvider As IServiceProvider) As IFilterMetadata
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The request <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
      description: An instance of the executable filter.
references:
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  parent: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  isExternal: true
  name: CreateInstance(IServiceProvider)
  nameWithType: IFilterFactory.CreateInstance(IServiceProvider)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
    name: CreateInstance
    nameWithType: IFilterFactory.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider)
    name: CreateInstance
    nameWithType: IFilterFactory.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterFactory
  nameWithType: IFilterFactory
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
