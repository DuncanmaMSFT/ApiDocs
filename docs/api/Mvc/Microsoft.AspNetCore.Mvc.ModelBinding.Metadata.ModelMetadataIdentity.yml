### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  id: ModelMetadataIdentity
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ContainerType
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Type,System.String,System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForType(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.GetHashCode
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.MetadataKind
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelType
  - Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Name
  langs:
  - csharp
  - vb
  name: ModelMetadataIdentity
  nameWithType: ModelMetadataIdentity
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelMetadataIdentity
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nA key type which identifies a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public struct ModelMetadataIdentity : IEquatable<ModelMetadataIdentity>'
    content.vb: >-
      Public Structure ModelMetadataIdentity
          Implements IEquatable(Of ModelMetadataIdentity)
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForType(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForType(System.Type)
  id: ForType(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: ForType(Type)
  nameWithType: ModelMetadataIdentity.ForType(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ForType
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity\" data-throw-if-not-resolved=\"false\"></xref> for the provided model <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static ModelMetadataIdentity ForType(Type modelType)
    content.vb: Public Shared Function ForType(modelType As Type) As ModelMetadataIdentity
    parameters:
    - id: modelType
      type: System.Type
      description: The model <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Type,System.String,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Type,System.String,System.Type)
  id: ForProperty(System.Type,System.String,System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: ForProperty(Type, String, Type)
  nameWithType: ModelMetadataIdentity.ForProperty(Type, String, Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Type, System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ForProperty
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity\" data-throw-if-not-resolved=\"false\"></xref> for the provided property.\n"
  example: []
  syntax:
    content: public static ModelMetadataIdentity ForProperty(Type modelType, string name, Type containerType)
    content.vb: Public Shared Function ForProperty(modelType As Type, name As String, containerType As Type) As ModelMetadataIdentity
    parameters:
    - id: modelType
      type: System.Type
      description: The model type.
    - id: name
      type: System.String
      description: The name of the property.
    - id: containerType
      type: System.Type
      description: The container type of the model property.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ContainerType
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ContainerType
  id: ContainerType
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: ContainerType
  nameWithType: ModelMetadataIdentity.ContainerType
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ContainerType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ContainerType
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> defining the model property respresented by the current\ninstance, or <code>null</code> if the current instance does not represent a property.\n"
  example: []
  syntax:
    content: public Type ContainerType { get; }
    content.vb: Public ReadOnly Property ContainerType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelType
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelType
  id: ModelType
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: ModelType
  nameWithType: ModelMetadataIdentity.ModelType
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelType
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> represented by the current instance.\n"
  example: []
  syntax:
    content: public Type ModelType { get; }
    content.vb: Public ReadOnly Property ModelType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.MetadataKind
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.MetadataKind
  id: MetadataKind
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: MetadataKind
  nameWithType: ModelMetadataIdentity.MetadataKind
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.MetadataKind
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MetadataKind
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets a value indicating the kind of metadata represented by the current instance.\n"
  example: []
  syntax:
    content: public ModelMetadataKind MetadataKind { get; }
    content.vb: Public ReadOnly Property MetadataKind As ModelMetadataKind
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Name
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Name
  id: Name
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModelMetadataIdentity.Name
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Name
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  summary: "\nGets the name of the current instance if it represents a parameter or property, or <code>null</code> if\nthe current instance represents a type.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  id: Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: Equals(ModelMetadataIdentity)
  nameWithType: ModelMetadataIdentity.Equals(ModelMetadataIdentity)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  example: []
  syntax:
    content: public bool Equals(ModelMetadataIdentity other)
    content.vb: Public Function Equals(other As ModelMetadataIdentity) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ModelMetadataIdentity.Equals(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.GetHashCode
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ModelMetadataIdentity.GetHashCode()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/Metadata/ModelMetadataIdentity.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ModelMetadataIdentity>
  nameWithType: IEquatable<ModelMetadataIdentity>
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity>
  nameWithType.vb: IEquatable(Of ModelMetadataIdentity)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  name.vb: IEquatable(Of ModelMetadataIdentity)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
    name: ModelMetadataIdentity
    nameWithType: ModelMetadataIdentity
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
    name: ModelMetadataIdentity
    nameWithType: ModelMetadataIdentity
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: ModelMetadataIdentity
  nameWithType: ModelMetadataIdentity
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: ModelMetadataKind
  nameWithType: ModelMetadataKind
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  parent: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ModelMetadataIdentity)
  nameWithType: IEquatable<ModelMetadataIdentity>.Equals(ModelMetadataIdentity)
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity>.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  nameWithType.vb: IEquatable(Of ModelMetadataIdentity).Equals(ModelMetadataIdentity)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity).Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ModelMetadataIdentity>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
    name: ModelMetadataIdentity
    nameWithType: ModelMetadataIdentity
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ModelMetadataIdentity).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
    name: ModelMetadataIdentity
    nameWithType: ModelMetadataIdentity
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
