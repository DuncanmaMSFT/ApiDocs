### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  id: ValueProviderResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues,System.Globalization.CultureInfo)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Culture
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetEnumerator
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetHashCode
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Length
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.None
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String[]
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ToString
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Values
  langs:
  - csharp
  - vb
  name: ValueProviderResult
  nameWithType: ValueProviderResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderResult
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nResult of an <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)\" data-throw-if-not-resolved=\"false\"></xref> operation.\n"
  remarks: "\n<p>\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> can represent a single submitted value or multiple submitted values.\n</p>\n<p>\nUse <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue\" data-throw-if-not-resolved=\"false\"></xref> to consume only a single value, regardless of whether a single value or\nmultiple values were submitted.\n</p>\n<p>\nTreat <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> as an <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> to consume all values,\nregardless of whether a single value or multiple values were submitted.\n</p>\n"
  example: []
  syntax:
    content: 'public struct ValueProviderResult : IEquatable<ValueProviderResult>, IEnumerable<string>, IEnumerable'
    content.vb: >-
      Public Structure ValueProviderResult
          Implements IEquatable(Of ValueProviderResult), IEnumerable(Of String), IEnumerable
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}
  - System.Collections.Generic.IEnumerable{System.String}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(System.Type)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.None
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.None
  id: None
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ValueProviderResult.None
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.None
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: None
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> that represents a lack of data.\n"
  example: []
  syntax:
    content: public static ValueProviderResult None
    content.vb: Public Shared None As ValueProviderResult
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues)
  id: '#ctor(Microsoft.Extensions.Primitives.StringValues)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: ValueProviderResult(StringValues)
  nameWithType: ValueProviderResult.ValueProviderResult(StringValues)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ValueProviderResult(Microsoft.Extensions.Primitives.StringValues)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> using <xref href=\"System.Globalization.CultureInfo.InvariantCulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ValueProviderResult(StringValues values)
    content.vb: Public Sub New(values As StringValues)
    parameters:
    - id: values
      type: Microsoft.Extensions.Primitives.StringValues
      description: The submitted values.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues,System.Globalization.CultureInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.#ctor(Microsoft.Extensions.Primitives.StringValues,System.Globalization.CultureInfo)
  id: '#ctor(Microsoft.Extensions.Primitives.StringValues,System.Globalization.CultureInfo)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: ValueProviderResult(StringValues, CultureInfo)
  nameWithType: ValueProviderResult.ValueProviderResult(StringValues, CultureInfo)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ValueProviderResult(Microsoft.Extensions.Primitives.StringValues, System.Globalization.CultureInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ValueProviderResult(StringValues values, CultureInfo culture)
    content.vb: Public Sub New(values As StringValues, culture As CultureInfo)
    parameters:
    - id: values
      type: Microsoft.Extensions.Primitives.StringValues
      description: The submitted values.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> associated with this value.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Culture
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Culture
  id: Culture
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: ValueProviderResult.Culture
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Culture
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Culture
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> associated with the values.\n"
  example: []
  syntax:
    content: public CultureInfo Culture { get; }
    content.vb: Public ReadOnly Property Culture As CultureInfo
    parameters: []
    return:
      type: System.Globalization.CultureInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Values
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Values
  id: Values
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ValueProviderResult.Values
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Values
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the values.\n"
  example: []
  syntax:
    content: public StringValues Values { get; }
    content.vb: Public ReadOnly Property Values As StringValues
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringValues
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
  id: FirstValue
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: FirstValue
  nameWithType: ValueProviderResult.FirstValue
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FirstValue
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the first value based on the order values were provided in the request. Use <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue\" data-throw-if-not-resolved=\"false\"></xref>\nto get a single value for processing regardless of whether a single or multiple values were provided\nin the request.\n"
  example: []
  syntax:
    content: public string FirstValue { get; }
    content.vb: Public ReadOnly Property FirstValue As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Length
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Length
  id: Length
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ValueProviderResult.Length
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Length
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the number of submitted values.\n"
  example: []
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ValueProviderResult.Equals(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  id: Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Equals(ValueProviderResult)
  nameWithType: ValueProviderResult.Equals(ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 102
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public bool Equals(ValueProviderResult other)
    content.vb: Public Function Equals(other As ValueProviderResult) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetHashCode
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ValueProviderResult.GetHashCode()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ToString
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ValueProviderResult.ToString()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ToString
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ValueProviderResult.GetEnumerator()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> for this <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerator<string> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of String)
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: An <xref href="System.Collections.Generic.IEnumerator%601" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ValueProviderResult.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 145
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ValueProviderResult.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String
  id: op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Explicit(ValueProviderResult to String)
  nameWithType: ValueProviderResult.Explicit(ValueProviderResult to String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult to System.String)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Explicit
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nConverts the provided <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> into a comma-separated string containing all\nsubmitted values.\n"
  example: []
  syntax:
    content: public static explicit operator string (ValueProviderResult result)
    content.vb: Public Shared Narrowing Operator CType(result As ValueProviderResult) As String
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
  nameWithType.vb: ValueProviderResult.Narrowing(ValueProviderResult to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Narrowing(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult to System.String)
  name.vb: Narrowing(ValueProviderResult to String)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String[]
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String[]
  id: op_Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)~System.String[]
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Explicit(ValueProviderResult to String[])
  nameWithType: ValueProviderResult.Explicit(ValueProviderResult to String[])
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Explicit(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult to System.String[])
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Explicit
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nConverts the provided <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> into a an array of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing\nall submitted values.\n"
  example: []
  syntax:
    content: public static explicit operator string[](ValueProviderResult result)
    content.vb: Public Shared Narrowing Operator CType(result As ValueProviderResult) As String()
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String[]
  nameWithType.vb: ValueProviderResult.Narrowing(ValueProviderResult to String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Narrowing(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult to System.String())
  name.vb: Narrowing(ValueProviderResult to String())
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  id: op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Equality(ValueProviderResult, ValueProviderResult)
  nameWithType: ValueProviderResult.Equality(ValueProviderResult, ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 176
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCompares two <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> objects for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(ValueProviderResult x, ValueProviderResult y)
    content.vb: Public Shared Operator =(x As ValueProviderResult, y As ValueProviderResult) As Boolean
    parameters:
    - id: x
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    - id: y
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the values are equal, otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  id: op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  langs:
  - csharp
  - vb
  name: Inequality(ValueProviderResult, ValueProviderResult)
  nameWithType: ValueProviderResult.Inequality(ValueProviderResult, ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderResult.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCompares two <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> objects for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(ValueProviderResult x, ValueProviderResult y)
    content.vb: Public Shared Operator <>(x As ValueProviderResult, y As ValueProviderResult) As Boolean
    parameters:
    - id: x
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    - id: y
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>false</code> if the values are equal, otherwise <code>true</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  isExternal: true
  name: GetValue(String)
  nameWithType: IValueProvider.GetValue(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
    name: GetValue
    nameWithType: IValueProvider.GetValue
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
    name: GetValue
    nameWithType: IValueProvider.GetValue
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ValueProviderResult
  nameWithType: ValueProviderResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ValueProviderResult>
  nameWithType: IEquatable<ValueProviderResult>
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult>
  nameWithType.vb: IEquatable(Of ValueProviderResult)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  name.vb: IEquatable(Of ValueProviderResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  name: ConvertTo<T>()
  nameWithType: ValueProviderResultExtensions.ConvertTo<T>()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo<T>()
  nameWithType.vb: ValueProviderResultExtensions.ConvertTo(Of T)()
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Of T)()
  name.vb: ConvertTo(Of T)()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1
    name: ConvertTo<T>
    nameWithType: ValueProviderResultExtensions.ConvertTo<T>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1
    name: ConvertTo(Of T)
    nameWithType: ValueProviderResultExtensions.ConvertTo(Of T)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  name: ConvertTo(Type)
  nameWithType: ValueProviderResultExtensions.ConvertTo(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(System.Type)
    name: ConvertTo
    nameWithType: ValueProviderResultExtensions.ConvertTo
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(System.Type)
    name: ConvertTo
    nameWithType: ValueProviderResultExtensions.ConvertTo
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  isExternal: false
  name: ConvertTo<T>(ValueProviderResult)
  nameWithType: ValueProviderResultExtensions.ConvertTo<T>(ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo<T>(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  nameWithType.vb: ValueProviderResultExtensions.ConvertTo(Of T)(ValueProviderResult)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Of T)(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  name.vb: ConvertTo(Of T)(ValueProviderResult)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
    name: ConvertTo<T>
    nameWithType: ValueProviderResultExtensions.ConvertTo<T>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
    name: ConvertTo(Of T)
    nameWithType: ValueProviderResultExtensions.ConvertTo(Of T)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ValueProviderResultExtensions
  nameWithType: ValueProviderResultExtensions
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  isExternal: true
  name: ConvertTo(ValueProviderResult, Type)
  nameWithType: ValueProviderResultExtensions.ConvertTo(ValueProviderResult, Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult, System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
    name: ConvertTo
    nameWithType: ValueProviderResultExtensions.ConvertTo
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
    name: ConvertTo
    nameWithType: ValueProviderResultExtensions.ConvertTo
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo.InvariantCulture
  commentId: P:System.Globalization.CultureInfo.InvariantCulture
- uid: Microsoft.Extensions.Primitives.StringValues
  commentId: T:Microsoft.Extensions.Primitives.StringValues
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: Microsoft.Extensions.Primitives.StringValues
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ValueProviderResult)
  nameWithType: IEquatable<ValueProviderResult>.Equals(ValueProviderResult)
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult>.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  nameWithType.vb: IEquatable(Of ValueProviderResult).Equals(ValueProviderResult)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult).Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ValueProviderResult>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ValueProviderResult).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
    name: ValueProviderResult
    nameWithType: ValueProviderResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.String}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<String>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of String).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<String>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.String>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of String).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.String).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.String}
  commentId: T:System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  nameWithType.vb: IEnumerator(Of String)
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.String)
  name.vb: IEnumerator(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
