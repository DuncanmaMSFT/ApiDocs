### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider
  id: IEnumerableValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider.GetKeysFromPrefix(System.String)
  langs:
  - csharp
  - vb
  name: IEnumerableValueProvider
  nameWithType: IEnumerableValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IEnumerableValueProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IEnumerableValueProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IEnumerableValueProvider.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  syntax:
    content: 'public interface IEnumerableValueProvider : IValueProvider'
    content.vb: >-
      Public Interface IEnumerableValueProvider
          Inherits IValueProvider
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider.GetKeysFromPrefix(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider.GetKeysFromPrefix(System.String)
  id: GetKeysFromPrefix(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider
  langs:
  - csharp
  - vb
  name: GetKeysFromPrefix(String)
  nameWithType: IEnumerableValueProvider.GetKeysFromPrefix(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider.GetKeysFromPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IEnumerableValueProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetKeysFromPrefix
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/IEnumerableValueProvider.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  syntax:
    content: IDictionary<string, string> GetKeysFromPrefix(string prefix)
    content.vb: Function GetKeysFromPrefix(prefix As String) As IDictionary(Of String, String)
    parameters:
    - id: prefix
      type: System.String
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  isExternal: true
  name: ContainsPrefix(String)
  nameWithType: IValueProvider.ContainsPrefix(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
    name: ContainsPrefix
    nameWithType: IValueProvider.ContainsPrefix
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(System.String)
    name: ContainsPrefix
    nameWithType: IValueProvider.ContainsPrefix
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  isExternal: true
  name: GetValue(String)
  nameWithType: IValueProvider.GetValue(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
    name: GetValue
    nameWithType: IValueProvider.GetValue
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(System.String)
    name: GetValue
    nameWithType: IValueProvider.GetValue
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
