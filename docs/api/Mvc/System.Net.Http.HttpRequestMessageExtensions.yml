### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpRequestMessageExtensions
  commentId: T:System.Net.Http.HttpRequestMessageExtensions
  id: HttpRequestMessageExtensions
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)
  - System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)
  - System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)
  langs:
  - csharp
  - vb
  name: HttpRequestMessageExtensions
  nameWithType: HttpRequestMessageExtensions
  fullName: System.Net.Http.HttpRequestMessageExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpRequestMessageExtensions
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nProvides extension methods for the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class HttpRequestMessageExtensions
    content.vb: Public Module HttpRequestMessageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, InvalidByteRangeException)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, InvalidByteRangeException)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.Http.InvalidByteRangeException)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method for creating an <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> message with a \"416 (Requested Range Not\nSatisfiable)\" status code. This response can be used in combination with the\n<xref href=\"System.Net.Http.ByteRangeStreamContent\" data-throw-if-not-resolved=\"false\"></xref> to indicate that the requested range or\nranges do not overlap with the current resource. The response contains a \"Content-Range\" header indicating\nthe valid upper and lower bounds for requested ranges.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, InvalidByteRangeException invalidByteRangeException)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, invalidByteRangeException As InvalidByteRangeException) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: invalidByteRangeException
      type: System.Net.Http.InvalidByteRangeException
      description: >-
        An <xref href="System.Net.Http.InvalidByteRangeException" data-throw-if-not-resolved="false"></xref> instance, typically

        thrown by a <xref href="System.Net.Http.ByteRangeStreamContent" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nAn 416 (Requested Range Not Satisfiable) error response with a Content-Range header indicating the valid\nrange.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, HttpStatusCode, String)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, HttpStatusCode, String)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting an error with an instance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> wrapping an\n<xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> with message <em>message</em>. If no formatter is found, this method\nreturns a response with status 406 NotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, HttpStatusCode statusCode, string message)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, statusCode As HttpStatusCode, message As String) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: message
      type: System.String
      description: The error message.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nAn error response with error message <em>message</em> and status code\n<em>statusCode</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, HttpStatusCode, String, Exception)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, HttpStatusCode, String, Exception)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting an error with an instance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> wrapping an\n<xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> with error message <em>message</em> for exception\n<em>exception</em>. If no formatter is found, this method returns a response with status 406\nNotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, HttpStatusCode statusCode, string message, Exception exception)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, statusCode As HttpStatusCode, message As String, exception As Exception) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: message
      type: System.String
      description: The error message.
    - id: exception
      type: System.Exception
      description: The exception.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: >-
        An error response for <em>exception</em> with error message <em>message</em>

        and status code <em>statusCode</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, HttpStatusCode, Exception)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, HttpStatusCode, Exception)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting an error with an instance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> wrapping an\n<xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> for exception <em>exception</em>. If no formatter is found, this method\nreturns a response with status 406 NotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, HttpStatusCode statusCode, Exception exception)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, statusCode As HttpStatusCode, exception As Exception) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: exception
      type: System.Exception
      description: The exception.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nAn error response for <em>exception</em> with status code <em>statusCode</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, HttpStatusCode, ModelStateDictionary)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, HttpStatusCode, ModelStateDictionary)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting an error with an instance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> wrapping an\n<xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> for model state <em>modelState</em>. If no formatter is found, this\nmethod returns a response with status 406 NotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, HttpStatusCode statusCode, ModelStateDictionary modelState)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, statusCode As HttpStatusCode, modelState As ModelStateDictionary) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The model state.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nAn error response for <em>modelState</em> with status code <em>statusCode</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)
  id: CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateErrorResponse(HttpRequestMessage, HttpStatusCode, HttpError)
  nameWithType: HttpRequestMessageExtensions.CreateErrorResponse(HttpRequestMessage, HttpStatusCode, HttpError)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, System.Web.Http.HttpError)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateErrorResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 220
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting an error with an instance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> wrapping <em>error</em>\nas the content. If no formatter is found, this method returns a response with status 406 NotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateErrorResponse(this HttpRequestMessage request, HttpStatusCode statusCode, HttpError error)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateErrorResponse(request As HttpRequestMessage, statusCode As HttpStatusCode, error As HttpError) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: error
      type: System.Web.Http.HttpError
      description: The error to wrap.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nAn error response wrapping <em>error</em> with status code <em>statusCode</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, T)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, T)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, T)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 254
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an\ninstance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> as the content and <xref href=\"System.Net.HttpStatusCode.OK\" data-throw-if-not-resolved=\"false\"></xref>\nas the status code if a formatter can be found. If no formatter is found, this method returns a response\nwith status 406 NotAcceptable.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, T value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, value As T) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\nA response wrapping <em>value</em> with <xref href=\"System.Net.HttpStatusCode.OK\" data-throw-if-not-resolved=\"false\"></xref> status code.\n"
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, T)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, T)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 284
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an\ninstance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> as the content if a formatter can be found. If no formatter is\nfound, this method returns a response with status 406 NotAcceptable.\nconfiguration.\n"
  remarks: "\nThis method requires that <em>request</em> has been associated with an instance of\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, IEnumerable<MediaTypeFormatter>)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, IEnumerable<MediaTypeFormatter>)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Collections.Generic.IEnumerable<System.Net.Http.Formatting.MediaTypeFormatter>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 306
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that performs content negotiation and creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an\ninstance of <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref> as the content if a formatter can be found. If no formatter is\nfound, this method returns a response with status 406 NotAcceptable.\n"
  remarks: "\nThis method will get the <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> instance associated with <em>request</em>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, IEnumerable<MediaTypeFormatter> formatters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, formatters As IEnumerable(Of MediaTypeFormatter)) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: formatters
      type: System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter}
      description: The set of <xref href="System.Net.Http.Formatting.MediaTypeFormatter" data-throw-if-not-resolved="false"></xref> objects from which to choose.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, IEnumerable(Of MediaTypeFormatter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Collections.Generic.IEnumerable(Of System.Net.Http.Formatting.MediaTypeFormatter))
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, IEnumerable(Of MediaTypeFormatter))
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, String)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, String)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 356
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref>\ninstance containing the provided <em>value</em>. The given <em>mediaType</em> is used\nto find an instance of <xref href=\"System.Net.Http.Formatting.MediaTypeFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, string mediaType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, mediaType As String) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: mediaType
      type: System.String
      description: "\nThe media type used to look up an instance of <xref href=\"System.Net.Http.Formatting.MediaTypeFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.String)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, String)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeHeaderValue)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeHeaderValue)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 378
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref>\ninstance containing the provided <em>value</em>. The given <em>mediaType</em> is used\nto find an instance of <xref href=\"System.Net.Http.Formatting.MediaTypeFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeHeaderValue mediaType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, mediaType As MediaTypeHeaderValue) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: mediaType
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "\nThe media type used to look up an instance of <xref href=\"System.Net.Http.Formatting.MediaTypeFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeHeaderValue)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 427
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref>\ninstance containing the provided <em>value</em> and the given <em>formatter</em>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, formatter As MediaTypeFormatter) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: formatter
      type: System.Net.Http.Formatting.MediaTypeFormatter
      description: The formatter to use.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, String)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, String)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 464
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref>\ninstance containing the provided <em>value</em> and the given <em>formatter</em>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter, string mediaType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, formatter As MediaTypeFormatter, mediaType As String) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: formatter
      type: System.Net.Http.Formatting.MediaTypeFormatter
      description: The formatter to use.
    - id: mediaType
      type: System.String
      description: "\nThe media type override to set on the response's content. Can be <code>null</code>.\n"
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, String)
- uid: System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  id: CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  isExtensionMethod: true
  parent: System.Net.Http.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  nameWithType: HttpRequestMessageExtensions.CreateResponse<T>(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  fullName: System.Net.Http.HttpRequestMessageExtensions.CreateResponse<T>(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateResponse
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpRequestMessage/HttpRequestMessageExtensions.cs
    startLine: 503
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Net.Http
  summary: "\nHelper method that creates a <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> with an <xref href=\"System.Net.Http.ObjectContent%601\" data-throw-if-not-resolved=\"false\"></xref>\ninstance containing the provided <em>value</em> and the given <em>formatter</em>.\n"
  example: []
  syntax:
    content: public static HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, HttpStatusCode statusCode, T value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateResponse(Of T)(request As HttpRequestMessage, statusCode As HttpStatusCode, value As T, formatter As MediaTypeFormatter, mediaType As MediaTypeHeaderValue) As HttpResponseMessage
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request.
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The status code of the created response.
    - id: value
      type: '{T}'
      description: The value to wrap. Can be <code>null</code>.
    - id: formatter
      type: System.Net.Http.Formatting.MediaTypeFormatter
      description: The formatter to use.
    - id: mediaType
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "\nThe media type override to set on the response's content. Can be <code>null</code>.\n"
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: System.Net.Http.HttpResponseMessage
      description: A response wrapping <em>value</em> with <em>statusCode</em>.
  nameWithType.vb: HttpRequestMessageExtensions.CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.HttpRequestMessageExtensions.CreateResponse(Of T)(System.Net.Http.HttpRequestMessage, System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: CreateResponse(Of T)(HttpRequestMessage, HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
references:
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http.ByteRangeStreamContent
  commentId: T:System.Net.Http.ByteRangeStreamContent
- uid: System.Net.Http.InvalidByteRangeException
  commentId: T:System.Net.Http.InvalidByteRangeException
  parent: System.Net.Http
  isExternal: true
  name: InvalidByteRangeException
  nameWithType: InvalidByteRangeException
  fullName: System.Net.Http.InvalidByteRangeException
- uid: System.Net.Http.ObjectContent`1
  commentId: T:System.Net.Http.ObjectContent`1
- uid: System.Web.Http.HttpError
  commentId: T:System.Web.Http.HttpError
  parent: System.Web.Http
  isExternal: false
  name: HttpError
  nameWithType: HttpError
  fullName: System.Web.Http.HttpError
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Net.HttpStatusCode.OK
  commentId: F:System.Net.HttpStatusCode.OK
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Net.Http.Formatting.MediaTypeFormatter
  commentId: T:System.Net.Http.Formatting.MediaTypeFormatter
  parent: System.Net.Http.Formatting
  isExternal: true
  name: MediaTypeFormatter
  nameWithType: MediaTypeFormatter
  fullName: System.Net.Http.Formatting.MediaTypeFormatter
- uid: System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter}
  commentId: T:System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MediaTypeFormatter>
  nameWithType: IEnumerable<MediaTypeFormatter>
  fullName: System.Collections.Generic.IEnumerable<System.Net.Http.Formatting.MediaTypeFormatter>
  nameWithType.vb: IEnumerable(Of MediaTypeFormatter)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.Http.Formatting.MediaTypeFormatter)
  name.vb: IEnumerable(Of MediaTypeFormatter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.Formatting
  commentId: N:System.Net.Http.Formatting
  isExternal: false
  name: System.Net.Http.Formatting
  nameWithType: System.Net.Http.Formatting
  fullName: System.Net.Http.Formatting
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:System.Net.Http.Headers.MediaTypeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue
- uid: System.Net.Http.Headers
  commentId: N:System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  nameWithType: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
