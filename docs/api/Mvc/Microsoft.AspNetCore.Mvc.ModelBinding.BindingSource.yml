### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  id: BindingSource
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.DisplayName
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Form
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.GetHashCode
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Id
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsFromRequest
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.ModelBinding
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query
  - Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  langs:
  - csharp
  - vb
  name: BindingSource
  nameWithType: BindingSource
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BindingSource
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA metadata object representing a source of data for model binding.\n"
  example: []
  syntax:
    content: 'public class BindingSource : IEquatable<BindingSource>'
    content.vb: >-
      Public Class BindingSource
          Implements IEquatable(Of BindingSource)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body
  id: Body
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: BindingSource.Body
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Body
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for the request body.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Body
    content.vb: Public Shared ReadOnly Body As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom
  id: Custom
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: BindingSource.Custom
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Custom
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for a custom model binder (unknown data source).\n"
  example: []
  syntax:
    content: public static readonly BindingSource Custom
    content.vb: Public Shared ReadOnly Custom As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Form
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Form
  id: Form
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Form
  nameWithType: BindingSource.Form
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Form
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Form
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for the request form-data.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Form
    content.vb: Public Shared ReadOnly Form As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header
  id: Header
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: BindingSource.Header
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Header
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for the request headers.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Header
    content.vb: Public Shared ReadOnly Header As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.ModelBinding
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.ModelBinding
  id: ModelBinding
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: ModelBinding
  nameWithType: BindingSource.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.ModelBinding
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBinding
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for model binding. Includes form-data, query-string\nand route data from the request.\n"
  example: []
  syntax:
    content: public static readonly BindingSource ModelBinding
    content.vb: Public Shared ReadOnly ModelBinding As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path
  id: Path
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: BindingSource.Path
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Path
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for the request url path.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Path
    content.vb: Public Shared ReadOnly Path As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query
  id: Query
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: BindingSource.Query
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Query
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for the request query-string.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Query
    content.vb: Public Shared ReadOnly Query As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  id: Services
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: BindingSource.Services
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Services
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> for request services.\n"
  example: []
  syntax:
    content: public static readonly BindingSource Services
    content.vb: Public Shared ReadOnly Services As BindingSource
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean,System.Boolean)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: BindingSource(String, String, Boolean, Boolean)
  nameWithType: BindingSource.BindingSource(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.BindingSource(System.String, System.String, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BindingSource(string id, string displayName, bool isGreedy, bool isFromRequest)
    content.vb: Public Sub New(id As String, displayName As String, isGreedy As Boolean, isFromRequest As Boolean)
    parameters:
    - id: id
      type: System.String
      description: The id, a unique identifier.
    - id: displayName
      type: System.String
      description: The display name.
    - id: isGreedy
      type: System.Boolean
      description: A value indicating whether or not the source is greedy.
    - id: isFromRequest
      type: System.Boolean
      description: "\nA value indicating whether or not the data comes from the HTTP request.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.DisplayName
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.DisplayName
  id: DisplayName
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: BindingSource.DisplayName
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.DisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayName
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the display name for the source.\n"
  example: []
  syntax:
    content: public string DisplayName { get; }
    content.vb: Public ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Id
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Id
  id: Id
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BindingSource.Id
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Id
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 118
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the unique identifier for the source. Sources are compared based on their Id.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  id: IsGreedy
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: IsGreedy
  nameWithType: BindingSource.IsGreedy
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsGreedy
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a value indicating whether or not a source is greedy. A greedy source will bind a model in\na single operation, and will not decompose the model into sub-properties.\n"
  remarks: "\n<p>\nFor sources based on a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref>, setting <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy\" data-throw-if-not-resolved=\"false\"></xref> to <code>false</code>\nwill most closely describe the behavior. This value is used inside the default model binders to \ndetermine whether or not to attempt to bind properties of a model.\n</p>\n<p>\nSet <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy\" data-throw-if-not-resolved=\"false\"></xref> to <code>true</code> for most custom <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder\" data-throw-if-not-resolved=\"false\"></xref> implementations.\n</p>\n<p>\nIf a source represents an <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder\" data-throw-if-not-resolved=\"false\"></xref> which will recursively traverse a model's properties\nand bind them individually using <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref>, then set <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy\" data-throw-if-not-resolved=\"false\"></xref> to\n<code>true</code>.\n</p>\n"
  example: []
  syntax:
    content: public bool IsGreedy { get; }
    content.vb: Public ReadOnly Property IsGreedy As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsFromRequest
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsFromRequest
  id: IsFromRequest
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: IsFromRequest
  nameWithType: BindingSource.IsFromRequest
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsFromRequest
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsFromRequest
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 148
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a value indicating whether or not the binding source uses input from the current HTTP request.\n"
  remarks: "\nSome sources (like <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services\" data-throw-if-not-resolved=\"false\"></xref>) are based on application state and not user\ninput. These are excluded by default from ApiExplorer diagnostics.\n"
  example: []
  syntax:
    content: public bool IsFromRequest { get; }
    content.vb: Public ReadOnly Property IsFromRequest As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  id: CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: CanAcceptDataFrom(BindingSource)
  nameWithType: BindingSource.CanAcceptDataFrom(BindingSource)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanAcceptDataFrom
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a value indicating whether or not the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\" data-throw-if-not-resolved=\"false\"></xref> can accept\ndata from <em>bindingSource</em>.\n"
  remarks: "\nWhen using this method, it is expected that the left-hand-side is metadata specified\non a property or parameter for model binding, and the right hand side is a source of\ndata used by a model binder or value provider.\n\nThis distinction is important as the left-hand-side may be a composite, but the right\nmay not.\n"
  example: []
  syntax:
    content: public virtual bool CanAcceptDataFrom(BindingSource bindingSource)
    content.vb: Public Overridable Function CanAcceptDataFrom(bindingSource As BindingSource) As Boolean
    parameters:
    - id: bindingSource
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource" data-throw-if-not-resolved="false"></xref> to consider as input.
    return:
      type: System.Boolean
      description: <code>True</code> if the source is compatible, otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  id: Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Equals(BindingSource)
  nameWithType: BindingSource.Equals(BindingSource)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 183
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public bool Equals(BindingSource other)
    content.vb: Public Function Equals(other As BindingSource) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BindingSource.Equals(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 189
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.GetHashCode
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BindingSource.GetHashCode()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 195
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  id: op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Equality(BindingSource, BindingSource)
  nameWithType: BindingSource.Equality(BindingSource, BindingSource)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 201
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public static bool operator ==(BindingSource s1, BindingSource s2)
    content.vb: Public Shared Operator =(s1 As BindingSource, s2 As BindingSource) As Boolean
    parameters:
    - id: s1
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    - id: s2
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  id: op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  langs:
  - csharp
  - vb
  name: Inequality(BindingSource, BindingSource)
  nameWithType: BindingSource.Inequality(BindingSource, BindingSource)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingSource.cs
    startLine: 212
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public static bool operator !=(BindingSource s1, BindingSource s2)
    content.vb: Public Shared Operator <>(s1 As BindingSource, s2 As BindingSource) As Boolean
    parameters:
    - id: s1
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    - id: s2
      type: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BindingSource>
  nameWithType: IEquatable<BindingSource>
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource>
  nameWithType.vb: IEquatable(Of BindingSource)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  name.vb: IEquatable(Of BindingSource)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    name: BindingSource
    nameWithType: BindingSource
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    name: BindingSource
    nameWithType: BindingSource
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: BindingSource
  nameWithType: BindingSource
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  isExternal: false
  name: IsGreedy
  nameWithType: BindingSource.IsGreedy
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelBinder
  nameWithType: IModelBinder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  isExternal: false
  name: Services
  nameWithType: BindingSource.Services
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  parent: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BindingSource)
  nameWithType: IEquatable<BindingSource>.Equals(BindingSource)
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource>.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  nameWithType.vb: IEquatable(Of BindingSource).Equals(BindingSource)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource).Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BindingSource>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    name: BindingSource
    nameWithType: BindingSource
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BindingSource).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
    name: BindingSource
    nameWithType: BindingSource
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
