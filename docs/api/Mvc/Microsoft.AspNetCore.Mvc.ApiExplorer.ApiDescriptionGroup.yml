### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  id: ApiDescriptionGroup
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  children:
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription})
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.GroupName
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.Items
  langs:
  - csharp
  - vb
  name: ApiDescriptionGroup
  nameWithType: ApiDescriptionGroup
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApiDescriptionGroup
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nRepresents a group of related apis.\n"
  example: []
  syntax:
    content: public class ApiDescriptionGroup
    content.vb: Public Class ApiDescriptionGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription})
  commentId: M:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription})
  id: '#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription})'
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  langs:
  - csharp
  - vb
  name: ApiDescriptionGroup(String, IReadOnlyList<ApiDescription>)
  nameWithType: ApiDescriptionGroup.ApiDescriptionGroup(String, IReadOnlyList<ApiDescription>)
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.ApiDescriptionGroup(System.String, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ApiDescriptionGroup(string groupName, IReadOnlyList<ApiDescription> items)
    content.vb: Public Sub New(groupName As String, items As IReadOnlyList(Of ApiDescription))
    parameters:
    - id: groupName
      type: System.String
      description: The group name.
    - id: items
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
      description: A collection of <xref href="Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription" data-throw-if-not-resolved="false"></xref> items for this group.
  nameWithType.vb: ApiDescriptionGroup.ApiDescriptionGroup(String, IReadOnlyList(Of ApiDescription))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.ApiDescriptionGroup(System.String, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription))
  name.vb: ApiDescriptionGroup(String, IReadOnlyList(Of ApiDescription))
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.GroupName
  commentId: P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.GroupName
  id: GroupName
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: ApiDescriptionGroup.GroupName
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.GroupName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GroupName
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nThe group name.\n"
  example: []
  syntax:
    content: public string GroupName { get; }
    content.vb: Public ReadOnly Property GroupName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.Items
  commentId: P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.Items
  id: Items
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ApiDescriptionGroup.Items
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup.Items
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Items
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionGroup.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription\" data-throw-if-not-resolved=\"false\"></xref> items for this group.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ApiDescription> Items { get; }
    content.vb: Public ReadOnly Property Items As IReadOnlyList(Of ApiDescription)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
  isExternal: false
  name: ApiDescriptionGroup
  nameWithType: ApiDescriptionGroup
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionGroup
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: ApiDescription
  nameWithType: ApiDescription
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ApiDescription>
  nameWithType: IReadOnlyList<ApiDescription>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription>
  nameWithType.vb: IReadOnlyList(Of ApiDescription)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription)
  name.vb: IReadOnlyList(Of ApiDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
    name: ApiDescription
    nameWithType: ApiDescription
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
    name: ApiDescription
    nameWithType: ApiDescription
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
