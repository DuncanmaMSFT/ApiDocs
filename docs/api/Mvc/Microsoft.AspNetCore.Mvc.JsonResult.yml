### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.JsonResult
  commentId: T:Microsoft.AspNetCore.Mvc.JsonResult
  id: JsonResult
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object)
  - Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  - Microsoft.AspNetCore.Mvc.JsonResult.ContentType
  - Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  - Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings
  - Microsoft.AspNetCore.Mvc.JsonResult.StatusCode
  - Microsoft.AspNetCore.Mvc.JsonResult.Value
  langs:
  - csharp
  - vb
  name: JsonResult
  nameWithType: JsonResult
  fullName: Microsoft.AspNetCore.Mvc.JsonResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: JsonResult
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nAn action result which formats the given object as JSON.\n"
  example: []
  syntax:
    content: 'public class JsonResult : ActionResult, IActionResult'
    content.vb: >-
      Public Class JsonResult
          Inherits ActionResult
          Implements IActionResult
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionResult
  implements:
  - Microsoft.AspNetCore.Mvc.IActionResult
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: JsonResult(Object)
  nameWithType: JsonResult.JsonResult(Object)
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.JsonResult(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> with the given <em>value</em>.\n"
  example: []
  syntax:
    content: public JsonResult(object value)
    content.vb: Public Sub New(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: The value to format as JSON.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  id: '#ctor(System.Object,Newtonsoft.Json.JsonSerializerSettings)'
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: JsonResult(Object, JsonSerializerSettings)
  nameWithType: JsonResult.JsonResult(Object, JsonSerializerSettings)
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.JsonResult(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> with the given <em>value</em>.\n"
  example: []
  syntax:
    content: public JsonResult(object value, JsonSerializerSettings serializerSettings)
    content.vb: Public Sub New(value As Object, serializerSettings As JsonSerializerSettings)
    parameters:
    - id: value
      type: System.Object
      description: The value to format as JSON.
    - id: serializerSettings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: >-
        The <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> to be used by

        the formatter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.ContentType
  commentId: P:Microsoft.AspNetCore.Mvc.JsonResult.ContentType
  id: ContentType
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: JsonResult.ContentType
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.ContentType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ContentType
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> representing the Content-Type header of the response.\n"
  example: []
  syntax:
    content: public string ContentType { get; set; }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings
  commentId: P:Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings
  id: SerializerSettings
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: SerializerSettings
  nameWithType: JsonResult.SerializerSettings
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializerSettings
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Newtonsoft.Json.JsonSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings SerializerSettings { get; set; }
    content.vb: Public Property SerializerSettings As JsonSerializerSettings
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.StatusCode
  commentId: P:Microsoft.AspNetCore.Mvc.JsonResult.StatusCode
  id: StatusCode
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: JsonResult.StatusCode
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.StatusCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StatusCode
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the HTTP status code.\n"
  example: []
  syntax:
    content: public int ? StatusCode { get; set; }
    content.vb: Public Property StatusCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.Value
  commentId: P:Microsoft.AspNetCore.Mvc.JsonResult.Value
  id: Value
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: JsonResult.Value
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Value
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the value to be formatted.\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    content.vb: Public Property Value As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  id: ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.JsonResult
  langs:
  - csharp
  - vb
  name: ExecuteResultAsync(ActionContext)
  nameWithType: JsonResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteResultAsync
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/JsonResult.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc
  example: []
  syntax:
    content: public override Task ExecuteResultAsync(ActionContext context)
    content.vb: Public Overrides Function ExecuteResultAsync(context As ActionContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionResult
  nameWithType: ActionResult
  fullName: Microsoft.AspNetCore.Mvc.ActionResult
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: false
  name: ExecuteResult(ActionContext)
  nameWithType: ActionResult.ExecuteResult(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResult
    nameWithType: ActionResult.ExecuteResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.JsonResult
  commentId: T:Microsoft.AspNetCore.Mvc.JsonResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: JsonResult
  nameWithType: JsonResult
  fullName: Microsoft.AspNetCore.Mvc.JsonResult
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  parent: Microsoft.AspNetCore.Mvc.ActionResult
  isExternal: false
  name: ExecuteResultAsync(ActionContext)
  nameWithType: ActionResult.ExecuteResultAsync(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)
    name: ExecuteResultAsync
    nameWithType: ActionResult.ExecuteResultAsync
    fullName: Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
