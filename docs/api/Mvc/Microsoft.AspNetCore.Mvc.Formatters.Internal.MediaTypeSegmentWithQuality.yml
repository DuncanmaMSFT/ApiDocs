### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  id: MediaTypeSegmentWithQuality
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.MediaType
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.Quality
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.ToString
  langs:
  - csharp
  - vb
  name: MediaTypeSegmentWithQuality
  nameWithType: MediaTypeSegmentWithQuality
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MediaTypeSegmentWithQuality
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  summary: "\nA media type with its associated quality.\n"
  example: []
  syntax:
    content: public struct MediaTypeSegmentWithQuality
    content.vb: Public Structure MediaTypeSegmentWithQuality
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)
  id: '#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  langs:
  - csharp
  - vb
  name: MediaTypeSegmentWithQuality(StringSegment, Double)
  nameWithType: MediaTypeSegmentWithQuality.MediaTypeSegmentWithQuality(StringSegment, Double)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.MediaTypeSegmentWithQuality(Microsoft.Extensions.Primitives.StringSegment, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  summary: "\nInitializes an instance of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MediaTypeSegmentWithQuality(StringSegment mediaType, double quality)
    content.vb: Public Sub New(mediaType As StringSegment, quality As Double)
    parameters:
    - id: mediaType
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The <xref href="Microsoft.Extensions.Primitives.StringSegment" data-throw-if-not-resolved="false"></xref> containing the media type.
    - id: quality
      type: System.Double
      description: The quality parameter of the media type or 1 in the case it does not exist.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.MediaType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.MediaType
  id: MediaType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: MediaTypeSegmentWithQuality.MediaType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.MediaType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MediaType
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  summary: "\nGets the media type of this <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StringSegment MediaType { get; }
    content.vb: Public ReadOnly Property MediaType As StringSegment
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.Quality
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.Quality
  id: Quality
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: MediaTypeSegmentWithQuality.Quality
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.Quality
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Quality
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  summary: "\nGets the quality of this <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Quality { get; }
    content.vb: Public ReadOnly Property Quality As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.ToString
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MediaTypeSegmentWithQuality.ToString()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ToString
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MediaTypeSegmentWithQuality.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Internal
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal
  isExternal: false
  name: MediaTypeSegmentWithQuality
  nameWithType: MediaTypeSegmentWithQuality
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
- uid: Microsoft.Extensions.Primitives.StringSegment
  commentId: T:Microsoft.Extensions.Primitives.StringSegment
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringSegment
  nameWithType: StringSegment
  fullName: Microsoft.Extensions.Primitives.StringSegment
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
