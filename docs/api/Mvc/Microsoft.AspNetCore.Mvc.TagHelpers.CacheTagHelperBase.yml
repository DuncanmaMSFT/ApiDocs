### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  id: CacheTagHelperBase
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser
  - Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  langs:
  - csharp
  - vb
  name: CacheTagHelperBase
  nameWithType: CacheTagHelperBase
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CacheTagHelperBase
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" data-throw-if-not-resolved=\"false\"></xref> base implementation for caching elements.\n"
  example: []
  syntax:
    content: 'public abstract class CacheTagHelperBase : TagHelper, ITagHelper'
    content.vb: >-
      Public MustInherit Class CacheTagHelperBase
          Inherits TagHelper
          Implements ITagHelper
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  implements:
  - Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.#ctor(System.Text.Encodings.Web.HtmlEncoder)
  id: '#ctor(System.Text.Encodings.Web.HtmlEncoder)'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: CacheTagHelperBase(HtmlEncoder)
  nameWithType: CacheTagHelperBase.CacheTagHelperBase(HtmlEncoder)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.CacheTagHelperBase(System.Text.Encodings.Web.HtmlEncoder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CacheTagHelperBase(HtmlEncoder htmlEncoder)
    content.vb: Public Sub New(htmlEncoder As HtmlEncoder)
    parameters:
    - id: htmlEncoder
      type: System.Text.Encodings.Web.HtmlEncoder
      description: The <xref href="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder" data-throw-if-not-resolved="false"></xref> to use.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: CacheTagHelperBase.Order
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Order
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  example: []
  syntax:
    content: public override int Order { get; }
    content.vb: Public Overrides ReadOnly Property Order As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Order
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  id: HtmlEncoder
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: HtmlEncoder
  nameWithType: CacheTagHelperBase.HtmlEncoder
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlEncoder
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets the <xref href=\"System.Text.Encodings.Web.HtmlEncoder\" data-throw-if-not-resolved=\"false\"></xref> which encodes the content to be cached.\n"
  example: []
  syntax:
    content: protected HtmlEncoder HtmlEncoder { get; }
    content.vb: Protected ReadOnly Property HtmlEncoder As HtmlEncoder
    parameters: []
    return:
      type: System.Text.Encodings.Web.HtmlEncoder
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  id: ViewContext
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: ViewContext
  nameWithType: CacheTagHelperBase.ViewContext
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewContext
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext\" data-throw-if-not-resolved=\"false\"></xref> for the current executing View.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeNotBound]

      public ViewContext ViewContext { get; set; }
    content.vb: >-
      <HtmlAttributeNotBound>

      Public Property ViewContext As ViewContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNotBoundAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNotBoundAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy
  id: VaryBy
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryBy
  nameWithType: CacheTagHelperBase.VaryBy
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryBy
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to vary the cached result by.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by")]

      public string VaryBy { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by")>

      Public Property VaryBy As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader
  id: VaryByHeader
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryByHeader
  nameWithType: CacheTagHelperBase.VaryByHeader
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByHeader
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by-header")]

      public string VaryByHeader { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by-header")>

      Public Property VaryByHeader As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by-header
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery
  id: VaryByQuery
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryByQuery
  nameWithType: CacheTagHelperBase.VaryByQuery
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByQuery
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a comma-delimited set of query parameters to vary the cached result by.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by-query")]

      public string VaryByQuery { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by-query")>

      Public Property VaryByQuery As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by-query
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute
  id: VaryByRoute
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryByRoute
  nameWithType: CacheTagHelperBase.VaryByRoute
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByRoute
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a comma-delimited set of route data parameters to vary the cached result by.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by-route")]

      public string VaryByRoute { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by-route")>

      Public Property VaryByRoute As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by-route
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie
  id: VaryByCookie
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryByCookie
  nameWithType: CacheTagHelperBase.VaryByCookie
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByCookie
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a comma-delimited set of cookie names to vary the cached result by.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by-cookie")]

      public string VaryByCookie { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by-cookie")>

      Public Property VaryByCookie As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by-cookie
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser
  id: VaryByUser
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: VaryByUser
  nameWithType: CacheTagHelperBase.VaryByUser
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByUser
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext.User\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("vary-by-user")]

      public bool VaryByUser { get; set; }
    content.vb: >-
      <HtmlAttributeName("vary-by-user")>

      Public Property VaryByUser As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vary-by-user
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn
  id: ExpiresOn
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: ExpiresOn
  nameWithType: CacheTagHelperBase.ExpiresOn
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExpiresOn
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets the exact <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> the cache entry should be evicted.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("expires-on")]

      public DateTimeOffset? ExpiresOn { get; set; }
    content.vb: >-
      <HtmlAttributeName("expires-on")>

      Public Property ExpiresOn As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expires-on
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter
  id: ExpiresAfter
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: ExpiresAfter
  nameWithType: CacheTagHelperBase.ExpiresAfter
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExpiresAfter
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets the duration, from the time the cache entry was added, when it should be evicted.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("expires-after")]

      public TimeSpan? ExpiresAfter { get; set; }
    content.vb: >-
      <HtmlAttributeName("expires-after")>

      Public Property ExpiresAfter As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expires-after
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding
  id: ExpiresSliding
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: ExpiresSliding
  nameWithType: CacheTagHelperBase.ExpiresSliding
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExpiresSliding
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets the duration from last access that the cache entry should be evicted.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("expires-sliding")]

      public TimeSpan? ExpiresSliding { get; set; }
    content.vb: >-
      <HtmlAttributeName("expires-sliding")>

      Public Property ExpiresSliding As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expires-sliding
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled
  id: Enabled
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: CacheTagHelperBase.Enabled
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Enabled
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/CacheTagHelperBase.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers
  summary: "\nGets or sets the value which determines if the tag helper is enabled or not.\n"
  example: []
  syntax:
    content: >-
      [HtmlAttributeName("enabled")]

      public bool Enabled { get; set; }
    content.vb: >-
      <HtmlAttributeName("enabled")>

      Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute
    ctor: Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: true
  name: TagHelper
  nameWithType: TagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
- uid: Microsoft.AspNetCore.Mvc.TagHelpers
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: true
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  isExternal: true
  name: Init(TagHelperContext)
  nameWithType: TagHelper.Init(TagHelperContext)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
    name: Init
    nameWithType: TagHelper.Init
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
    name: Init
    nameWithType: TagHelper.Init
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  isExternal: true
  name: Process(TagHelperContext, TagHelperOutput)
  nameWithType: TagHelper.Process(TagHelperContext, TagHelperOutput)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: Process
    nameWithType: TagHelper.Process
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: Process
    nameWithType: TagHelper.Process
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Process
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  isExternal: true
  name: ProcessAsync(TagHelperContext, TagHelperOutput)
  nameWithType: TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: ProcessAsync
    nameWithType: TagHelper.ProcessAsync
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)
    name: ProcessAsync
    nameWithType: TagHelper.ProcessAsync
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    name: TagHelperContext
    nameWithType: TagHelperContext
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    name: TagHelperOutput
    nameWithType: TagHelperOutput
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: CacheTagHelperBase
  nameWithType: CacheTagHelperBase
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  isExternal: false
  name: HtmlEncoder
  nameWithType: CacheTagHelperBase.HtmlEncoder
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Order
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Order
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper
  isExternal: true
  name: Order
  nameWithType: TagHelper.Order
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase
  isExternal: false
  name: ViewContext
  nameWithType: CacheTagHelperBase.ViewContext
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext
- uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: ViewContext
  nameWithType: ViewContext
  fullName: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http.HttpContext.User
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.User
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
