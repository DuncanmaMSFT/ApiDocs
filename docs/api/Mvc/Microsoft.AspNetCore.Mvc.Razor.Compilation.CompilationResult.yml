### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  id: CompilationResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure})
  - Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Type)
  - Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationFailures
  - Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompiledType
  - Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.EnsureSuccessful
  langs:
  - csharp
  - vb
  name: CompilationResult
  nameWithType: CompilationResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompilationResult
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nRepresents the result of compilation.\n"
  example: []
  syntax:
    content: public struct CompilationResult
    content.vb: Public Structure CompilationResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  langs:
  - csharp
  - vb
  name: CompilationResult(Type)
  nameWithType: CompilationResult.CompilationResult(Type)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationResult(System.Type)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult\" data-throw-if-not-resolved=\"false\"></xref> for a successful compilation.\n"
  example: []
  syntax:
    content: public CompilationResult(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: The compiled type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure})
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure})'
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  langs:
  - csharp
  - vb
  name: CompilationResult(IEnumerable<CompilationFailure>)
  nameWithType: CompilationResult.CompilationResult(IEnumerable<CompilationFailure>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationResult(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.CompilationFailure>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult\" data-throw-if-not-resolved=\"false\"></xref> for a failed compilation.\n"
  example: []
  syntax:
    content: public CompilationResult(IEnumerable<CompilationFailure> compilationFailures)
    content.vb: Public Sub New(compilationFailures As IEnumerable(Of CompilationFailure))
    parameters:
    - id: compilationFailures
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
      description: >-
        <xref href="Microsoft.AspNetCore.Diagnostics.CompilationFailure" data-throw-if-not-resolved="false"></xref>s produced from parsing or
            compiling the Razor file.
  nameWithType.vb: CompilationResult.CompilationResult(IEnumerable(Of CompilationFailure))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationResult(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.CompilationFailure))
  name.vb: CompilationResult(IEnumerable(Of CompilationFailure))
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompiledType
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompiledType
  id: CompiledType
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  langs:
  - csharp
  - vb
  name: CompiledType
  nameWithType: CompilationResult.CompiledType
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompiledType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompiledType
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nGets the type produced as a result of compilation.\n"
  remarks: This property is <code>null</code> when compilation failed.
  example: []
  syntax:
    content: public Type CompiledType { get; }
    content.vb: Public ReadOnly Property CompiledType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationFailures
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationFailures
  id: CompilationFailures
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  langs:
  - csharp
  - vb
  name: CompilationFailures
  nameWithType: CompilationResult.CompilationFailures
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.CompilationFailures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompilationFailures
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Diagnostics.CompilationFailure\" data-throw-if-not-resolved=\"false\"></xref>s produced from parsing or compiling the Razor file.\n"
  remarks: >-
    This property is <code>null</code> when compilation succeeded. An empty sequence

    indicates a failed compilation.
  example: []
  syntax:
    content: public IEnumerable<CompilationFailure> CompilationFailures { get; }
    content.vb: Public ReadOnly Property CompilationFailures As IEnumerable(Of CompilationFailure)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.EnsureSuccessful
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.EnsureSuccessful
  id: EnsureSuccessful
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  langs:
  - csharp
  - vb
  name: EnsureSuccessful()
  nameWithType: CompilationResult.EnsureSuccessful()
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult.EnsureSuccessful()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: EnsureSuccessful
    path: src/Microsoft.AspNetCore.Mvc.Razor/Compilation/CompilationResult.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Compilation
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void EnsureSuccessful()
    content.vb: Public Sub EnsureSuccessful
  exceptions:
  - type: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException
    commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException
    description: Thrown if compilation failed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Compilation
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Compilation
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: CompilationResult
  nameWithType: CompilationResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
  commentId: T:Microsoft.AspNetCore.Diagnostics.CompilationFailure
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.CompilationFailure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CompilationFailure>
  nameWithType: IEnumerable<CompilationFailure>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.CompilationFailure>
  nameWithType.vb: IEnumerable(Of CompilationFailure)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.CompilationFailure)
  name.vb: IEnumerable(Of CompilationFailure)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    name: CompilationFailure
    nameWithType: CompilationFailure
    fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    name: CompilationFailure
    nameWithType: CompilationFailure
    fullName: Microsoft.AspNetCore.Diagnostics.CompilationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException
  isExternal: false
  name: CompilationFailedException
  nameWithType: CompilationFailedException
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException
