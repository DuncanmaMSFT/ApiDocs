### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree
  id: IActionSelectionDecisionTree
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Version
  langs:
  - csharp
  - vb
  name: IActionSelectionDecisionTree
  nameWithType: IActionSelectionDecisionTree
  fullName: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IActionSelectionDecisionTree
    path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nA data structure that retrieves a list of <xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> matches based on the values\nsupplied for the current request by <xref href=\"Microsoft.AspNetCore.Routing.RouteData.Values\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IActionSelectionDecisionTree
    content.vb: Public Interface IActionSelectionDecisionTree
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Version
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Version
  id: Version
  parent: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IActionSelectionDecisionTree.Version
  fullName: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Version
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Version
    path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the version. The same as the value of\n<xref href=\"Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: int Version { get; }
    content.vb: ReadOnly Property Version As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: Select(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree
  langs:
  - csharp
  - vb
  name: Select(IDictionary<String, Object>)
  nameWithType: IActionSelectionDecisionTree.Select(IDictionary<String, Object>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Select
    path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionSelectionDecisionTree.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nRetrieves a set of <xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> based on the route values supplied by\n<em>routeValues</em>/\n"
  example: []
  syntax:
    content: IReadOnlyList<ActionDescriptor> Select(IDictionary<string, object> routeValues)
    content.vb: Function Select(routeValues As IDictionary(Of String, Object)) As IReadOnlyList(Of ActionDescriptor)
    parameters:
    - id: routeValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The route values for the current request.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
      description: A set of <xref href="Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" data-throw-if-not-resolved="false"></xref> matching the route values.
  nameWithType.vb: IActionSelectionDecisionTree.Select(IDictionary(Of String, Object))
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Select(IDictionary(Of String, Object))
references:
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: Microsoft.AspNetCore.Routing.RouteData.Values
  commentId: P:Microsoft.AspNetCore.Routing.RouteData.Values
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
  commentId: P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ActionDescriptor>
  nameWithType: IReadOnlyList<ActionDescriptor>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>
  nameWithType.vb: IReadOnlyList(Of ActionDescriptor)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  name.vb: IReadOnlyList(Of ActionDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
