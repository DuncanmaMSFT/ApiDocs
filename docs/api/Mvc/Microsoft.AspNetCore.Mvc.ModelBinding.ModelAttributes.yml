### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  id: ModelAttributes
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.Attributes
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.PropertyAttributes
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
  langs:
  - csharp
  - vb
  name: ModelAttributes
  nameWithType: ModelAttributes
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelAttributes
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nProvides access to the  combined list of attributes associated a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> or property.\n"
  example: []
  syntax:
    content: public class ModelAttributes
    content.vb: Public Class ModelAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Object})'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: ModelAttributes(IEnumerable<Object>)
  nameWithType: ModelAttributes.ModelAttributes(IEnumerable<Object>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ModelAttributes(System.Collections.Generic.IEnumerable<System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes\" data-throw-if-not-resolved=\"false\"></xref> for a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelAttributes(IEnumerable<object> typeAttributes)
    content.vb: Public Sub New(typeAttributes As IEnumerable(Of Object))
    parameters:
    - id: typeAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The set of attributes for the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ModelAttributes.ModelAttributes(IEnumerable(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ModelAttributes(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: ModelAttributes(IEnumerable(Of Object))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: ModelAttributes(IEnumerable<Object>, IEnumerable<Object>)
  nameWithType: ModelAttributes.ModelAttributes(IEnumerable<Object>, IEnumerable<Object>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ModelAttributes(System.Collections.Generic.IEnumerable<System.Object>, System.Collections.Generic.IEnumerable<System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes\" data-throw-if-not-resolved=\"false\"></xref> for a property.\n"
  example: []
  syntax:
    content: public ModelAttributes(IEnumerable<object> propertyAttributes, IEnumerable<object> typeAttributes)
    content.vb: Public Sub New(propertyAttributes As IEnumerable(Of Object), typeAttributes As IEnumerable(Of Object))
    parameters:
    - id: propertyAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The set of attributes for the property.
    - id: typeAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "\nThe set of attributes for the property's <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>. See <xref href=\"System.Reflection.PropertyInfo.PropertyType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  nameWithType.vb: ModelAttributes.ModelAttributes(IEnumerable(Of Object), IEnumerable(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ModelAttributes(System.Collections.Generic.IEnumerable(Of System.Object), System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: ModelAttributes(IEnumerable(Of Object), IEnumerable(Of Object))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.Attributes
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.Attributes
  id: Attributes
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ModelAttributes.Attributes
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.Attributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Attributes
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the set of all attributes. If this instance represents the attributes for a property, the attributes\non the property definition are before those on the property's <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<object> Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As IReadOnlyList(Of Object)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.PropertyAttributes
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.PropertyAttributes
  id: PropertyAttributes
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: PropertyAttributes
  nameWithType: ModelAttributes.PropertyAttributes
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.PropertyAttributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyAttributes
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the set of attributes on the property, or <code>null</code> if this instance represents the attributes\nfor a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<object> PropertyAttributes { get; }
    content.vb: Public ReadOnly Property PropertyAttributes As IReadOnlyList(Of Object)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
  id: TypeAttributes
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: TypeAttributes
  nameWithType: ModelAttributes.TypeAttributes
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TypeAttributes
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the set of attributes on the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>. If this instance represents a property,\nthen <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes\" data-throw-if-not-resolved=\"false\"></xref> contains attributes retrieved from\n<xref href=\"System.Reflection.PropertyInfo.PropertyType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<object> TypeAttributes { get; }
    content.vb: Public ReadOnly Property TypeAttributes As IReadOnlyList(Of Object)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)
  id: GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: GetAttributesForProperty(Type, PropertyInfo)
  nameWithType: ModelAttributes.GetAttributesForProperty(Type, PropertyInfo)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type, System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetAttributesForProperty
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the attributes for the given <em>property</em>.\n"
  example: []
  syntax:
    content: public static ModelAttributes GetAttributesForProperty(Type type, PropertyInfo property)
    content.vb: Public Shared Function GetAttributesForProperty(type As Type, property As PropertyInfo) As ModelAttributes
    parameters:
    - id: type
      type: System.Type
      description: >
        The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in which caller found <em>property</em>.
    - id: property
      type: System.Reflection.PropertyInfo
      description: >
        A <xref href="System.Reflection.PropertyInfo" data-throw-if-not-resolved="false"></xref> for which attributes need to be resolved.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes" data-throw-if-not-resolved="false"></xref> instance with the attributes of the property.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)
  id: GetAttributesForType(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  langs:
  - csharp
  - vb
  name: GetAttributesForType(Type)
  nameWithType: ModelAttributes.GetAttributesForType(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetAttributesForType
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Metadata/ModelAttributes.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the attributes for the given <em>type</em>.\n"
  example: []
  syntax:
    content: public static ModelAttributes GetAttributesForType(Type type)
    content.vb: Public Shared Function GetAttributesForType(type As Type) As ModelAttributes
    parameters:
    - id: type
      type: System.Type
      description: >
        The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for which attributes need to be resolved.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes" data-throw-if-not-resolved="false"></xref> instance with the attributes of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelAttributes
  nameWithType: ModelAttributes
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Reflection.PropertyInfo.PropertyType
  commentId: P:System.Reflection.PropertyInfo.PropertyType
- uid: System.Collections.Generic.IReadOnlyList{System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Object>
  nameWithType: IReadOnlyList<Object>
  fullName: System.Collections.Generic.IReadOnlyList<System.Object>
  nameWithType.vb: IReadOnlyList(Of Object)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.Object)
  name.vb: IReadOnlyList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
