### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.CacheProfile
  commentId: T:Microsoft.AspNetCore.Mvc.CacheProfile
  id: CacheProfile
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.CacheProfile.Duration
  - Microsoft.AspNetCore.Mvc.CacheProfile.Location
  - Microsoft.AspNetCore.Mvc.CacheProfile.NoStore
  - Microsoft.AspNetCore.Mvc.CacheProfile.VaryByHeader
  langs:
  - csharp
  - vb
  name: CacheProfile
  nameWithType: CacheProfile
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CacheProfile
    path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nDefines a set of settings which can be used for response caching.\n"
  example: []
  syntax:
    content: public class CacheProfile
    content.vb: Public Class CacheProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.CacheProfile.Duration
  commentId: P:Microsoft.AspNetCore.Mvc.CacheProfile.Duration
  id: Duration
  parent: Microsoft.AspNetCore.Mvc.CacheProfile
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: CacheProfile.Duration
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile.Duration
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Duration
    path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the duration in seconds for which the response is cached.\nIf this property is set to a non null value,\nthe \"max-age\" in \"Cache-control\" header is set in the \n<xref href=\"Microsoft.AspNetCore.Http.HttpContext.Response\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int ? Duration { get; set; }
    content.vb: Public Property Duration As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.CacheProfile.Location
  commentId: P:Microsoft.AspNetCore.Mvc.CacheProfile.Location
  id: Location
  parent: Microsoft.AspNetCore.Mvc.CacheProfile
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: CacheProfile.Location
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Location
    path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the location where the data from a particular URL must be cached.\nIf this property is set to a non null value,\nthe \"Cache-control\" header is set in the <xref href=\"Microsoft.AspNetCore.Http.HttpContext.Response\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResponseCacheLocation? Location { get; set; }
    content.vb: Public Property Location As ResponseCacheLocation?
    parameters: []
    return:
      type: System.Nullable{Microsoft.AspNetCore.Mvc.ResponseCacheLocation}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.CacheProfile.NoStore
  commentId: P:Microsoft.AspNetCore.Mvc.CacheProfile.NoStore
  id: NoStore
  parent: Microsoft.AspNetCore.Mvc.CacheProfile
  langs:
  - csharp
  - vb
  name: NoStore
  nameWithType: CacheProfile.NoStore
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile.NoStore
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NoStore
    path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the value which determines whether the data should be stored or not.\nWhen set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, it sets \"Cache-control\" header in\n<xref href=\"Microsoft.AspNetCore.Http.HttpContext.Response\" data-throw-if-not-resolved=\"false\"></xref> to \"no-store\".\nIgnores the \"Location\" parameter for values other than \"None\".\nIgnores the \"Duration\" parameter.\n"
  example: []
  syntax:
    content: public bool ? NoStore { get; set; }
    content.vb: Public Property NoStore As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.CacheProfile.VaryByHeader
  commentId: P:Microsoft.AspNetCore.Mvc.CacheProfile.VaryByHeader
  id: VaryByHeader
  parent: Microsoft.AspNetCore.Mvc.CacheProfile
  langs:
  - csharp
  - vb
  name: VaryByHeader
  nameWithType: CacheProfile.VaryByHeader
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile.VaryByHeader
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByHeader
    path: src/Microsoft.AspNetCore.Mvc.Core/CacheProfile.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the value for the Vary header in <xref href=\"Microsoft.AspNetCore.Http.HttpContext.Response\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string VaryByHeader { get; set; }
    content.vb: Public Property VaryByHeader As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HttpContext.Response
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Response
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.AspNetCore.Mvc.ResponseCacheLocation}
  commentId: T:System.Nullable{Microsoft.AspNetCore.Mvc.ResponseCacheLocation}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ResponseCacheLocation>
  nameWithType: Nullable<ResponseCacheLocation>
  fullName: System.Nullable<Microsoft.AspNetCore.Mvc.ResponseCacheLocation>
  nameWithType.vb: Nullable(Of ResponseCacheLocation)
  fullname.vb: System.Nullable(Of Microsoft.AspNetCore.Mvc.ResponseCacheLocation)
  name.vb: Nullable(Of ResponseCacheLocation)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
