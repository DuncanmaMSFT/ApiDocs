### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  id: IAsyncResultFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)
  langs:
  - csharp
  - vb
  name: IAsyncResultFilter
  nameWithType: IAsyncResultFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IAsyncResultFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IAsyncResultFilter
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IAsyncResultFilter.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA filter that asynchronously surrounds execution of the action result.\n"
  example: []
  syntax:
    content: 'public interface IAsyncResultFilter : IFilterMetadata'
    content.vb: >-
      Public Interface IAsyncResultFilter
          Inherits IFilterMetadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)
  id: OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)
  parent: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  langs:
  - csharp
  - vb
  name: OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate)
  nameWithType: IAsyncResultFilter.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IAsyncResultFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnResultExecutionAsync
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/IAsyncResultFilter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCalled asynchronously before the action result.\n"
  example: []
  syntax:
    content: Task OnResultExecutionAsync(ResultExecutingContext context, ResultExecutionDelegate next)
    content.vb: Function OnResultExecutionAsync(context As ResultExecutingContext, next As ResultExecutionDelegate) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" data-throw-if-not-resolved="false"></xref>.
    - id: next
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate\" data-throw-if-not-resolved=\"false\"></xref>. Invoked to execute the next result filter or the result itself.\n"
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion indicates the filter has executed.
references:
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResultExecutingContext
  nameWithType: ResultExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResultExecutionDelegate
  nameWithType: ResultExecutionDelegate
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
