### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterScope
  id: FilterScope
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.FilterScope.Action
  - Microsoft.AspNetCore.Mvc.Filters.FilterScope.Controller
  - Microsoft.AspNetCore.Mvc.Filters.FilterScope.First
  - Microsoft.AspNetCore.Mvc.Filters.FilterScope.Global
  - Microsoft.AspNetCore.Mvc.Filters.FilterScope.Last
  langs:
  - csharp
  - vb
  name: FilterScope
  nameWithType: FilterScope
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FilterScope
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\n<p>\nContains constant values for known filter scopes.\n</p>\n<p>\nScope defines the ordering of filters that have the same order. Scope is by-default\ndefined by how a filter is registered.\n</p>\n"
  example: []
  syntax:
    content: public static class FilterScope
    content.vb: Public Module FilterScope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope.First
  commentId: F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.First
  id: First
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  langs:
  - csharp
  - vb
  name: First
  nameWithType: FilterScope.First
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope.First
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: First
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  syntax:
    content: public static readonly int First
    content.vb: Public Shared ReadOnly First As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Global
  commentId: F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Global
  id: Global
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  langs:
  - csharp
  - vb
  name: Global
  nameWithType: FilterScope.Global
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Global
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Global
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  syntax:
    content: public static readonly int Global
    content.vb: Public Shared ReadOnly Global As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Controller
  commentId: F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Controller
  id: Controller
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: FilterScope.Controller
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Controller
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Controller
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  syntax:
    content: public static readonly int Controller
    content.vb: Public Shared ReadOnly Controller As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Action
  commentId: F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Action
  id: Action
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: FilterScope.Action
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Action
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Action
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  syntax:
    content: public static readonly int Action
    content.vb: Public Shared ReadOnly Action As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Last
  commentId: F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Last
  id: Last
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterScope
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: FilterScope.Last
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterScope.Last
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Last
    path: src/Microsoft.AspNetCore.Mvc.Core/Filters/FilterScope.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Filters
  syntax:
    content: public static readonly int Last
    content.vb: Public Shared ReadOnly Last As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
