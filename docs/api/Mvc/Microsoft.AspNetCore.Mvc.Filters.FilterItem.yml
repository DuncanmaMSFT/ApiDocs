### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterItem
  id: FilterItem
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)
  - Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  - Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
  - Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  - Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
  langs:
  - csharp
  - vb
  name: FilterItem
  nameWithType: FilterItem
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FilterItem
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nUsed to associate executable filters with <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata\" data-throw-if-not-resolved=\"false\"></xref> instances\nas part of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext\" data-throw-if-not-resolved=\"false\"></xref>. An <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterProvider\" data-throw-if-not-resolved=\"false\"></xref> should\ninspect <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results\" data-throw-if-not-resolved=\"false\"></xref> and set <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable\" data-throw-if-not-resolved=\"false\"></xref> as appropriate.\n"
  example: []
  syntax:
    content: public class FilterItem
    content.vb: Public Class FilterItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)'
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  langs:
  - csharp
  - vb
  name: FilterItem(FilterDescriptor)
  nameWithType: FilterItem.FilterItem(FilterDescriptor)
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem.FilterItem(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public FilterItem(FilterDescriptor descriptor)
    content.vb: Public Sub New(descriptor As FilterDescriptor)
    parameters:
    - id: descriptor
      type: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
      description: The <xref href="Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.FilterItem.#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)'
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  langs:
  - csharp
  - vb
  name: FilterItem(FilterDescriptor, IFilterMetadata)
  nameWithType: FilterItem.FilterItem(FilterDescriptor, IFilterMetadata)
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem.FilterItem(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor, Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public FilterItem(FilterDescriptor descriptor, IFilterMetadata filter)
    content.vb: Public Sub New(descriptor As FilterDescriptor, filter As IFilterMetadata)
    parameters:
    - id: descriptor
      type: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
      description: The <xref href="Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor" data-throw-if-not-resolved="false"></xref>.
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
  id: Descriptor
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: FilterItem.Descriptor
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Descriptor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor\" data-throw-if-not-resolved=\"false\"></xref> containing the filter metadata.\n"
  example: []
  syntax:
    content: public FilterDescriptor Descriptor { get; }
    content.vb: Public ReadOnly Property Descriptor As FilterDescriptor
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  id: Filter
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: FilterItem.Filter
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filter
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets the executable <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata\" data-throw-if-not-resolved=\"false\"></xref> associated with <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IFilterMetadata Filter { get; set; }
    content.vb: Public Property Filter As IFilterMetadata
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
  id: IsReusable
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  langs:
  - csharp
  - vb
  name: IsReusable
  nameWithType: FilterItem.IsReusable
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsReusable
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterItem.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets a value indicating whether or not <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter\" data-throw-if-not-resolved=\"false\"></xref> can be reused across requests.\n"
  example: []
  syntax:
    content: public bool IsReusable { get; set; }
    content.vb: Public Property IsReusable As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterProviderContext
  nameWithType: FilterProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterProvider
  nameWithType: IFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterItem
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterItem
  nameWithType: FilterItem
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterDescriptor
  nameWithType: FilterDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
