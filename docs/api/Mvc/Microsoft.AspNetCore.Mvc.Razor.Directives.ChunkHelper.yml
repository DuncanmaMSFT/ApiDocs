### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  id: ChunkHelper
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  - Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken
  langs:
  - csharp
  - vb
  name: ChunkHelper
  nameWithType: ChunkHelper
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ChunkHelper
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nContains helper methods for dealing with Chunks\n"
  example: []
  syntax:
    content: public static class ChunkHelper
    content.vb: Public Module ChunkHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken
  commentId: F:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken
  id: TModelToken
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  langs:
  - csharp
  - vb
  name: TModelToken
  nameWithType: ChunkHelper.TModelToken
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TModelToken
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nToken that is replaced by the model name in <code>@inherits</code> and <code>@inject</code>\nchunks as part of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly string TModelToken
    content.vb: Public Shared ReadOnly TModelToken As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  id: GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  langs:
  - csharp
  - vb
  name: GetModelChunk(ChunkTree)
  nameWithType: ChunkHelper.GetModelChunk(ChunkTree)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetModelChunk
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nReturns the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.ModelChunk\" data-throw-if-not-resolved=\"false\"></xref> used to determine the model name for the page generated\nusing the specified <em>chunkTree</em>\n"
  example: []
  syntax:
    content: public static ModelChunk GetModelChunk(ChunkTree chunkTree)
    content.vb: Public Shared Function GetModelChunk(chunkTree As ChunkTree) As ModelChunk
    parameters:
    - id: chunkTree
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
      description: The <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref> to scan for <xref href="Microsoft.AspNetCore.Mvc.Razor.ModelChunk" data-throw-if-not-resolved="false"></xref>s in.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.ModelChunk
      description: >
        The last <xref href="Microsoft.AspNetCore.Mvc.Razor.ModelChunk" data-throw-if-not-resolved="false"></xref> in the <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref> if found, <code>null</code> otherwise.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.String)
  id: GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  langs:
  - csharp
  - vb
  name: GetModelTypeName(ChunkTree, String)
  nameWithType: ChunkHelper.GetModelTypeName(ChunkTree, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetModelTypeName
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nReturns the type name of the Model specified via a <xref href=\"Microsoft.AspNetCore.Mvc.Razor.ModelChunk\" data-throw-if-not-resolved=\"false\"></xref> in the\n<em>chunkTree</em> if specified or the default model type.\n"
  example: []
  syntax:
    content: public static string GetModelTypeName(ChunkTree chunkTree, string defaultModelName)
    content.vb: Public Shared Function GetModelTypeName(chunkTree As ChunkTree, defaultModelName As String) As String
    parameters:
    - id: chunkTree
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
      description: The <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref> to scan for <xref href="Microsoft.AspNetCore.Mvc.Razor.ModelChunk" data-throw-if-not-resolved="false"></xref>s in.
    - id: defaultModelName
      type: System.String
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> name of the default model.
    return:
      type: System.String
      description: The model type name for the generated page.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel(System.String,System.String)
  id: ReplaceTModel(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper
  langs:
  - csharp
  - vb
  name: ReplaceTModel(String, String)
  nameWithType: ChunkHelper.ReplaceTModel(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReplaceTModel
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/ChunkHelper.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nReturns a string with the &lt;TModel&gt; token replaced with the value specified in\n<em>modelName</em>.\n"
  example: []
  syntax:
    content: public static string ReplaceTModel(string value, string modelName)
    content.vb: Public Shared Function ReplaceTModel(value As String, modelName As String) As String
    parameters:
    - id: value
      type: System.String
      description: The string to replace the token in.
    - id: modelName
      type: System.String
      description: The model name to replace with.
    return:
      type: System.String
      description: A string with the token replaced.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Directives
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Directives
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility
  isExternal: false
  name: ChunkInheritanceUtility
  nameWithType: ChunkInheritanceUtility
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.ModelChunk
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: ModelChunk
  nameWithType: ModelChunk
  fullName: Microsoft.AspNetCore.Mvc.Razor.ModelChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: true
  name: ChunkTree
  nameWithType: ChunkTree
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
