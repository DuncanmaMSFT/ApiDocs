### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  id: AttributeRouteModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Attribute
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsAbsoluteTemplate
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Name
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Order
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Template
  langs:
  - csharp
  - vb
  name: AttributeRouteModel
  nameWithType: AttributeRouteModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AttributeRouteModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public class AttributeRouteModel
    content.vb: Public Class AttributeRouteModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: AttributeRouteModel()
  nameWithType: AttributeRouteModel.AttributeRouteModel()
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.AttributeRouteModel()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public AttributeRouteModel()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: AttributeRouteModel(IRouteTemplateProvider)
  nameWithType: AttributeRouteModel.AttributeRouteModel(IRouteTemplateProvider)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.AttributeRouteModel(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public AttributeRouteModel(IRouteTemplateProvider templateProvider)
    content.vb: Public Sub New(templateProvider As IRouteTemplateProvider)
    parameters:
    - id: templateProvider
      type: Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: AttributeRouteModel(AttributeRouteModel)
  nameWithType: AttributeRouteModel.AttributeRouteModel(AttributeRouteModel)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.AttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public AttributeRouteModel(AttributeRouteModel other)
    content.vb: Public Sub New(other As AttributeRouteModel)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Attribute
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Attribute
  id: Attribute
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: Attribute
  nameWithType: AttributeRouteModel.Attribute
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Attribute
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Attribute
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public IRouteTemplateProvider Attribute { get; }
    content.vb: Public ReadOnly Property Attribute As IRouteTemplateProvider
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Template
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Template
  id: Template
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: AttributeRouteModel.Template
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Template
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Template
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public string Template { get; set; }
    content.vb: Public Property Template As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Order
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Order
  id: Order
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: AttributeRouteModel.Order
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Order
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public int ? Order { get; set; }
    content.vb: Public Property Order As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Name
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Name
  id: Name
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AttributeRouteModel.Name
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Name
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsAbsoluteTemplate
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsAbsoluteTemplate
  id: IsAbsoluteTemplate
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: IsAbsoluteTemplate
  nameWithType: AttributeRouteModel.IsAbsoluteTemplate
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsAbsoluteTemplate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsAbsoluteTemplate
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public bool IsAbsoluteTemplate { get; }
    content.vb: Public ReadOnly Property IsAbsoluteTemplate As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  id: CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: CombineAttributeRouteModel(AttributeRouteModel, AttributeRouteModel)
  nameWithType: AttributeRouteModel.CombineAttributeRouteModel(AttributeRouteModel, AttributeRouteModel)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel, Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CombineAttributeRouteModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nCombines two <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel\" data-throw-if-not-resolved=\"false\"></xref> instances and returns\na new <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel\" data-throw-if-not-resolved=\"false\"></xref> instance with the result.\n"
  example: []
  syntax:
    content: public static AttributeRouteModel CombineAttributeRouteModel(AttributeRouteModel left, AttributeRouteModel right)
    content.vb: Public Shared Function CombineAttributeRouteModel(left As AttributeRouteModel, right As AttributeRouteModel) As AttributeRouteModel
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
      description: The left <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
      description: The right <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
      description: >-
        A new instance of <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel" data-throw-if-not-resolved="false"></xref> that represents the

        combination of the two <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel" data-throw-if-not-resolved="false"></xref> instances or <code>null</code> if both

        parameters are <code>null</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  langs:
  - csharp
  - vb
  name: ReplaceTokens(String, IDictionary<String, String>)
  nameWithType: AttributeRouteModel.ReplaceTokens(String, IDictionary<String, String>)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReplaceTokens
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/AttributeRouteModel.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public static string ReplaceTokens(string template, IDictionary<string, string> values)
    content.vb: Public Shared Function ReplaceTokens(template As String, values As IDictionary(Of String, String)) As String
    parameters:
    - id: template
      type: System.String
    - id: values
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    return:
      type: System.String
  nameWithType.vb: AttributeRouteModel.ReplaceTokens(String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: ReplaceTokens(String, IDictionary(Of String, String))
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider
  parent: Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: IRouteTemplateProvider
  nameWithType: IRouteTemplateProvider
  fullName: Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider
- uid: Microsoft.AspNetCore.Mvc.Routing
  commentId: N:Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Routing
  nameWithType: Microsoft.AspNetCore.Mvc.Routing
  fullName: Microsoft.AspNetCore.Mvc.Routing
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: AttributeRouteModel
  nameWithType: AttributeRouteModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
