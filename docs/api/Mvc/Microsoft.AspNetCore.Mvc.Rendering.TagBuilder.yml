### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  id: TagBuilder
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode
  - Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  langs:
  - csharp
  - vb
  name: TagBuilder
  nameWithType: TagBuilder
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TagBuilder
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nContains methods and properties that are used to create HTML elements. This class is often used to write HTML\nhelpers and tag helpers.\n"
  example: []
  syntax:
    content: 'public class TagBuilder : IHtmlContent'
    content.vb: >-
      Public Class TagBuilder
          Implements IHtmlContent
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Html.IHtmlContent
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: TagBuilder(String)
  nameWithType: TagBuilder.TagBuilder(String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagBuilder(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nCreates a new HTML tag that has the specified tag name.\n"
  example: []
  syntax:
    content: public TagBuilder(string tagName)
    content.vb: Public Sub New(tagName As String)
    parameters:
    - id: tagName
      type: System.String
      description: An HTML tag name.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes
  id: Attributes
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TagBuilder.Attributes
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Attributes
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets the set of attributes that will be written to the tag.\n"
  example: []
  syntax:
    content: public AttributeDictionary Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As AttributeDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml
  id: InnerHtml
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: InnerHtml
  nameWithType: TagBuilder.InnerHtml
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InnerHtml
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets the inner HTML content of the element.\n"
  example: []
  syntax:
    content: public IHtmlContentBuilder InnerHtml { get; }
    content.vb: Public ReadOnly Property InnerHtml As IHtmlContentBuilder
    parameters: []
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContentBuilder
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName
  id: TagName
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: TagName
  nameWithType: TagBuilder.TagName
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TagName
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGets the tag name for this tag.\n"
  example: []
  syntax:
    content: public string TagName { get; }
    content.vb: Public ReadOnly Property TagName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode
  commentId: P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode
  id: TagRenderMode
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: TagRenderMode
  nameWithType: TagBuilder.TagRenderMode
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TagRenderMode
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode\" data-throw-if-not-resolved=\"false\"></xref> with which the tag is written.\n"
  remarks: Defaults to <xref href="Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TagRenderMode TagRenderMode { get; set; }
    content.vb: Public Property TagRenderMode As TagRenderMode
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)
  id: AddCssClass(System.String)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: AddCssClass(String)
  nameWithType: TagBuilder.AddCssClass(String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddCssClass
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nAdds a CSS class to the list of CSS classes in the tag.\nIf there are already CSS classes on the tag then a space character and the new class will be appended to\nthe existing list.\n"
  example: []
  syntax:
    content: public void AddCssClass(string value)
    content.vb: Public Sub AddCssClass(value As String)
    parameters:
    - id: value
      type: System.String
      description: The CSS class name to add.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)
  id: CreateSanitizedId(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: CreateSanitizedId(String, String)
  nameWithType: TagBuilder.CreateSanitizedId(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateSanitizedId
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturn valid HTML 4.01 \"id\" attribute for an element with the given <em>name</em>.\n"
  remarks: Valid "id" attributes are defined in http://www.w3.org/TR/html401/types.html#type-id
  example: []
  syntax:
    content: public static string CreateSanitizedId(string name, string invalidCharReplacement)
    content.vb: Public Shared Function CreateSanitizedId(name As String, invalidCharReplacement As String) As String
    parameters:
    - id: name
      type: System.String
      description: The original element name.
    - id: invalidCharReplacement
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (normally a single <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>) to substitute for invalid characters in\n<em>name</em>.\n"
    return:
      type: System.String
      description: "\nValid HTML 4.01 \"id\" attribute for an element with the given <em>name</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)
  id: GenerateId(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: GenerateId(String, String)
  nameWithType: TagBuilder.GenerateId(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GenerateId
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 173
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nGenerates a sanitized ID attribute for the tag by using the specified name.\n"
  example: []
  syntax:
    content: public void GenerateId(string name, string invalidCharReplacement)
    content.vb: Public Sub GenerateId(name As String, invalidCharReplacement As String)
    parameters:
    - id: name
      type: System.String
      description: The name to use to generate an ID attribute.
    - id: invalidCharReplacement
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (normally a single <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>) to substitute for invalid characters in\n<em>name</em>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String)
  id: MergeAttribute(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: MergeAttribute(String, String)
  nameWithType: TagBuilder.MergeAttribute(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttribute
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  syntax:
    content: public void MergeAttribute(string key, string value)
    content.vb: Public Sub MergeAttribute(key As String, value As String)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)
  id: MergeAttribute(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: MergeAttribute(String, String, Boolean)
  nameWithType: TagBuilder.MergeAttribute(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttribute
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 218
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  syntax:
    content: public void MergeAttribute(string key, string value, bool replaceExisting)
    content.vb: Public Sub MergeAttribute(key As String, value As String, replaceExisting As Boolean)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    - id: replaceExisting
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})
  id: MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue>)
  nameWithType: TagBuilder.MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttributes
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 231
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  syntax:
    content: public void MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue> attributes)
    content.vb: Public Sub MergeAttributes(Of TKey, TValue)(attributes As IDictionary(Of TKey, TValue))
    parameters:
    - id: attributes
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
  nameWithType.vb: TagBuilder.MergeAttributes(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: MergeAttributes(Of TKey, TValue)(IDictionary(Of TKey, TValue))
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)
  id: MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue>, Boolean)
  nameWithType: TagBuilder.MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue>, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MergeAttributes
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 236
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  syntax:
    content: public void MergeAttributes<TKey, TValue>(IDictionary<TKey, TValue> attributes, bool replaceExisting)
    content.vb: Public Sub MergeAttributes(Of TKey, TValue)(attributes As IDictionary(Of TKey, TValue), replaceExisting As Boolean)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    - id: replaceExisting
      type: System.Boolean
    typeParameters:
    - id: TKey
    - id: TValue
  nameWithType.vb: TagBuilder.MergeAttributes(Of TKey, TValue)(IDictionary(Of TKey, TValue), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue), System.Boolean)
  name.vb: MergeAttributes(Of TKey, TValue)(IDictionary(Of TKey, TValue), Boolean)
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  id: WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  parent: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: TagBuilder.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter, System.Text.Encodings.Web.HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteTo
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/TagBuilder.cs
    startLine: 251
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  example: []
  syntax:
    content: public void WriteTo(TextWriter writer, HtmlEncoder encoder)
    content.vb: Public Sub WriteTo(writer As TextWriter, encoder As HtmlEncoder)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: encoder
      type: System.Text.Encodings.Web.HtmlEncoder
  implements:
  - Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: AttributeDictionary
  nameWithType: AttributeDictionary
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures
  commentId: N:Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewFeatures
  nameWithType: Microsoft.AspNetCore.Mvc.ViewFeatures
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures
- uid: Microsoft.AspNetCore.Html.IHtmlContentBuilder
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContentBuilder
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: IHtmlContentBuilder
  nameWithType: IHtmlContentBuilder
  fullName: Microsoft.AspNetCore.Html.IHtmlContentBuilder
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: TagRenderMode
  nameWithType: TagRenderMode
  fullName: Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode
- uid: Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal
  commentId: F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{``0,``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  parent: Microsoft.AspNetCore.Html.IHtmlContent
  isExternal: true
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: IHtmlContent.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter, System.Text.Encodings.Web.HtmlEncoder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
    name: WriteTo
    nameWithType: IHtmlContent.WriteTo
    fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encodings.Web.HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: System.Text.Encodings.Web.HtmlEncoder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
    name: WriteTo
    nameWithType: IHtmlContent.WriteTo
    fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encodings.Web.HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: System.Text.Encodings.Web.HtmlEncoder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
