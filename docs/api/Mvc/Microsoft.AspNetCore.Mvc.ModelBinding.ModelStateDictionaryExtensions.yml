### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  id: ModelStateDictionaryExtensions
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  langs:
  - csharp
  - vb
  name: ModelStateDictionaryExtensions
  nameWithType: ModelStateDictionaryExtensions
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelStateDictionaryExtensions
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nExtensions methods for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ModelStateDictionaryExtensions
    content.vb: Public Module ModelStateDictionaryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  id: AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  langs:
  - csharp
  - vb
  name: AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, String)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddModelError
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAdds the specified <em>errorMessage</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref> instance\nthat is associated with the specified <em>expression</em>.\n"
  example: []
  syntax:
    content: public static void AddModelError<TModel>(this ModelStateDictionary modelState, Expression<Func<TModel, object>> expression, string errorMessage)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddModelError(Of TModel)(modelState As ModelStateDictionary, expression As Expression(Of Func(Of TModel, Object)), errorMessage As String)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression to be evaluated against an item in the current model.
    - id: errorMessage
      type: System.String
      description: The error message to add.
    typeParameters:
    - id: TModel
      description: The type of the model.
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String)
  name.vb: AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), String)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  id: AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  langs:
  - csharp
  - vb
  name: AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddModelError
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAdds the specified <em>exception</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref> instance\nthat is associated with the specified <em>expression</em>.\n"
  example: []
  syntax:
    content: public static void AddModelError<TModel>(this ModelStateDictionary modelState, Expression<Func<TModel, object>> expression, Exception exception, ModelMetadata metadata)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddModelError(Of TModel)(modelState As ModelStateDictionary, expression As Expression(Of Func(Of TModel, Object)), exception As Exception, metadata As ModelMetadata)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression to be evaluated against an item in the current model.
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> to add.
    - id: metadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref> associated with the model.
    typeParameters:
    - id: TModel
      description: The type of the model.
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  name.vb: AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  langs:
  - csharp
  - vb
  name: Remove<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.Remove<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Remove
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRemoves the specified <em>expression</em> from the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static bool Remove<TModel>(this ModelStateDictionary modelState, Expression<Func<TModel, object>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Remove(Of TModel)(modelState As ModelStateDictionary, expression As Expression(Of Func(Of TModel, Object))) As Boolean
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression to be evaluated against an item in the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    return:
      type: System.Boolean
      description: "\ntrue if the element is successfully removed; otherwise, false.\nThis method also returns false if <em>expression</em> was not found in the model-state dictionary.\n"
  nameWithType.vb: ModelStateDictionaryExtensions.Remove(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: Remove(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  langs:
  - csharp
  - vb
  name: RemoveAll<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.RemoveAll<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RemoveAll
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ModelStateDictionaryExtensions.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRemoves all the entries for the specified <em>expression</em> from the\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void RemoveAll<TModel>(this ModelStateDictionary modelState, Expression<Func<TModel, object>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAll(Of TModel)(modelState As ModelStateDictionary, expression As Expression(Of Func(Of TModel, Object)))
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression to be evaluated against an item in the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
  nameWithType.vb: ModelStateDictionaryExtensions.RemoveAll(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: RemoveAll(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, Object>>
  nameWithType: Expression<Func<TModel, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TModel, Object))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))
  name.vb: Expression(Of Func(Of TModel, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
