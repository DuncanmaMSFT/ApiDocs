### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  id: MvcRazorParser
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree},System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk},System.String)
  - Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  langs:
  - csharp
  - vb
  name: MvcRazorParser
  nameWithType: MvcRazorParser
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcRazorParser
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nA subtype of <xref href=\"Microsoft.AspNetCore.Razor.Parser.RazorParser\" data-throw-if-not-resolved=\"false\"></xref> that <xref href=\"Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost\" data-throw-if-not-resolved=\"false\"></xref> uses to support inheritance of tag\nhelpers from <code>_ViewImports</code> files.\n"
  example: []
  syntax:
    content: 'public class MvcRazorParser : RazorParser'
    content.vb: >-
      Public Class MvcRazorParser
          Inherits RazorParser
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Parser.RazorParser
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree},System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree},System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk},System.String)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree},System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk},System.String)'
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  langs:
  - csharp
  - vb
  name: MvcRazorParser(RazorParser, IReadOnlyList<ChunkTree>, IReadOnlyList<Chunk>, String)
  nameWithType: MvcRazorParser.MvcRazorParser(RazorParser, IReadOnlyList<ChunkTree>, IReadOnlyList<Chunk>, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.MvcRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.Chunks.ChunkTree>, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.Chunks.Chunk>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MvcRazorParser(RazorParser parser, IReadOnlyList<ChunkTree> inheritedChunkTrees, IReadOnlyList<Chunk> defaultInheritedChunks, string modelExpressionTypeName)
    content.vb: Public Sub New(parser As RazorParser, inheritedChunkTrees As IReadOnlyList(Of ChunkTree), defaultInheritedChunks As IReadOnlyList(Of Chunk), modelExpressionTypeName As String)
    parameters:
    - id: parser
      type: Microsoft.AspNetCore.Razor.Parser.RazorParser
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.RazorParser" data-throw-if-not-resolved="false"></xref> to copy properties from.
    - id: inheritedChunkTrees
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
      description: >-
        The <xref href="System.Collections.Generic.IReadOnlyList%601" data-throw-if-not-resolved="false"></xref>s that are inherited

        from parsed pages from _ViewImports files.
    - id: defaultInheritedChunks
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
      description: >-
        The <xref href="System.Collections.Generic.IReadOnlyList%601" data-throw-if-not-resolved="false"></xref> inherited by

        default by all Razor pages in the application.
    - id: modelExpressionTypeName
      type: System.String
      description: The full name of the model expression <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: MvcRazorParser.MvcRazorParser(RazorParser, IReadOnlyList(Of ChunkTree), IReadOnlyList(Of Chunk), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.MvcRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.Chunks.ChunkTree), System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk), System.String)
  name.vb: MvcRazorParser(RazorParser, IReadOnlyList(Of ChunkTree), IReadOnlyList(Of Chunk), String)
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  id: GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  langs:
  - csharp
  - vb
  name: GetTagHelperDescriptors(Block, ErrorSink)
  nameWithType: MvcRazorParser.GetTagHelperDescriptors(Block, ErrorSink)
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetTagHelperDescriptors
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/MvcRazorParser.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: protected override IEnumerable<TagHelperDescriptor> GetTagHelperDescriptors(Block documentRoot, ErrorSink errorSink)
    content.vb: Protected Overrides Function GetTagHelperDescriptors(documentRoot As Block, errorSink As ErrorSink) As IEnumerable(Of TagHelperDescriptor)
    parameters:
    - id: documentRoot
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  overridden: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RazorParser
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: true
  name: RazorParser
  nameWithType: RazorParser
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: MvcRazorHost
  nameWithType: MvcRazorHost
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: Parse(TextReader, ParserVisitor)
  nameWithType: RazorParser.Parse(TextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: Parse(TextReader)
  nameWithType: RazorParser.Parse(TextReader)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: Parse(ITextDocument)
  nameWithType: RazorParser.Parse(ITextDocument)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
    name: ITextDocument
    nameWithType: ITextDocument
    fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
    name: ITextDocument
    nameWithType: ITextDocument
    fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: Parse(LookaheadTextReader, ParserVisitor)
  nameWithType: RazorParser.Parse(LookaheadTextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    name: LookaheadTextReader
    nameWithType: LookaheadTextReader
    fullName: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    name: LookaheadTextReader
    nameWithType: LookaheadTextReader
    fullName: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: Parse(LookaheadTextReader)
  nameWithType: RazorParser.Parse(LookaheadTextReader)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    name: LookaheadTextReader
    nameWithType: LookaheadTextReader
    fullName: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
    name: Parse
    nameWithType: RazorParser.Parse
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    name: LookaheadTextReader
    nameWithType: LookaheadTextReader
    fullName: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>)
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError))
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.SynchronizationContext)
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.SynchronizationContext)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SynchronizationContext
    name: SynchronizationContext
    nameWithType: SynchronizationContext
    fullName: System.Threading.SynchronizationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SynchronizationContext
    name: SynchronizationContext
    nameWithType: SynchronizationContext
    fullName: System.Threading.SynchronizationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, CancellationToken)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, CancellationToken)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.CancellationToken)
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.CancellationToken)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext, CancellationToken)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext, CancellationToken)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.SynchronizationContext, System.Threading.CancellationToken)
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.SynchronizationContext, System.Threading.CancellationToken)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SynchronizationContext
    name: SynchronizationContext
    nameWithType: SynchronizationContext
    fullName: System.Threading.SynchronizationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SynchronizationContext
    name: SynchronizationContext
    nameWithType: SynchronizationContext
    fullName: System.Threading.SynchronizationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: CreateParseTask(TextReader, ParserVisitor)
  nameWithType: RazorParser.CreateParseTask(TextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
    name: CreateParseTask
    nameWithType: RazorParser.CreateParseTask
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    name: ParserVisitor
    nameWithType: ParserVisitor
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: DesignTimeMode
  nameWithType: RazorParser.DesignTimeMode
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: TagHelperDescriptorResolver
  nameWithType: RazorParser.TagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
  isExternal: false
  name: MvcRazorParser
  nameWithType: MvcRazorParser
  fullName: Microsoft.AspNetCore.Mvc.Razor.MvcRazorParser
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ChunkTree>
  nameWithType: IReadOnlyList<ChunkTree>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.Chunks.ChunkTree>
  nameWithType.vb: IReadOnlyList(Of ChunkTree)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  name.vb: IReadOnlyList(Of ChunkTree)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Chunk>
  nameWithType: IReadOnlyList<Chunk>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.Chunks.Chunk>
  nameWithType.vb: IReadOnlyList(Of Chunk)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk)
  name.vb: IReadOnlyList(Of Chunk)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  isExternal: true
  name: GetTagHelperDescriptors(Block, ErrorSink)
  nameWithType: RazorParser.GetTagHelperDescriptors(Block, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, Microsoft.AspNetCore.Razor.ErrorSink)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
    name: GetTagHelperDescriptors
    nameWithType: RazorParser.GetTagHelperDescriptors
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    name: Block
    nameWithType: Block
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
    name: GetTagHelperDescriptors
    nameWithType: RazorParser.GetTagHelperDescriptors
    fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    name: Block
    nameWithType: Block
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: true
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: true
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
