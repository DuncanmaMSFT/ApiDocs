### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  id: ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(System.Int32)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Clear
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ClearValidationState(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ContainsKey(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Count
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.DefaultMaxAllowedErrors
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ErrorCount
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.FindKeysWithPrefix(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetEnumerator
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetFieldValidationState(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetValidationState(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.HasReachedMaxErrors
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.IsValid
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Item(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Keys
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldSkipped(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldValid(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Remove(System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Root
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.StartsWithPrefix(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}}#GetEnumerator
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Keys
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Values
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValidationState
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Values
  langs:
  - csharp
  - vb
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelStateDictionary
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRepresents the state of an attempt to bind values from an HTTP Request to an action method, which includes\nvalidation information.\n"
  example: []
  syntax:
    content: 'public class ModelStateDictionary : IReadOnlyDictionary<string, ModelStateEntry>, IReadOnlyCollection<KeyValuePair<string, ModelStateEntry>>, IEnumerable<KeyValuePair<string, ModelStateEntry>>, IEnumerable'
    content.vb: >-
      Public Class ModelStateDictionary
          Implements IReadOnlyDictionary(Of String, ModelStateEntry), IReadOnlyCollection(Of KeyValuePair(Of String, ModelStateEntry)), IEnumerable(Of KeyValuePair(Of String, ModelStateEntry)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}},System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}})
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.DefaultMaxAllowedErrors
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.DefaultMaxAllowedErrors
  id: DefaultMaxAllowedErrors
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: DefaultMaxAllowedErrors
  nameWithType: ModelStateDictionary.DefaultMaxAllowedErrors
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.DefaultMaxAllowedErrors
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultMaxAllowedErrors
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nThe default value for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors\" data-throw-if-not-resolved=\"false\"></xref> of <code>200</code>.\n"
  example: []
  syntax:
    content: public static readonly int DefaultMaxAllowedErrors
    content.vb: Public Shared ReadOnly DefaultMaxAllowedErrors As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ModelStateDictionary()
  nameWithType: ModelStateDictionary.ModelStateDictionary()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ModelStateDictionary()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ModelStateDictionary(Int32)
  nameWithType: ModelStateDictionary.ModelStateDictionary(Int32)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ModelStateDictionary(int maxAllowedErrors)
    content.vb: Public Sub New(maxAllowedErrors As Integer)
    parameters:
    - id: maxAllowedErrors
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ModelStateDictionary(ModelStateDictionary)
  nameWithType: ModelStateDictionary.ModelStateDictionary(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> class by using values that are copied\nfrom the specified <em>dictionary</em>.\n"
  example: []
  syntax:
    content: public ModelStateDictionary(ModelStateDictionary dictionary)
    content.vb: Public Sub New(dictionary As ModelStateDictionary)
    parameters:
    - id: dictionary
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> to copy values from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Root
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Root
  id: Root
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ModelStateDictionary.Root
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Root
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Root
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRoot entry for the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelStateEntry Root { get; }
    content.vb: Public ReadOnly Property Root As ModelStateEntry
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
  id: MaxAllowedErrors
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: MaxAllowedErrors
  nameWithType: ModelStateDictionary.MaxAllowedErrors
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MaxAllowedErrors
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets or sets the maximum allowed model state errors in this instance of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\nDefaults to <code>200</code>.\n"
  remarks: "\n<p>\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> tracks the number of model errors added by calls to\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String%2cSystem.Exception%2cMicrosoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String%2cSystem.Exception%2cMicrosoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)\" data-throw-if-not-resolved=\"false\"></xref>.\nOnce the value of <pre><code>MaxAllowedErrors - 1</code></pre> is reached, if another attempt is made to add an error,\nthe error message will be ignored and a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException\" data-throw-if-not-resolved=\"false\"></xref> will be added.\n</p>\n<p>\nErrors added via modifying <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry\" data-throw-if-not-resolved=\"false\"></xref> directly do not count towards this limit.\n</p>\n"
  example: []
  syntax:
    content: public int MaxAllowedErrors { get; set; }
    content.vb: Public Property MaxAllowedErrors As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.HasReachedMaxErrors
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.HasReachedMaxErrors
  id: HasReachedMaxErrors
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: HasReachedMaxErrors
  nameWithType: ModelStateDictionary.HasReachedMaxErrors
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.HasReachedMaxErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HasReachedMaxErrors
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a value indicating whether or not the maximum number of errors have been\nrecorded.\n"
  remarks: "\nReturns <code>true</code> if a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException\" data-throw-if-not-resolved=\"false\"></xref> has been recorded;\notherwise <code>false</code>.\n"
  example: []
  syntax:
    content: public bool HasReachedMaxErrors { get; }
    content.vb: Public ReadOnly Property HasReachedMaxErrors As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ErrorCount
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ErrorCount
  id: ErrorCount
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ErrorCount
  nameWithType: ModelStateDictionary.ErrorCount
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ErrorCount
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ErrorCount
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the number of errors added to this instance of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> via\n<xref href=\"AddModelError\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TryAddModelError\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int ErrorCount { get; }
    content.vb: Public ReadOnly Property ErrorCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Count
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Count
  id: Count
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ModelStateDictionary.Count
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Count
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Keys
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ModelStateDictionary.Keys
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Keys
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the key sequence.\n"
  example: []
  syntax:
    content: public ModelStateDictionary.KeyEnumerable Keys { get; }
    content.vb: Public ReadOnly Property Keys As ModelStateDictionary.KeyEnumerable
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Keys
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Keys
  id: System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Keys
  isEii: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: IReadOnlyDictionary<String, ModelStateEntry>.Keys
  nameWithType: ModelStateDictionary.IReadOnlyDictionary<String, ModelStateEntry>.Keys
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 131
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: IEnumerable<string> IReadOnlyDictionary<string, ModelStateEntry>.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys As IEnumerable(Of String) Implements IReadOnlyDictionary(Of String, ModelStateEntry).Keys
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Keys
  nameWithType.vb: ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Values
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Values
  id: Values
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ModelStateDictionary.Values
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Values
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the value sequence.\n"
  example: []
  syntax:
    content: public ModelStateDictionary.ValueEnumerable Values { get; }
    content.vb: Public ReadOnly Property Values As ModelStateDictionary.ValueEnumerable
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Values
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Values
  id: System#Collections#Generic#IReadOnlyDictionary{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}#Values
  isEii: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: IReadOnlyDictionary<String, ModelStateEntry>.Values
  nameWithType: ModelStateDictionary.IReadOnlyDictionary<String, ModelStateEntry>.Values
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: IEnumerable<ModelStateEntry> IReadOnlyDictionary<string, ModelStateEntry>.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values As IEnumerable(Of ModelStateEntry) Implements IReadOnlyDictionary(Of String, ModelStateEntry).Values
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Values
  nameWithType.vb: ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.IsValid
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.IsValid
  id: IsValid
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ModelStateDictionary.IsValid
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.IsValid
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsValid
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 144
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a value that indicates whether any model state values in this model state dictionary is invalid or not validated.\n"
  example: []
  syntax:
    content: public bool IsValid { get; }
    content.vb: Public ReadOnly Property IsValid As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValidationState
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValidationState
  id: ValidationState
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ValidationState
  nameWithType: ModelStateDictionary.ValidationState
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValidationState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValidationState
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public ModelValidationState ValidationState { get; }
    content.vb: Public ReadOnly Property ValidationState As ModelValidationState
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ModelStateDictionary.Item[String]
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: this[]
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 156
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public ModelStateEntry this[string key] { get; }
    content.vb: Public ReadOnly Property Item(key As String) As ModelStateEntry
    parameters:
    - id: key
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Item(System.String)
  nameWithType.vb: ModelStateDictionary.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  id: AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: AddModelError(String, Exception, ModelMetadata)
  nameWithType: ModelStateDictionary.AddModelError(String, Exception, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String, System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddModelError
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 181
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAdds the specified <em>exception</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref> instance\nthat is associated with the specified <em>key</em>.\n"
  example: []
  syntax:
    content: public void AddModelError(string key, Exception exception, ModelMetadata metadata)
    content.vb: Public Sub AddModelError(key As String, exception As Exception, metadata As ModelMetadata)
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to add errors to.
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> to add.
    - id: metadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref> associated with the model.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  id: TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: TryAddModelError(String, Exception, ModelMetadata)
  nameWithType: ModelStateDictionary.TryAddModelError(String, Exception, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String, System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryAddModelError
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAttempts to add the specified <em>exception</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref>\ninstance that is associated with the specified <em>key</em>. If the maximum number of allowed\nerrors has already been recorded, records a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException\" data-throw-if-not-resolved=\"false\"></xref> exception instead.\n"
  example: []
  syntax:
    content: public bool TryAddModelError(string key, Exception exception, ModelMetadata metadata)
    content.vb: Public Function TryAddModelError(key As String, exception As Exception, metadata As ModelMetadata) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to add errors to.
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> to add.
    - id: metadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref> associated with the model.
    return:
      type: System.Boolean
      description: "\n<code>True</code> if the given error was added, <code>false</code> if the error was ignored.\nSee <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)
  id: AddModelError(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: AddModelError(String, String)
  nameWithType: ModelStateDictionary.AddModelError(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddModelError
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 269
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAdds the specified <em>errorMessage</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref> instance\nthat is associated with the specified <em>key</em>.\n"
  example: []
  syntax:
    content: public void AddModelError(string key, string errorMessage)
    content.vb: Public Sub AddModelError(key As String, errorMessage As String)
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to add errors to.
    - id: errorMessage
      type: System.String
      description: The error message to add.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.String)
  id: TryAddModelError(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: TryAddModelError(String, String)
  nameWithType: ModelStateDictionary.TryAddModelError(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryAddModelError
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 295
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAttempts to add the specified <em>errorMessage</em> to the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors\" data-throw-if-not-resolved=\"false\"></xref>\ninstance that is associated with the specified <em>key</em>. If the maximum number of allowed\nerrors has already been recorded, records a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException\" data-throw-if-not-resolved=\"false\"></xref> exception instead.\n"
  example: []
  syntax:
    content: public bool TryAddModelError(string key, string errorMessage)
    content.vb: Public Function TryAddModelError(key As String, errorMessage As String) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to add errors to.
    - id: errorMessage
      type: System.String
      description: The error message to add.
    return:
      type: System.Boolean
      description: "\n<code>True</code> if the given error was added, <code>false</code> if the error was ignored.\nSee <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetFieldValidationState(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetFieldValidationState(System.String)
  id: GetFieldValidationState(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: GetFieldValidationState(String)
  nameWithType: ModelStateDictionary.GetFieldValidationState(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetFieldValidationState(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetFieldValidationState
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 331
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nReturns the aggregate <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState\" data-throw-if-not-resolved=\"false\"></xref> for items starting with the\nspecified <em>key</em>.\n"
  example: []
  syntax:
    content: public ModelValidationState GetFieldValidationState(string key)
    content.vb: Public Function GetFieldValidationState(key As String) As ModelValidationState
    parameters:
    - id: key
      type: System.String
      description: The key to look up model state errors for.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
      description: >-
        Returns <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Unvalidated" data-throw-if-not-resolved="false"></xref> if no entries are found for the specified

        key, <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid" data-throw-if-not-resolved="false"></xref> if at least one instance is found with one or more model

        state errors; <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid" data-throw-if-not-resolved="false"></xref> otherwise.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetValidationState(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetValidationState(System.String)
  id: GetValidationState(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: GetValidationState(String)
  nameWithType: ModelStateDictionary.GetValidationState(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetValidationState(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetValidationState
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 349
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nReturns <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState\" data-throw-if-not-resolved=\"false\"></xref> for the <em>key</em>.\n"
  example: []
  syntax:
    content: public ModelValidationState GetValidationState(string key)
    content.vb: Public Function GetValidationState(key As String) As ModelValidationState
    parameters:
    - id: key
      type: System.String
      description: The key to look up model state errors for.
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
      description: >-
        Returns <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Unvalidated" data-throw-if-not-resolved="false"></xref> if no entry is found for the specified

        key, <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid" data-throw-if-not-resolved="false"></xref> if an instance is found with one or more model

        state errors; <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid" data-throw-if-not-resolved="false"></xref> otherwise.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldValid(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldValid(System.String)
  id: MarkFieldValid(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: MarkFieldValid(String)
  nameWithType: ModelStateDictionary.MarkFieldValid(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldValid(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MarkFieldValid
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 370
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nMarks the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState\" data-throw-if-not-resolved=\"false\"></xref> for the entry with the specified\n<em>key</em> as <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void MarkFieldValid(string key)
    content.vb: Public Sub MarkFieldValid(key As String)
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to mark as valid.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldSkipped(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldSkipped(System.String)
  id: MarkFieldSkipped(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: MarkFieldSkipped(String)
  nameWithType: ModelStateDictionary.MarkFieldSkipped(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldSkipped(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MarkFieldSkipped
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 393
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nMarks the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState\" data-throw-if-not-resolved=\"false\"></xref> for the entry with the specified <em>key</em>\nas <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Skipped\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void MarkFieldSkipped(string key)
    content.vb: Public Sub MarkFieldSkipped(key As String)
    parameters:
    - id: key
      type: System.String
      description: The key of the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> to mark as skipped.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Merge(ModelStateDictionary)
  nameWithType: ModelStateDictionary.Merge(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Merge
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 416
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCopies the values from the specified <em>dictionary</em> into this instance, overwriting\nexisting values if keys are the same.\n"
  example: []
  syntax:
    content: public void Merge(ModelStateDictionary dictionary)
    content.vb: Public Sub Merge(dictionary As ModelStateDictionary)
    parameters:
    - id: dictionary
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> to copy values from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Object,System.String)
  id: SetModelValue(System.String,System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: SetModelValue(String, Object, String)
  nameWithType: ModelStateDictionary.SetModelValue(String, Object, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SetModelValue
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 442
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nSets the of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.RawValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.AttemptedValue\" data-throw-if-not-resolved=\"false\"></xref> for\nthe <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry\" data-throw-if-not-resolved=\"false\"></xref> with the specified <em>key</em>.\n"
  example: []
  syntax:
    content: public void SetModelValue(string key, object rawValue, string attemptedValue)
    content.vb: Public Sub SetModelValue(key As String, rawValue As Object, attemptedValue As String)
    parameters:
    - id: key
      type: System.String
      description: The key for the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> entry.
    - id: rawValue
      type: System.Object
      description: The raw value for the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> entry.
    - id: attemptedValue
      type: System.String
      description: "\nThe values of <em>rawValue</em> in a comma-separated <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  id: SetModelValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: SetModelValue(String, ValueProviderResult)
  nameWithType: ModelStateDictionary.SetModelValue(String, ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SetModelValue
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 463
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nSets the value for the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry\" data-throw-if-not-resolved=\"false\"></xref> with the specified <em>key</em>.\n"
  example: []
  syntax:
    content: public void SetModelValue(string key, ValueProviderResult valueProviderResult)
    content.vb: Public Sub SetModelValue(key As String, valueProviderResult As ValueProviderResult)
    parameters:
    - id: key
      type: System.String
      description: The key for the <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry" data-throw-if-not-resolved="false"></xref> entry
    - id: valueProviderResult
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: "\nA <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref> with data for the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry\" data-throw-if-not-resolved=\"false\"></xref> entry.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ClearValidationState(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ClearValidationState(System.String)
  id: ClearValidationState(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ClearValidationState(String)
  nameWithType: ModelStateDictionary.ClearValidationState(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ClearValidationState(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ClearValidationState
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 492
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nClears <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> entries that match the key that is passed as parameter.\n"
  example: []
  syntax:
    content: public void ClearValidationState(string key)
    content.vb: Public Sub ClearValidationState(key As String)
    parameters:
    - id: key
      type: System.String
      description: The key of <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> to clear.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Clear
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ModelStateDictionary.Clear()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Clear
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 629
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRemoves all keys and values from ths instance of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: ModelStateDictionary.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ContainsKey
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 639
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    content.vb: Public Function ContainsKey(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.ContainsKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Remove(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: ModelStateDictionary.Remove(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Remove
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 655
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nRemoves the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry\" data-throw-if-not-resolved=\"false\"></xref> with the specified <em>key</em>.\n"
  example: []
  syntax:
    content: public bool Remove(string key)
    content.vb: Public Function Remove(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the element is successfully removed; otherwise <code>false</code>. This method also
            returns <code>false</code> if key was not found.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  id: TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out ModelStateEntry)
  nameWithType: ModelStateDictionary.TryGetValue(String, out ModelStateEntry)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(System.String, out Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryGetValue
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 675
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public bool TryGetValue(string key, out ModelStateEntry value)
    content.vb: Public Function TryGetValue(key As String, ByRef value As ModelStateEntry) As Boolean
    parameters:
    - id: key
      type: System.String
    - id: value
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  nameWithType.vb: ModelStateDictionary.TryGetValue(String, ByRef ModelStateEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(System.String, ByRef Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  name.vb: TryGetValue(String, ByRef ModelStateEntry)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ModelStateDictionary.GetEnumerator()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 697
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nReturns an enumerator that iterates through this instance of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelStateDictionary.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As ModelStateDictionary.Enumerator
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
      description: An <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#AspNetCore#Mvc#ModelBinding#ModelStateEntry}}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, ModelStateEntry>>.GetEnumerator()
  nameWithType: ModelStateDictionary.IEnumerable<KeyValuePair<String, ModelStateEntry>>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 700
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, ModelStateEntry>> IEnumerable<KeyValuePair<string, ModelStateEntry>>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, ModelStateEntry)) Implements IEnumerable(Of KeyValuePair(Of String, ModelStateEntry)).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.GetEnumerator
  nameWithType.vb: ModelStateDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator()
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator()
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ModelStateDictionary.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 704
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.StartsWithPrefix(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.StartsWithPrefix(System.String,System.String)
  id: StartsWithPrefix(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: StartsWithPrefix(String, String)
  nameWithType: ModelStateDictionary.StartsWithPrefix(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.StartsWithPrefix(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StartsWithPrefix
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 706
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  syntax:
    content: public static bool StartsWithPrefix(string prefix, string key)
    content.vb: Public Shared Function StartsWithPrefix(prefix As String, key As String) As Boolean
    parameters:
    - id: prefix
      type: System.String
    - id: key
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.FindKeysWithPrefix(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.FindKeysWithPrefix(System.String)
  id: FindKeysWithPrefix(System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  langs:
  - csharp
  - vb
  name: FindKeysWithPrefix(String)
  nameWithType: ModelStateDictionary.FindKeysWithPrefix(String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.FindKeysWithPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindKeysWithPrefix
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelStateDictionary.cs
    startLine: 749
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  syntax:
    content: public ModelStateDictionary.PrefixEnumerable FindKeysWithPrefix(string prefix)
    content.vb: Public Function FindKeysWithPrefix(prefix As String) As ModelStateDictionary.PrefixEnumerable
    parameters:
    - id: prefix
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, ModelStateEntry>
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  name.vb: IReadOnlyDictionary(Of String, ModelStateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<String, ModelStateEntry>>
  nameWithType: IReadOnlyCollection<KeyValuePair<String, ModelStateEntry>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of String, ModelStateEntry))
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of String, ModelStateEntry))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, ModelStateEntry>>
  nameWithType: IEnumerable<KeyValuePair<String, ModelStateEntry>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, ModelStateEntry))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry))
  name.vb: IEnumerable(Of KeyValuePair(Of String, ModelStateEntry))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  name: AddModelError<TModel>(Expression<Func<TModel, Object>>, String)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(Expression<Func<TModel, Object>>, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String)
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(Expression(Of Func(Of TModel, Object)), String)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String)
  name.vb: AddModelError(Of TModel)(Expression(Of Func(Of TModel, Object)), String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: AddModelError<TModel>
    nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: AddModelError(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.AddModelError(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  name: AddModelError<TModel>(Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  name.vb: AddModelError(Of TModel)(Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
    name: AddModelError<TModel>
    nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
    name: AddModelError(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.AddModelError(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  name: Remove<TModel>(Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.Remove<TModel>(Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove<TModel>(System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  nameWithType.vb: ModelStateDictionaryExtensions.Remove(Of TModel)(Expression(Of Func(Of TModel, Object)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove(Of TModel)(System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: Remove(Of TModel)(Expression(Of Func(Of TModel, Object)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: Remove<TModel>
    nameWithType: ModelStateDictionaryExtensions.Remove<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: Remove(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.Remove(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  name: RemoveAll<TModel>(Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.RemoveAll<TModel>(Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll<TModel>(System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  nameWithType.vb: ModelStateDictionaryExtensions.RemoveAll(Of TModel)(Expression(Of Func(Of TModel, Object)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll(Of TModel)(System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: RemoveAll(Of TModel)(Expression(Of Func(Of TModel, Object)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: RemoveAll<TModel>
    nameWithType: ModelStateDictionaryExtensions.RemoveAll<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: RemoveAll(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.RemoveAll(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  isExternal: true
  name: AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, String)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String)
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), String)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String)
  name.vb: AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: AddModelError<TModel>
    nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: AddModelError(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.AddModelError(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionaryExtensions
  nameWithType: ModelStateDictionaryExtensions
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  isExternal: true
  name: AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>, Exception, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  nameWithType.vb: ModelStateDictionaryExtensions.AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  name.vb: AddModelError(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)), Exception, ModelMetadata)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
    name: AddModelError<TModel>
    nameWithType: ModelStateDictionaryExtensions.AddModelError<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
    name: AddModelError(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.AddModelError(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  name: Remove<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.Remove<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  nameWithType.vb: ModelStateDictionaryExtensions.Remove(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: Remove(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: Remove<TModel>
    nameWithType: ModelStateDictionaryExtensions.Remove<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: Remove(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.Remove(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  name: RemoveAll<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  nameWithType: ModelStateDictionaryExtensions.RemoveAll<TModel>(ModelStateDictionary, Expression<Func<TModel, Object>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll<TModel>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>)
  nameWithType.vb: ModelStateDictionaryExtensions.RemoveAll(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll(Of TModel)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: RemoveAll(Of TModel)(ModelStateDictionary, Expression(Of Func(Of TModel, Object)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: RemoveAll<TModel>
    nameWithType: ModelStateDictionaryExtensions.RemoveAll<TModel>
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: RemoveAll(Of TModel)
    nameWithType: ModelStateDictionaryExtensions.RemoveAll(Of TModel)
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateEntry
  nameWithType: ModelStateEntry
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(System.String,System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException
  isExternal: false
  name: TooManyModelErrorsException
  nameWithType: TooManyModelErrorsException
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AddModelError
  commentId: M:AddModelError
- uid: TryAddModelError
  commentId: M:TryAddModelError
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<KeyValuePair<String, ModelStateEntry>>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.Count
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of String, ModelStateEntry)).Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary.KeyEnumerable
  nameWithType: ModelStateDictionary.KeyEnumerable
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Keys
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Keys
  parent: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Keys
  name: Keys
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.Keys
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Keys
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry).Keys
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).Keys
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary.ValueEnumerable
  nameWithType: ModelStateDictionary.ValueEnumerable
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Values
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Values
  parent: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Values
  name: Values
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.Values
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Values
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry).Values
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).Values
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelStateEntry>
  nameWithType: IEnumerable<ModelStateEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>
  nameWithType.vb: IEnumerable(Of ModelStateEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  name.vb: IEnumerable(Of ModelStateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelValidationState
  nameWithType: ModelValidationState
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Item(System.String)
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.Item(System.String)
  parent: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.Item[String]
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Item[System.String]
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry).Item(String)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.Item
    fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    nameWithType: IReadOnlyDictionary(Of String, ModelStateEntry).Item
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    nameWithType: IReadOnlyDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    nameWithType: IReadOnlyDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Unvalidated
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Unvalidated
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Skipped
  commentId: F:Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Skipped
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.RawValue
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.RawValue
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.AttemptedValue
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.AttemptedValue
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ValueProviderResult
  nameWithType: ValueProviderResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.ContainsKey(System.String)
  parent: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.ContainsKey(String)
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.ContainsKey(System.String)
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry).ContainsKey(String)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IReadOnlyDictionary(Of String, ModelStateEntry).ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IReadOnlyDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}.TryGetValue(System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry@)
  parent: System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, ModelStateEntry)
  nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.TryGetValue(String, ModelStateEntry)
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.TryGetValue(System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  nameWithType.vb: IReadOnlyDictionary(Of String, ModelStateEntry).TryGetValue(String, ModelStateEntry)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).TryGetValue(System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IReadOnlyDictionary<String, ModelStateEntry>.TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IReadOnlyDictionary(Of String, ModelStateEntry).TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IReadOnlyDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary.Enumerator
  nameWithType: ModelStateDictionary.Enumerator
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, ModelStateEntry>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, ModelStateEntry)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, ModelStateEntry>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, ModelStateEntry)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, ModelStateEntry>>
  nameWithType: IEnumerator<KeyValuePair<String, ModelStateEntry>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, ModelStateEntry))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry))
  name.vb: IEnumerator(Of KeyValuePair(Of String, ModelStateEntry))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
    name: ModelStateEntry
    nameWithType: ModelStateEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary.PrefixEnumerable
  nameWithType: ModelStateDictionary.PrefixEnumerable
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
