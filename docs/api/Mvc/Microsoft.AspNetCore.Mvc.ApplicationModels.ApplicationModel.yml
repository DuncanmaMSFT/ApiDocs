### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  id: ApplicationModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.#ctor
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Controllers
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Filters
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties
  langs:
  - csharp
  - vb
  name: ApplicationModel
  nameWithType: ApplicationModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApplicationModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: 'public class ApplicationModel : IPropertyModel, IFilterModel, IApiExplorerModel'
    content.vb: >-
      Public Class ApplicationModel
          Implements IPropertyModel, IFilterModel, IApiExplorerModel
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  langs:
  - csharp
  - vb
  name: ApplicationModel()
  nameWithType: ApplicationModel.ApplicationModel()
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApplicationModel()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public ApplicationModel()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
  id: ApiExplorer
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  langs:
  - csharp
  - vb
  name: ApiExplorer
  nameWithType: ApplicationModel.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApiExplorer
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel\" data-throw-if-not-resolved=\"false\"></xref> for the application.\n"
  remarks: "\n<xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer\" data-throw-if-not-resolved=\"false\"></xref> allows configuration of default settings\nfor ApiExplorer that apply to all actions unless overridden by \n<xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer\" data-throw-if-not-resolved=\"false\"></xref>.\n\nIf using <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer\" data-throw-if-not-resolved=\"false\"></xref> to set <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible\" data-throw-if-not-resolved=\"false\"></xref> to\n<code>true</code>, this setting will only be honored for actions which use attribute routing.\n"
  example: []
  syntax:
    content: public ApiExplorerModel ApiExplorer { get; set; }
    content.vb: Public Property ApiExplorer As ApiExplorerModel
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  implements:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel.ApiExplorer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Controllers
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Controllers
  id: Controllers
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  langs:
  - csharp
  - vb
  name: Controllers
  nameWithType: ApplicationModel.Controllers
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Controllers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Controllers
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public IList<ControllerModel> Controllers { get; }
    content.vb: Public ReadOnly Property Controllers As IList(Of ControllerModel)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Filters
  id: Filters
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: ApplicationModel.Filters
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Filters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filters
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public IList<IFilterMetadata> Filters { get; }
    content.vb: Public ReadOnly Property Filters As IList(Of IFilterMetadata)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  implements:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties
  id: Properties
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ApplicationModel.Properties
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Properties
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModel.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nGets a set of properties associated with all actions.\nThese properties will be copied to <xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IDictionary<object, object> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  implements:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IPropertyModel
  nameWithType: IPropertyModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IFilterModel
  nameWithType: IFilterModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IApiExplorerModel
  nameWithType: IApiExplorerModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ApiExplorerModel
  nameWithType: ApiExplorerModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel.ApiExplorer
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel.ApiExplorer
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel
  isExternal: false
  name: ApiExplorer
  nameWithType: IApiExplorerModel.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel.ApiExplorer
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ControllerModel>
  nameWithType: IList<ControllerModel>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel>
  nameWithType.vb: IList(Of ControllerModel)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)
  name.vb: IList(Of ControllerModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
    name: ControllerModel
    nameWithType: ControllerModel
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
    name: ControllerModel
    nameWithType: ControllerModel
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  isExternal: false
  name: Filters
  nameWithType: IFilterModel.Filters
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFilterMetadata>
  nameWithType: IList<IFilterMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>
  nameWithType.vb: IList(Of IFilterMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  name.vb: IList(Of IFilterMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  isExternal: false
  name: Properties
  nameWithType: ActionDescriptor.Properties
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel.Properties
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel.Properties
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel
  isExternal: false
  name: Properties
  nameWithType: IPropertyModel.Properties
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel.Properties
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
