### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  id: CompilerCacheResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult,System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.ExpirationTokens
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.PageFactory
  - Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.Success
  langs:
  - csharp
  - vb
  name: CompilerCacheResult
  nameWithType: CompilerCacheResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CompilerCacheResult
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nResult of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct CompilerCacheResult
    content.vb: Public Structure CompilerCacheResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)
  id: '#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)'
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: CompilerCacheResult(String, CompilationResult)
  nameWithType: CompilerCacheResult.CompilerCacheResult(String, CompilationResult)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.CompilerCacheResult(System.String, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CompilerCacheResult(string relativePath, CompilationResult compilationResult)
    content.vb: Public Sub New(relativePath As String, compilationResult As CompilationResult)
    parameters:
    - id: relativePath
      type: System.String
      description: Path of the view file relative to the application base.
    - id: compilationResult
      type: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult,System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult,System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  id: '#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult,System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})'
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: CompilerCacheResult(String, CompilationResult, IList<IChangeToken>)
  nameWithType: CompilerCacheResult.CompilerCacheResult(String, CompilationResult, IList<IChangeToken>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.CompilerCacheResult(System.String, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult, System.Collections.Generic.IList<Microsoft.Extensions.Primitives.IChangeToken>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CompilerCacheResult(string relativePath, CompilationResult compilationResult, IList<IChangeToken> expirationTokens)
    content.vb: Public Sub New(relativePath As String, compilationResult As CompilationResult, expirationTokens As IList(Of IChangeToken))
    parameters:
    - id: relativePath
      type: System.String
      description: Path of the view file relative to the application base.
    - id: compilationResult
      type: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult" data-throw-if-not-resolved="false"></xref>.
    - id: expirationTokens
      type: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
      description: >-
        One or more <xref href="Microsoft.Extensions.Primitives.IChangeToken" data-throw-if-not-resolved="false"></xref> instances that indicate when

        this result has expired.
  nameWithType.vb: CompilerCacheResult.CompilerCacheResult(String, CompilationResult, IList(Of IChangeToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.CompilerCacheResult(System.String, Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult, System.Collections.Generic.IList(Of Microsoft.Extensions.Primitives.IChangeToken))
  name.vb: CompilerCacheResult(String, CompilationResult, IList(Of IChangeToken))
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})
  id: '#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})'
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: CompilerCacheResult(IList<IChangeToken>)
  nameWithType: CompilerCacheResult.CompilerCacheResult(IList<IChangeToken>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.CompilerCacheResult(System.Collections.Generic.IList<Microsoft.Extensions.Primitives.IChangeToken>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult\" data-throw-if-not-resolved=\"false\"></xref> for a file that could not be\nfound in the file system.\n"
  example: []
  syntax:
    content: public CompilerCacheResult(IList<IChangeToken> expirationTokens)
    content.vb: Public Sub New(expirationTokens As IList(Of IChangeToken))
    parameters:
    - id: expirationTokens
      type: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
      description: >-
        One or more <xref href="Microsoft.Extensions.Primitives.IChangeToken" data-throw-if-not-resolved="false"></xref> instances that indicate when

        this result has expired.
  nameWithType.vb: CompilerCacheResult.CompilerCacheResult(IList(Of IChangeToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.CompilerCacheResult(System.Collections.Generic.IList(Of Microsoft.Extensions.Primitives.IChangeToken))
  name.vb: CompilerCacheResult(IList(Of IChangeToken))
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.ExpirationTokens
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.ExpirationTokens
  id: ExpirationTokens
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: ExpirationTokens
  nameWithType: CompilerCacheResult.ExpirationTokens
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.ExpirationTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExpirationTokens
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\n<xref href=\"Microsoft.Extensions.Primitives.IChangeToken\" data-throw-if-not-resolved=\"false\"></xref> instances that indicate when this result has expired.\n"
  example: []
  syntax:
    content: public IList<IChangeToken> ExpirationTokens { get; }
    content.vb: Public ReadOnly Property ExpirationTokens As IList(Of IChangeToken)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.Success
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.Success
  id: Success
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: CompilerCacheResult.Success
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.Success
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Success
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nGets a value that determines if the view was successfully found and compiled.\n"
  example: []
  syntax:
    content: public bool Success { get; }
    content.vb: Public ReadOnly Property Success As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.PageFactory
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.PageFactory
  id: PageFactory
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  langs:
  - csharp
  - vb
  name: PageFactory
  nameWithType: CompilerCacheResult.PageFactory
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult.PageFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PageFactory
    path: src/Microsoft.AspNetCore.Mvc.Razor/Internal/CompilerCacheResult.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.Internal
  summary: "\nGets a delegate that creates an instance of the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IRazorPage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Func<IRazorPage> PageFactory { get; }
    content.vb: Public ReadOnly Property PageFactory As Func(Of IRazorPage)
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Mvc.Razor.IRazorPage}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: ICompilerCache
  nameWithType: ICompilerCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.ICompilerCache
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Internal
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Internal
  isExternal: false
  name: CompilerCacheResult
  nameWithType: CompilerCacheResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Internal.CompilerCacheResult
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
  parent: Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: CompilationResult
  nameWithType: CompilationResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.Compilation
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Compilation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Compilation
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Compilation
  fullName: Microsoft.AspNetCore.Mvc.Razor.Compilation
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
- uid: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IChangeToken>
  nameWithType: IList<IChangeToken>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.Primitives.IChangeToken>
  nameWithType.vb: IList(Of IChangeToken)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.Primitives.IChangeToken)
  name.vb: IList(Of IChangeToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPage
  nameWithType: IRazorPage
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
- uid: System.Func{Microsoft.AspNetCore.Mvc.Razor.IRazorPage}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.Razor.IRazorPage}
  parent: System
  definition: System.Func`1
  name: Func<IRazorPage>
  nameWithType: Func<IRazorPage>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.Razor.IRazorPage>
  nameWithType.vb: Func(Of IRazorPage)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.Razor.IRazorPage)
  name.vb: Func(Of IRazorPage)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
    name: IRazorPage
    nameWithType: IRazorPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
    name: IRazorPage
    nameWithType: IRazorPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
