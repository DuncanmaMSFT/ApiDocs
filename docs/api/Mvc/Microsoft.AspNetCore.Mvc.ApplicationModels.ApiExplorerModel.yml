### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  id: ApiExplorerModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.GroupName
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
  langs:
  - csharp
  - vb
  name: ApiExplorerModel
  nameWithType: ApiExplorerModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApiExplorerModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nA model for ApiExplorer properties associated with a controller or action.\n"
  example: []
  syntax:
    content: public class ApiExplorerModel
    content.vb: Public Class ApiExplorerModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  langs:
  - csharp
  - vb
  name: ApiExplorerModel()
  nameWithType: ApiExplorerModel.ApiExplorerModel()
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.ApiExplorerModel()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ApiExplorerModel()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  langs:
  - csharp
  - vb
  name: ApiExplorerModel(ApiExplorerModel)
  nameWithType: ApiExplorerModel.ApiExplorerModel(ApiExplorerModel)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.ApiExplorerModel(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel\" data-throw-if-not-resolved=\"false\"></xref> with properties copied from <em>other</em>.\n"
  example: []
  syntax:
    content: public ApiExplorerModel(ApiExplorerModel other)
    content.vb: Public Sub New(other As ApiExplorerModel)
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
      description: The <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel" data-throw-if-not-resolved="false"></xref> to copy.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
  id: IsVisible
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: ApiExplorerModel.IsVisible
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsVisible
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nIf <code>true</code>, <code>APIExplorer.ApiDescription</code> objects will be created for the associated\ncontroller or action.\n"
  remarks: "\nSet this value to configure whether or not the associated controller or action will appear in ApiExplorer.\n"
  example: []
  syntax:
    content: public bool ? IsVisible { get; set; }
    content.vb: Public Property IsVisible As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.GroupName
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.GroupName
  id: GroupName
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: ApiExplorerModel.GroupName
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.GroupName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GroupName
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApiExplorerModel.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nThe value for <code>APIExplorer.ApiDescription.GroupName</code> of\n<code>APIExplorer.ApiDescription</code> objects created for the associated controller or action.\n"
  example: []
  syntax:
    content: public string GroupName { get; set; }
    content.vb: Public Property GroupName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ApiExplorerModel
  nameWithType: ApiExplorerModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
