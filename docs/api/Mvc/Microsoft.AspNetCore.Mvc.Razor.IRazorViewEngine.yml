### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  id: IRazorViewEngine
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IRazorViewEngine
  nameWithType: IRazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IRazorViewEngine
    path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine\" data-throw-if-not-resolved=\"false\"></xref> used to render pages that use the Razor syntax.\n"
  example: []
  syntax:
    content: 'public interface IRazorViewEngine : IViewEngine'
    content.vb: >-
      Public Interface IRazorViewEngine
          Inherits IViewEngine
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  id: FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  langs:
  - csharp
  - vb
  name: FindPage(ActionContext, String)
  nameWithType: IRazorViewEngine.FindPage(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindPage
    path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nFinds the page with the given <em>pageName</em> using view locations and information from the\n<em>context</em>.\n"
  remarks: <xref href="Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: RazorPageResult FindPage(ActionContext context, string pageName)
    content.vb: Function FindPage(context As ActionContext, pageName As String) As RazorPageResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: pageName
      type: System.String
      description: The name of the page.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.RazorPageResult" data-throw-if-not-resolved="false"></xref> of locating the page.
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  id: GetPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  langs:
  - csharp
  - vb
  name: GetPage(String, String)
  nameWithType: IRazorViewEngine.GetPage(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetPage
    path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the page with the given <em>pagePath</em>, relative to <em>executingFilePath</em>\nunless <em>pagePath</em> is already absolute.\n"
  remarks: <xref href="Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String%2cSystem.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: RazorPageResult GetPage(string executingFilePath, string pagePath)
    content.vb: Function GetPage(executingFilePath As String, pagePath As String) As RazorPageResult
    parameters:
    - id: executingFilePath
      type: System.String
      description: The absolute path to the currently-executing page, if any.
    - id: pagePath
      type: System.String
      description: The path to the page.
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.Razor.RazorPageResult" data-throw-if-not-resolved="false"></xref> of locating the page.
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  id: GetAbsolutePath(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  langs:
  - csharp
  - vb
  name: GetAbsolutePath(String, String)
  nameWithType: IRazorViewEngine.GetAbsolutePath(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetAbsolutePath
    path: src/Microsoft.AspNetCore.Mvc.Razor/IRazorViewEngine.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nConverts the given <em>pagePath</em> to be absolute, relative to\n<em>executingFilePath</em> unless <em>pagePath</em> is already absolute.\n"
  example: []
  syntax:
    content: string GetAbsolutePath(string executingFilePath, string pagePath)
    content.vb: Function GetAbsolutePath(executingFilePath As String, pagePath As String) As String
    parameters:
    - id: executingFilePath
      type: System.String
      description: The absolute path to the currently-executing page, if any.
    - id: pagePath
      type: System.String
      description: The path to the page.
    return:
      type: System.String
      description: "\nThe combination of <em>executingFilePath</em> and <em>pagePath</em> if\n<em>pagePath</em> is a relative path. The <em>pagePath</em> value (unchanged)\notherwise.\n"
references:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: IViewEngine
  nameWithType: IViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: FindView(ActionContext, String, Boolean)
  nameWithType: IViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: GetView(String, String, Boolean)
  nameWithType: IViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewEngines
  commentId: N:Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewEngines
  nameWithType: Microsoft.AspNetCore.Mvc.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: RazorPageResult
  nameWithType: RazorPageResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
