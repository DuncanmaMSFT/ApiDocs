### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ControllerContext
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerContext
  id: ControllerContext
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.ControllerContext.#ctor
  - Microsoft.AspNetCore.Mvc.ControllerContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  - Microsoft.AspNetCore.Mvc.ControllerContext.ActionDescriptor
  - Microsoft.AspNetCore.Mvc.ControllerContext.ValueProviderFactories
  langs:
  - csharp
  - vb
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerContext
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nThe context associated with the current request for a controller.\n"
  example: []
  syntax:
    content: 'public class ControllerContext : ActionContext'
    content.vb: >-
      Public Class ControllerContext
          Inherits ActionContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionContext
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  - Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  - Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ControllerContext.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerContext.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.ControllerContext
  langs:
  - csharp
  - vb
  name: ControllerContext()
  nameWithType: ControllerContext.ControllerContext()
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext.ControllerContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ControllerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe default constructor is provided for unit test purposes only.\n"
  example: []
  syntax:
    content: public ControllerContext()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext)'
  parent: Microsoft.AspNetCore.Mvc.ControllerContext
  langs:
  - csharp
  - vb
  name: ControllerContext(ActionContext)
  nameWithType: ControllerContext.ControllerContext(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext.ControllerContext(Microsoft.AspNetCore.Mvc.ActionContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ControllerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ControllerContext(ActionContext context)
    content.vb: Public Sub New(context As ActionContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerContext.ActionDescriptor
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerContext.ActionDescriptor
  id: ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.ControllerContext
  langs:
  - csharp
  - vb
  name: ActionDescriptor
  nameWithType: ControllerContext.ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext.ActionDescriptor
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionDescriptor
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref> associated with the current request.\n"
  example: []
  syntax:
    content: public ControllerActionDescriptor ActionDescriptor { get; set; }
    content.vb: Public Property ActionDescriptor As ControllerActionDescriptor
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerContext.ValueProviderFactories
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerContext.ValueProviderFactories
  id: ValueProviderFactories
  parent: Microsoft.AspNetCore.Mvc.ControllerContext
  langs:
  - csharp
  - vb
  name: ValueProviderFactories
  nameWithType: ControllerContext.ValueProviderFactories
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext.ValueProviderFactories
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderFactories
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerContext.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory\" data-throw-if-not-resolved=\"false\"></xref> instances for the current request.\n"
  example: []
  syntax:
    content: public virtual IList<IValueProviderFactory> ValueProviderFactories { get; set; }
    content.vb: Public Overridable Property ValueProviderFactories As IList(Of IValueProviderFactory)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: HttpContext
  nameWithType: ActionContext.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ModelState
  nameWithType: ActionContext.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
- uid: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: RouteData
  nameWithType: ActionContext.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ControllerContext
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext
- uid: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: ControllerActionDescriptor
  nameWithType: ControllerActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProviderFactory
  nameWithType: IValueProviderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IValueProviderFactory>
  nameWithType: IList<IValueProviderFactory>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory>
  nameWithType.vb: IList(Of IValueProviderFactory)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory)
  name.vb: IList(Of IValueProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
