### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  id: ValueProviderResultExtensions
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  langs:
  - csharp
  - vb
  name: ValueProviderResultExtensions
  nameWithType: ValueProviderResultExtensions
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderResultExtensions
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nExtensions methods for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ValueProviderResultExtensions
    content.vb: Public Module ValueProviderResultExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  id: ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  langs:
  - csharp
  - vb
  name: ConvertTo<T>(ValueProviderResult)
  nameWithType: ValueProviderResultExtensions.ConvertTo<T>(ValueProviderResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo<T>(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAttempts to convert the values in <em>result</em> to the specified type.\n"
  example: []
  syntax:
    content: public static T ConvertTo<T>(this ValueProviderResult result)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConvertTo(Of T)(result As ValueProviderResult) As T
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: '{T}'
      description: "\nThe converted value, or the default value of <em>T</em> if the value could not be converted.\n"
  nameWithType.vb: ValueProviderResultExtensions.ConvertTo(Of T)(ValueProviderResult)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Of T)(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)
  name.vb: ConvertTo(Of T)(ValueProviderResult)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  id: ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions
  langs:
  - csharp
  - vb
  name: ConvertTo(ValueProviderResult, Type)
  nameWithType: ValueProviderResultExtensions.ConvertTo(ValueProviderResult, Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/ValueProviderResultExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nAttempts to convert the values in <em>result</em> to the specified type.\n"
  example: []
  syntax:
    content: public static object ConvertTo(this ValueProviderResult result, Type type)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConvertTo(result As ValueProviderResult, type As Type) As Object
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" data-throw-if-not-resolved="false"></xref>.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: System.Object
      description: "\nThe converted value, or the default value of <em>type</em> if the value could not be converted.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ValueProviderResult
  nameWithType: ValueProviderResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
