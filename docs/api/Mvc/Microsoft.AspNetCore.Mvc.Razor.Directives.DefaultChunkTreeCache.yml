### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  id: DefaultChunkTreeCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.#ctor(Microsoft.Extensions.FileProviders.IFileProvider)
  - Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.Dispose
  - Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  langs:
  - csharp
  - vb
  name: DefaultChunkTreeCache
  nameWithType: DefaultChunkTreeCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultChunkTreeCache
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nDefault implementation of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class DefaultChunkTreeCache : IChunkTreeCache, IDisposable'
    content.vb: >-
      Public Class DefaultChunkTreeCache
          Implements IChunkTreeCache, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.#ctor(Microsoft.Extensions.FileProviders.IFileProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.#ctor(Microsoft.Extensions.FileProviders.IFileProvider)
  id: '#ctor(Microsoft.Extensions.FileProviders.IFileProvider)'
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  langs:
  - csharp
  - vb
  name: DefaultChunkTreeCache(IFileProvider)
  nameWithType: DefaultChunkTreeCache.DefaultChunkTreeCache(IFileProvider)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.DefaultChunkTreeCache(Microsoft.Extensions.FileProviders.IFileProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DefaultChunkTreeCache(IFileProvider fileProvider)
    content.vb: Public Sub New(fileProvider As IFileProvider)
    parameters:
    - id: fileProvider
      type: Microsoft.Extensions.FileProviders.IFileProvider
      description: The application's <xref href="Microsoft.Extensions.FileProviders.IFileProvider" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  id: GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  nameWithType: DefaultChunkTreeCache.GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.GetOrAdd(System.String, System.Func<Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetOrAdd
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  example: []
  syntax:
    content: public ChunkTree GetOrAdd(string pagePath, Func<IFileInfo, ChunkTree> getChunkTree)
    content.vb: Public Function GetOrAdd(pagePath As String, getChunkTree As Func(Of IFileInfo, ChunkTree)) As ChunkTree
    parameters:
    - id: pagePath
      type: System.String
    - id: getChunkTree
      type: System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  nameWithType.vb: DefaultChunkTreeCache.GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.GetOrAdd(System.String, System.Func(Of Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree))
  name.vb: GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.Dispose
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DefaultChunkTreeCache.Dispose()
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/DefaultChunkTreeCache.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: IChunkTreeCache
  nameWithType: IChunkTreeCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Directives
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Directives
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
  isExternal: false
  name: DefaultChunkTreeCache
  nameWithType: DefaultChunkTreeCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.DefaultChunkTreeCache
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  isExternal: true
  name: GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  nameWithType: IChunkTreeCache.GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String, System.Func<Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree>)
  nameWithType.vb: IChunkTreeCache.GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
  fullname.vb: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String, System.Func(Of Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree))
  name.vb: GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
    name: GetOrAdd
    nameWithType: IChunkTreeCache.GetOrAdd
    fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
    name: GetOrAdd
    nameWithType: IChunkTreeCache.GetOrAdd
    fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  commentId: T:System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  parent: System
  definition: System.Func`2
  name: Func<IFileInfo, ChunkTree>
  nameWithType: Func<IFileInfo, ChunkTree>
  fullName: System.Func<Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree>
  nameWithType.vb: Func(Of IFileInfo, ChunkTree)
  fullname.vb: System.Func(Of Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  name.vb: Func(Of IFileInfo, ChunkTree)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: true
  name: ChunkTree
  nameWithType: ChunkTree
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
