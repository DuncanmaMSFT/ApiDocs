### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  id: ApplicationModelProviderContext
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ControllerTypes
  - Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.Result
  langs:
  - csharp
  - vb
  name: ApplicationModelProviderContext
  nameWithType: ApplicationModelProviderContext
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApplicationModelProviderContext
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nA context object for <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class ApplicationModelProviderContext
    content.vb: Public Class ApplicationModelProviderContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})
  commentId: M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})'
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  langs:
  - csharp
  - vb
  name: ApplicationModelProviderContext(IEnumerable<TypeInfo>)
  nameWithType: ApplicationModelProviderContext.ApplicationModelProviderContext(IEnumerable<TypeInfo>)
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ApplicationModelProviderContext(System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public ApplicationModelProviderContext(IEnumerable<TypeInfo> controllerTypes)
    content.vb: Public Sub New(controllerTypes As IEnumerable(Of TypeInfo))
    parameters:
    - id: controllerTypes
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  nameWithType.vb: ApplicationModelProviderContext.ApplicationModelProviderContext(IEnumerable(Of TypeInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ApplicationModelProviderContext(System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo))
  name.vb: ApplicationModelProviderContext(IEnumerable(Of TypeInfo))
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ControllerTypes
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ControllerTypes
  id: ControllerTypes
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  langs:
  - csharp
  - vb
  name: ControllerTypes
  nameWithType: ApplicationModelProviderContext.ControllerTypes
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ControllerTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public IEnumerable<TypeInfo> ControllerTypes { get; }
    content.vb: Public ReadOnly Property ControllerTypes As IEnumerable(Of TypeInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.Result
  id: Result
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ApplicationModelProviderContext.Result
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.Result
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Result
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/ApplicationModelProviderContext.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ApplicationModel Result { get; }
    content.vb: Public ReadOnly Property Result As ApplicationModel
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IApplicationModelProvider
  nameWithType: IApplicationModelProvider
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypeInfo>
  nameWithType: IEnumerable<TypeInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  nameWithType.vb: IEnumerable(Of TypeInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  name.vb: IEnumerable(Of TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ApplicationModel
  nameWithType: ApplicationModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
