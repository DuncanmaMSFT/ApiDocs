### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  id: CacheTagKey
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(System.Object)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateHashedKey
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateKey
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GetHashCode
  langs:
  - csharp
  - vb
  name: CacheTagKey
  nameWithType: CacheTagKey
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CacheTagKey
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nAn instance of <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey\" data-throw-if-not-resolved=\"false\"></xref> represents the state of <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\" data-throw-if-not-resolved=\"false\"></xref> keys.\n"
  example: []
  syntax:
    content: 'public class CacheTagKey : IEquatable<CacheTagKey>'
    content.vb: >-
      Public Class CacheTagKey
          Implements IEquatable(Of CacheTagKey)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  id: '#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: CacheTagKey(CacheTagHelper, TagHelperContext)
  nameWithType: CacheTagKey.CacheTagKey(CacheTagHelper, TagHelperContext)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.CacheTagKey(Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nCreates an instance of <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey\" data-throw-if-not-resolved=\"false\"></xref> for a specific <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CacheTagKey(CacheTagHelper tagHelper, TagHelperContext context)
    content.vb: Public Sub New(tagHelper As CacheTagHelper, context As TagHelperContext)
    parameters:
    - id: tagHelper
      type: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
      description: The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper)
  id: '#ctor(Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper)'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: CacheTagKey(DistributedCacheTagHelper)
  nameWithType: CacheTagKey.CacheTagKey(DistributedCacheTagHelper)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.CacheTagKey(Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nCreates an instance of <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey\" data-throw-if-not-resolved=\"false\"></xref> for a specific <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CacheTagKey(DistributedCacheTagHelper tagHelper)
    content.vb: Public Sub New(tagHelper As DistributedCacheTagHelper)
    parameters:
    - id: tagHelper
      type: Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateKey
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateKey
  id: GenerateKey
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: GenerateKey()
  nameWithType: CacheTagKey.GenerateKey()
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateKey()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GenerateKey
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 102
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nCreates a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of the key.\n"
  example: []
  syntax:
    content: public string GenerateKey()
    content.vb: Public Function GenerateKey As String
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> uniquely representing the key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateHashedKey
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateHashedKey
  id: GenerateHashedKey
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: GenerateHashedKey()
  nameWithType: CacheTagKey.GenerateHashedKey()
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GenerateHashedKey()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GenerateHashedKey
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nCreates a hashed value of the key.\n"
  example: []
  syntax:
    content: public string GenerateHashedKey()
    content.vb: Public Function GenerateHashedKey As String
    return:
      type: System.String
      description: A cryptographic hash of the key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CacheTagKey.Equals(Object)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 163
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  id: Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: Equals(CacheTagKey)
  nameWithType: CacheTagKey.Equals(CacheTagKey)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 175
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  example: []
  syntax:
    content: public bool Equals(CacheTagKey other)
    content.vb: Public Function Equals(other As CacheTagKey) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GetHashCode
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CacheTagKey.GetHashCode()
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/CacheTagKey.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  isExternal: false
  name: CacheTagKey
  nameWithType: CacheTagKey
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: CacheTagHelper
  nameWithType: CacheTagHelper
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper
  parent: Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: DistributedCacheTagHelper
  nameWithType: DistributedCacheTagHelper
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<CacheTagKey>
  nameWithType: IEquatable<CacheTagKey>
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey>
  nameWithType.vb: IEquatable(Of CacheTagKey)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  name.vb: IEquatable(Of CacheTagKey)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
    name: CacheTagKey
    nameWithType: CacheTagKey
    fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
    name: CacheTagKey
    nameWithType: CacheTagKey
    fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.TagHelpers
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: true
  name: TagHelperContext
  nameWithType: TagHelperContext
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  parent: System.IEquatable{Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(CacheTagKey)
  nameWithType: IEquatable<CacheTagKey>.Equals(CacheTagKey)
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey>.Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  nameWithType.vb: IEquatable(Of CacheTagKey).Equals(CacheTagKey)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey).Equals(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<CacheTagKey>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
    name: CacheTagKey
    nameWithType: CacheTagKey
    fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of CacheTagKey).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
    name: CacheTagKey
    nameWithType: CacheTagKey
    fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.CacheTagKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
