### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  id: ApiDescriptionProviderContext
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  children:
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Actions
  - Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Results
  langs:
  - csharp
  - vb
  name: ApiDescriptionProviderContext
  nameWithType: ApiDescriptionProviderContext
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApiDescriptionProviderContext
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nA context object for <xref href=\"Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription\" data-throw-if-not-resolved=\"false\"></xref> providers.\n"
  example: []
  syntax:
    content: public class ApiDescriptionProviderContext
    content.vb: Public Class ApiDescriptionProviderContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  commentId: M:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  id: '#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})'
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  langs:
  - csharp
  - vb
  name: ApiDescriptionProviderContext(IReadOnlyList<ActionDescriptor>)
  nameWithType: ApiDescriptionProviderContext.ApiDescriptionProviderContext(IReadOnlyList<ActionDescriptor>)
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.ApiDescriptionProviderContext(System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ApiDescriptionProviderContext(IReadOnlyList<ActionDescriptor> actions)
    content.vb: Public Sub New(actions As IReadOnlyList(Of ActionDescriptor))
    parameters:
    - id: actions
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
      description: The list of actions.
  nameWithType.vb: ApiDescriptionProviderContext.ApiDescriptionProviderContext(IReadOnlyList(Of ActionDescriptor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.ApiDescriptionProviderContext(System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor))
  name.vb: ApiDescriptionProviderContext(IReadOnlyList(Of ActionDescriptor))
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Actions
  commentId: P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Actions
  id: Actions
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: ApiDescriptionProviderContext.Actions
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Actions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Actions
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nThe list of actions.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ActionDescriptor> Actions { get; }
    content.vb: Public ReadOnly Property Actions As IReadOnlyList(Of ActionDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Results
  commentId: P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Results
  id: Results
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: ApiDescriptionProviderContext.Results
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Results
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Results
    path: src/Microsoft.AspNetCore.Mvc.ApiExplorer/ApiDescriptionProviderContext.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.ApiExplorer
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nThe list of resulting <xref href=\"Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<ApiDescription> Results { get; }
    content.vb: Public ReadOnly Property Results As IList(Of ApiDescription)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: ApiDescription
  nameWithType: ApiDescription
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: ApiDescriptionProviderContext
  nameWithType: ApiDescriptionProviderContext
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ActionDescriptor>
  nameWithType: IReadOnlyList<ActionDescriptor>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>
  nameWithType.vb: IReadOnlyList(Of ActionDescriptor)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  name.vb: IReadOnlyList(Of ActionDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApiDescription>
  nameWithType: IList<ApiDescription>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription>
  nameWithType.vb: IList(Of ApiDescription)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription)
  name.vb: IList(Of ApiDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
    name: ApiDescription
    nameWithType: ApiDescription
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
    name: ApiDescription
    nameWithType: ApiDescription
    fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
