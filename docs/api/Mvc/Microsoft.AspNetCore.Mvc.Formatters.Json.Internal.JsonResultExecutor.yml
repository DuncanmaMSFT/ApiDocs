### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  id: JsonResultExecutor
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.#ctor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions},System.Buffers.ArrayPool{System.Char})
  - Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.JsonResult)
  - Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Logger
  - Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Options
  - Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.WriterFactory
  langs:
  - csharp
  - vb
  name: JsonResultExecutor
  nameWithType: JsonResultExecutor
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: JsonResultExecutor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nExecutes a <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> to write to the response.\n"
  example: []
  syntax:
    content: public class JsonResultExecutor
    content.vb: Public Class JsonResultExecutor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.#ctor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions},System.Buffers.ArrayPool{System.Char})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.#ctor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions},System.Buffers.ArrayPool{System.Char})
  id: '#ctor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions},System.Buffers.ArrayPool{System.Char})'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  langs:
  - csharp
  - vb
  name: JsonResultExecutor(IHttpResponseStreamWriterFactory, ILogger<JsonResultExecutor>, IOptions<MvcJsonOptions>, ArrayPool<Char>)
  nameWithType: JsonResultExecutor.JsonResultExecutor(IHttpResponseStreamWriterFactory, ILogger<JsonResultExecutor>, IOptions<MvcJsonOptions>, ArrayPool<Char>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.JsonResultExecutor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.MvcJsonOptions>, System.Buffers.ArrayPool<System.Char>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JsonResultExecutor(IHttpResponseStreamWriterFactory writerFactory, ILogger<JsonResultExecutor> logger, IOptions<MvcJsonOptions> options, ArrayPool<char> charPool)
    content.vb: Public Sub New(writerFactory As IHttpResponseStreamWriterFactory, logger As ILogger(Of JsonResultExecutor), options As IOptions(Of MvcJsonOptions), charPool As ArrayPool(Of Char))
    parameters:
    - id: writerFactory
      type: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory" data-throw-if-not-resolved="false"></xref>.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor}
      description: The <xref href="Microsoft.Extensions.Logging.ILogger%601" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
      description: The <xref href="Microsoft.Extensions.Options.IOptions%601" data-throw-if-not-resolved="false"></xref>.
    - id: charPool
      type: System.Buffers.ArrayPool{System.Char}
      description: The <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> for creating <xref href="char%5b%5d" data-throw-if-not-resolved="false"></xref> buffers.
  nameWithType.vb: JsonResultExecutor.JsonResultExecutor(IHttpResponseStreamWriterFactory, ILogger(Of JsonResultExecutor), IOptions(Of MvcJsonOptions), ArrayPool(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.JsonResultExecutor(Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory, Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.MvcJsonOptions), System.Buffers.ArrayPool(Of System.Char))
  name.vb: JsonResultExecutor(IHttpResponseStreamWriterFactory, ILogger(Of JsonResultExecutor), IOptions(Of MvcJsonOptions), ArrayPool(Of Char))
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Logger
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Logger
  id: Logger
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: JsonResultExecutor.Logger
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Logger
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nGets the <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    content.vb: Protected ReadOnly Property Logger As ILogger
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Options
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Options
  id: Options
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: JsonResultExecutor.Options
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Options
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.MvcJsonOptions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected MvcJsonOptions Options { get; }
    content.vb: Protected ReadOnly Property Options As MvcJsonOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.WriterFactory
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.WriterFactory
  id: WriterFactory
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  langs:
  - csharp
  - vb
  name: WriterFactory
  nameWithType: JsonResultExecutor.WriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.WriterFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriterFactory
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IHttpResponseStreamWriterFactory WriterFactory { get; }
    content.vb: Protected ReadOnly Property WriterFactory As IHttpResponseStreamWriterFactory
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.JsonResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.JsonResult)
  id: ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.JsonResult)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  langs:
  - csharp
  - vb
  name: ExecuteAsync(ActionContext, JsonResult)
  nameWithType: JsonResultExecutor.ExecuteAsync(ActionContext, JsonResult)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.JsonResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExecuteAsync
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Json/Internal/JsonResultExecutor.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Json
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  summary: "\nExecutes the <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> and writes the response.\n"
  example: []
  syntax:
    content: public Task ExecuteAsync(ActionContext context, JsonResult result)
    content.vb: Public Function ExecuteAsync(context As ActionContext, result As JsonResult) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.AspNetCore.Mvc.JsonResult
      description: The <xref href="Microsoft.AspNetCore.Mvc.JsonResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> which will complete when writing has completed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.JsonResult
  commentId: T:Microsoft.AspNetCore.Mvc.JsonResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: JsonResult
  nameWithType: JsonResult
  fullName: Microsoft.AspNetCore.Mvc.JsonResult
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  isExternal: false
  name: JsonResultExecutor
  nameWithType: JsonResultExecutor
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
- uid: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IHttpResponseStreamWriterFactory
  nameWithType: IHttpResponseStreamWriterFactory
  fullName: Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers.ArrayPool`1
  commentId: T:System.Buffers.ArrayPool`1
  isExternal: true
  name: ArrayPool<T>
  nameWithType: ArrayPool<T>
  fullName: System.Buffers.ArrayPool<T>
  nameWithType.vb: ArrayPool(Of T)
  fullname.vb: System.Buffers.ArrayPool(Of T)
  name.vb: ArrayPool(Of T)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: char[]
  commentId: T:char[]
- uid: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<JsonResultExecutor>
  nameWithType: ILogger<JsonResultExecutor>
  fullName: Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor>
  nameWithType.vb: ILogger(Of JsonResultExecutor)
  fullname.vb: Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor)
  name.vb: ILogger(Of JsonResultExecutor)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
    name: JsonResultExecutor
    nameWithType: JsonResultExecutor
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
    name: JsonResultExecutor
    nameWithType: JsonResultExecutor
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonResultExecutor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcJsonOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<MvcJsonOptions>
  nameWithType: IOptions<MvcJsonOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.MvcJsonOptions>
  nameWithType.vb: IOptions(Of MvcJsonOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.MvcJsonOptions)
  name.vb: IOptions(Of MvcJsonOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions
    name: MvcJsonOptions
    nameWithType: MvcJsonOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions
    name: MvcJsonOptions
    nameWithType: MvcJsonOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers.ArrayPool{System.Char}
  commentId: T:System.Buffers.ArrayPool{System.Char}
  parent: System.Buffers
  definition: System.Buffers.ArrayPool`1
  name: ArrayPool<Char>
  nameWithType: ArrayPool<Char>
  fullName: System.Buffers.ArrayPool<System.Char>
  nameWithType.vb: ArrayPool(Of Char)
  fullname.vb: System.Buffers.ArrayPool(Of System.Char)
  name.vb: ArrayPool(Of Char)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: false
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.AspNetCore.Mvc.MvcJsonOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcJsonOptions
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: MvcJsonOptions
  nameWithType: MvcJsonOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcJsonOptions
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
