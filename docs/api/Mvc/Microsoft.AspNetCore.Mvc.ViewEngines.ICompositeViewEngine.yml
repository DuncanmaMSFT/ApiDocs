### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  id: ICompositeViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  children:
  - Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  langs:
  - csharp
  - vb
  name: ICompositeViewEngine
  nameWithType: ICompositeViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ICompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ICompositeViewEngine
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ICompositeViewEngine.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  summary: "\nRepresents an <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine\" data-throw-if-not-resolved=\"false\"></xref> that delegates to one of a collection of view engines.\n"
  example: []
  syntax:
    content: 'public interface ICompositeViewEngine : IViewEngine'
    content.vb: >-
      Public Interface ICompositeViewEngine
          Inherits IViewEngine
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  id: ViewEngines
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  langs:
  - csharp
  - vb
  name: ViewEngines
  nameWithType: ICompositeViewEngine.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ICompositeViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewEngines
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ICompositeViewEngine.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine\" data-throw-if-not-resolved=\"false\"></xref> this instance of <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine\" data-throw-if-not-resolved=\"false\"></xref> delegates\nto.\n"
  example: []
  syntax:
    content: IReadOnlyList<IViewEngine> ViewEngines { get; }
    content.vb: ReadOnly Property ViewEngines As IReadOnlyList(Of IViewEngine)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: IViewEngine
  nameWithType: IViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
- uid: Microsoft.AspNetCore.Mvc.ViewEngines
  commentId: N:Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewEngines
  nameWithType: Microsoft.AspNetCore.Mvc.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: FindView(ActionContext, String, Boolean)
  nameWithType: IViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: GetView(String, String, Boolean)
  nameWithType: IViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: ICompositeViewEngine
  nameWithType: ICompositeViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IViewEngine>
  nameWithType: IReadOnlyList<IViewEngine>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine>
  nameWithType.vb: IReadOnlyList(Of IViewEngine)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine)
  name.vb: IReadOnlyList(Of IViewEngine)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
    name: IViewEngine
    nameWithType: IViewEngine
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
    name: IViewEngine
    nameWithType: IViewEngine
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
