### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  id: ViewDataInfo
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  children:
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Container
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
  langs:
  - csharp
  - vb
  name: ViewDataInfo
  nameWithType: ViewDataInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewDataInfo
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  syntax:
    content: public class ViewDataInfo
    content.vb: Public Class ViewDataInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Object)
  id: '#ctor(System.Object,System.Object)'
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  langs:
  - csharp
  - vb
  name: ViewDataInfo(Object, Object)
  nameWithType: ViewDataInfo.ViewDataInfo(Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.ViewDataInfo(System.Object, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> class with info about a\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" data-throw-if-not-resolved=\"false\"></xref> lookup which has already been evaluated.\n"
  example: []
  syntax:
    content: public ViewDataInfo(object container, object value)
    content.vb: Public Sub New(container As Object, value As Object)
    parameters:
    - id: container
      type: System.Object
    - id: value
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})
  id: '#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})'
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  langs:
  - csharp
  - vb
  name: ViewDataInfo(Object, PropertyInfo, Func<Object>)
  nameWithType: ViewDataInfo.ViewDataInfo(Object, PropertyInfo, Func<Object>)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.ViewDataInfo(System.Object, System.Reflection.PropertyInfo, System.Func<System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> class with info about a\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" data-throw-if-not-resolved=\"false\"></xref> lookup which is evaluated when <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value\" data-throw-if-not-resolved=\"false\"></xref> is read.\n"
  example: []
  syntax:
    content: public ViewDataInfo(object container, PropertyInfo propertyInfo, Func<object> valueAccessor)
    content.vb: Public Sub New(container As Object, propertyInfo As PropertyInfo, valueAccessor As Func(Of Object))
    parameters:
    - id: container
      type: System.Object
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
    - id: valueAccessor
      type: System.Func{System.Object}
  nameWithType.vb: ViewDataInfo.ViewDataInfo(Object, PropertyInfo, Func(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.ViewDataInfo(System.Object, System.Reflection.PropertyInfo, System.Func(Of System.Object))
  name.vb: ViewDataInfo(Object, PropertyInfo, Func(Of Object))
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Container
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Container
  id: Container
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: ViewDataInfo.Container
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Container
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Container
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  syntax:
    content: public object Container { get; }
    content.vb: Public ReadOnly Property Container As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo
  id: PropertyInfo
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  langs:
  - csharp
  - vb
  name: PropertyInfo
  nameWithType: ViewDataInfo.PropertyInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyInfo
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  syntax:
    content: public PropertyInfo PropertyInfo { get; }
    content.vb: Public ReadOnly Property PropertyInfo As PropertyInfo
    parameters: []
    return:
      type: System.Reflection.PropertyInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
  id: Value
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ViewDataInfo.Value
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Value
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataInfo.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  syntax:
    content: public object Value { get; set; }
    content.vb: Public Property Value As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures
  commentId: N:Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewFeatures
  nameWithType: Microsoft.AspNetCore.Mvc.ViewFeatures
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: ViewDataInfo
  nameWithType: ViewDataInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: ViewDataDictionary
  nameWithType: ViewDataDictionary
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  nameWithType.vb: Func(Of Object)
  fullname.vb: System.Func(Of System.Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
