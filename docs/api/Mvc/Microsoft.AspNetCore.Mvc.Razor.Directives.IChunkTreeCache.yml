### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  id: IChunkTreeCache
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives
  children:
  - Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  langs:
  - csharp
  - vb
  name: IChunkTreeCache
  nameWithType: IChunkTreeCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/IChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IChunkTreeCache
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/IChunkTreeCache.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nA cache for parsed <xref href=\"Microsoft.AspNetCore.Razor.Chunks.ChunkTree\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public interface IChunkTreeCache : IDisposable'
    content.vb: >-
      Public Interface IChunkTreeCache
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  id: GetOrAdd(System.String,System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree})
  parent: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  nameWithType: IChunkTreeCache.GetOrAdd(String, Func<IFileInfo, ChunkTree>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String, System.Func<Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/IChunkTreeCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetOrAdd
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/Directives/IChunkTreeCache.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor.Directives
  summary: "\nGet an existing <xref href=\"Microsoft.AspNetCore.Razor.Chunks.ChunkTree\" data-throw-if-not-resolved=\"false\"></xref>, or create and add a new one if it is\nnot available in the cache or is expired.\n"
  remarks: >-
    The resulting <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref> does not contain inherited chunks from _ViewStart or

    default inherited chunks.
  example: []
  syntax:
    content: ChunkTree GetOrAdd(string pagePath, Func<IFileInfo, ChunkTree> getChunkTree)
    content.vb: Function GetOrAdd(pagePath As String, getChunkTree As Func(Of IFileInfo, ChunkTree)) As ChunkTree
    parameters:
    - id: pagePath
      type: System.String
      description: The application relative path of the Razor page.
    - id: getChunkTree
      type: System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
      description: A delegate that creates a new <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" data-throw-if-not-resolved="false"></xref> if a file exists at <em>pagePath</em>,

        <code>null</code> otherwise.
  nameWithType.vb: IChunkTreeCache.GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache.GetOrAdd(System.String, System.Func(Of Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree))
  name.vb: GetOrAdd(String, Func(Of IFileInfo, ChunkTree))
references:
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: true
  name: ChunkTree
  nameWithType: ChunkTree
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
- uid: Microsoft.AspNetCore.Mvc.Razor.Directives
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.Directives
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.Directives
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.Directives
  fullName: Microsoft.AspNetCore.Mvc.Razor.Directives
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  commentId: T:System.Func{Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.AspNetCore.Razor.Chunks.ChunkTree}
  parent: System
  definition: System.Func`2
  name: Func<IFileInfo, ChunkTree>
  nameWithType: Func<IFileInfo, ChunkTree>
  fullName: System.Func<Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree>
  nameWithType.vb: Func(Of IFileInfo, ChunkTree)
  fullname.vb: System.Func(Of Microsoft.Extensions.FileProviders.IFileInfo, Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  name.vb: Func(Of IFileInfo, ChunkTree)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    name: ChunkTree
    nameWithType: ChunkTree
    fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
