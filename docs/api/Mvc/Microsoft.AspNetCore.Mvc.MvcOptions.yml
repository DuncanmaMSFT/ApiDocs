### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.MvcOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcOptions
  id: MvcOptions
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.MvcOptions.#ctor
  - Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles
  - Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
  - Microsoft.AspNetCore.Mvc.MvcOptions.Filters
  - Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings
  - Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters
  - Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors
  - Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders
  - Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider
  - Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders
  - Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders
  - Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters
  - Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
  - Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
  - Microsoft.AspNetCore.Mvc.MvcOptions.SslPort
  - Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories
  langs:
  - csharp
  - vb
  name: MvcOptions
  nameWithType: MvcOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcOptions
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nProvides programmatic configuration for the MVC framework.\n"
  example: []
  syntax:
    content: public class MvcOptions
    content.vb: Public Class MvcOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.MvcOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: MvcOptions()
  nameWithType: MvcOptions.MvcOptions()
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.MvcOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  syntax:
    content: public MvcOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles
  id: CacheProfiles
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: CacheProfiles
  nameWithType: MvcOptions.CacheProfiles
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CacheProfiles
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a Dictionary of CacheProfile Names, <xref href=\"Microsoft.AspNetCore.Mvc.CacheProfile\" data-throw-if-not-resolved=\"false\"></xref> which are pre-defined settings for\nresponse caching.\n"
  example: []
  syntax:
    content: public IDictionary<string, CacheProfile> CacheProfiles { get; }
    content.vb: Public ReadOnly Property CacheProfiles As IDictionary(Of String, CacheProfile)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Mvc.CacheProfile}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
  id: Conventions
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: Conventions
  nameWithType: MvcOptions.Conventions
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Conventions
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention\" data-throw-if-not-resolved=\"false\"></xref> instances that will be applied to\nthe <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel\" data-throw-if-not-resolved=\"false\"></xref> when discovering actions.\n"
  example: []
  syntax:
    content: public IList<IApplicationModelConvention> Conventions { get; }
    content.vb: Public ReadOnly Property Conventions As IList(Of IApplicationModelConvention)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.Filters
  id: Filters
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: MvcOptions.Filters
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.Filters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filters
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a collection of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata\" data-throw-if-not-resolved=\"false\"></xref> which are used to construct filters that\napply to all actions.\n"
  example: []
  syntax:
    content: public FilterCollection Filters { get; }
    content.vb: Public ReadOnly Property Filters As FilterCollection
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.FilterCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings
  id: FormatterMappings
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: FormatterMappings
  nameWithType: MvcOptions.FormatterMappings
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FormatterMappings
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUsed to specify mapping between the URL Format and corresponding media type.\n"
  example: []
  syntax:
    content: public FormatterMappings FormatterMappings { get; }
    content.vb: Public ReadOnly Property FormatterMappings As FormatterMappings
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters
  id: InputFormatters
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: InputFormatters
  nameWithType: MvcOptions.InputFormatters
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InputFormatters
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter\" data-throw-if-not-resolved=\"false\"></xref>s that are used by this application.\n"
  example: []
  syntax:
    content: public FormatterCollection<IInputFormatter> InputFormatters { get; }
    content.vb: Public ReadOnly Property InputFormatters As FormatterCollection(Of IInputFormatter)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors
  id: MaxModelValidationErrors
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: MaxModelValidationErrors
  nameWithType: MvcOptions.MaxModelValidationErrors
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MaxModelValidationErrors
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the maximum number of validation errors that are allowed by this application before further\nerrors are ignored.\n"
  example: []
  syntax:
    content: public int MaxModelValidationErrors { get; set; }
    content.vb: Public Property MaxModelValidationErrors As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders
  id: ModelBinderProviders
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ModelBinderProviders
  nameWithType: MvcOptions.ModelBinderProviders
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBinderProviders
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider\" data-throw-if-not-resolved=\"false\"></xref>s used by this application.\n"
  example: []
  syntax:
    content: public IList<IModelBinderProvider> ModelBinderProviders { get; }
    content.vb: Public ReadOnly Property ModelBinderProviders As IList(Of IModelBinderProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider
  id: ModelBindingMessageProvider
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ModelBindingMessageProvider
  nameWithType: MvcOptions.ModelBindingMessageProvider
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBindingMessageProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the default <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider\" data-throw-if-not-resolved=\"false\"></xref>. Changes here are copied to the\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider\" data-throw-if-not-resolved=\"false\"></xref> property of all <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>\ninstances unless overridden in a custom <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ModelBindingMessageProvider ModelBindingMessageProvider { get; }
    content.vb: Public ReadOnly Property ModelBindingMessageProvider As ModelBindingMessageProvider
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders
  id: ModelMetadataDetailsProviders
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ModelMetadataDetailsProviders
  nameWithType: MvcOptions.ModelMetadataDetailsProviders
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelMetadataDetailsProviders
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider\" data-throw-if-not-resolved=\"false\"></xref> instances that will be used to\ncreate <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  remarks: "\nA provider should implement one or more of the following interfaces, depending on what\nkind of details are provided:\n<ul>\n<li><xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref></li>\n<li><xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref></li>\n<li><xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref></li>\n</ul>\n"
  example: []
  syntax:
    content: public IList<IMetadataDetailsProvider> ModelMetadataDetailsProviders { get; }
    content.vb: Public ReadOnly Property ModelMetadataDetailsProviders As IList(Of IMetadataDetailsProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders
  id: ModelValidatorProviders
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ModelValidatorProviders
  nameWithType: MvcOptions.ModelValidatorProviders
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelValidatorProviders
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider\" data-throw-if-not-resolved=\"false\"></xref>s used by this application.\n"
  example: []
  syntax:
    content: public IList<IModelValidatorProvider> ModelValidatorProviders { get; }
    content.vb: Public ReadOnly Property ModelValidatorProviders As IList(Of IModelValidatorProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters
  id: OutputFormatters
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: OutputFormatters
  nameWithType: MvcOptions.OutputFormatters
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OutputFormatters
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter\" data-throw-if-not-resolved=\"false\"></xref>s that are used by this application.\n"
  example: []
  syntax:
    content: public FormatterCollection<IOutputFormatter> OutputFormatters { get; }
    content.vb: Public ReadOnly Property OutputFormatters As FormatterCollection(Of IOutputFormatter)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
  id: RespectBrowserAcceptHeader
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: RespectBrowserAcceptHeader
  nameWithType: MvcOptions.RespectBrowserAcceptHeader
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RespectBrowserAcceptHeader
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the flag which causes content negotiation to ignore Accept header\nwhen it contains the media type */*. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> by default.\n"
  example: []
  syntax:
    content: public bool RespectBrowserAcceptHeader { get; set; }
    content.vb: Public Property RespectBrowserAcceptHeader As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
  id: ReturnHttpNotAcceptable
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ReturnHttpNotAcceptable
  nameWithType: MvcOptions.ReturnHttpNotAcceptable
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReturnHttpNotAcceptable
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the flag which decides whether an HTTP 406 Not Acceptable response\nwill be returned if no formatter has been selected to format the response.\n<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> by default.\n"
  example: []
  syntax:
    content: public bool ReturnHttpNotAcceptable { get; set; }
    content.vb: Public Property ReturnHttpNotAcceptable As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories
  id: ValueProviderFactories
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: ValueProviderFactories
  nameWithType: MvcOptions.ValueProviderFactories
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderFactories
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets a list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory\" data-throw-if-not-resolved=\"false\"></xref> used by this application.\n"
  example: []
  syntax:
    content: public IList<IValueProviderFactory> ValueProviderFactories { get; }
    content.vb: Public ReadOnly Property ValueProviderFactories As IList(Of IValueProviderFactory)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.SslPort
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.SslPort
  id: SslPort
  parent: Microsoft.AspNetCore.Mvc.MvcOptions
  langs:
  - csharp
  - vb
  name: SslPort
  nameWithType: MvcOptions.SslPort
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions.SslPort
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SslPort
    path: src/Microsoft.AspNetCore.Mvc.Core/MvcOptions.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the SSL port that is used by this application when <xref href=\"Microsoft.AspNetCore.Mvc.RequireHttpsAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nis used. If not set the port won't be specified in the secured URL e.g. https://localhost/path.\n"
  example: []
  syntax:
    content: public int ? SslPort { get; set; }
    content.vb: Public Property SslPort As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.CacheProfile
  commentId: T:Microsoft.AspNetCore.Mvc.CacheProfile
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CacheProfile
  nameWithType: CacheProfile
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Mvc.CacheProfile}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Mvc.CacheProfile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, CacheProfile>
  nameWithType: IDictionary<String, CacheProfile>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.AspNetCore.Mvc.CacheProfile>
  nameWithType.vb: IDictionary(Of String, CacheProfile)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.AspNetCore.Mvc.CacheProfile)
  name.vb: IDictionary(Of String, CacheProfile)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.CacheProfile
    name: CacheProfile
    nameWithType: CacheProfile
    fullName: Microsoft.AspNetCore.Mvc.CacheProfile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.CacheProfile
    name: CacheProfile
    nameWithType: CacheProfile
    fullName: Microsoft.AspNetCore.Mvc.CacheProfile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  isExternal: false
  name: IApplicationModelConvention
  nameWithType: IApplicationModelConvention
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: ApplicationModel
  nameWithType: ApplicationModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IApplicationModelConvention>
  nameWithType: IList<IApplicationModelConvention>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention>
  nameWithType.vb: IList(Of IApplicationModelConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention)
  name.vb: IList(Of IApplicationModelConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
    name: IApplicationModelConvention
    nameWithType: IApplicationModelConvention
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
    name: IApplicationModelConvention
    nameWithType: IApplicationModelConvention
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterCollection
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterCollection
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterCollection
  nameWithType: FilterCollection
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterCollection
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: FormatterMappings
  nameWithType: FormatterMappings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: IInputFormatter
  nameWithType: IInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter}
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter}
  parent: Microsoft.AspNetCore.Mvc.Formatters
  definition: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
  name: FormatterCollection<IInputFormatter>
  nameWithType: FormatterCollection<IInputFormatter>
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter>
  nameWithType.vb: FormatterCollection(Of IInputFormatter)
  fullname.vb: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection(Of Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter)
  name.vb: FormatterCollection(Of IInputFormatter)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
    name: IInputFormatter
    nameWithType: IInputFormatter
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
    name: IInputFormatter
    nameWithType: IInputFormatter
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
  isExternal: false
  name: FormatterCollection<TFormatter>
  nameWithType: FormatterCollection<TFormatter>
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>
  nameWithType.vb: FormatterCollection(Of TFormatter)
  fullname.vb: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection(Of TFormatter)
  name.vb: FormatterCollection(Of TFormatter)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormatter
    nameWithType: TFormatter
    fullName: TFormatter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormatter
    nameWithType: TFormatter
    fullName: TFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelBinderProvider
  nameWithType: IModelBinderProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModelBinderProvider>
  nameWithType: IList<IModelBinderProvider>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider>
  nameWithType.vb: IList(Of IModelBinderProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider)
  name.vb: IList(Of IModelBinderProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
    name: IModelBinderProvider
    nameWithType: IModelBinderProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
    name: IModelBinderProvider
    nameWithType: IModelBinderProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: IModelBindingMessageProvider
  nameWithType: IModelBindingMessageProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  isExternal: false
  name: ModelBindingMessageProvider
  nameWithType: ModelMetadata.ModelBindingMessageProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: IBindingMetadataProvider
  nameWithType: IBindingMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: ModelBindingMessageProvider
  nameWithType: ModelBindingMessageProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: IMetadataDetailsProvider
  nameWithType: IMetadataDetailsProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: IDisplayMetadataProvider
  nameWithType: IDisplayMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
  isExternal: false
  name: IValidationMetadataProvider
  nameWithType: IValidationMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IMetadataDetailsProvider>
  nameWithType: IList<IMetadataDetailsProvider>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider>
  nameWithType.vb: IList(Of IMetadataDetailsProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider)
  name.vb: IList(Of IMetadataDetailsProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
    name: IMetadataDetailsProvider
    nameWithType: IMetadataDetailsProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
    name: IMetadataDetailsProvider
    nameWithType: IMetadataDetailsProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IModelValidatorProvider
  nameWithType: IModelValidatorProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModelValidatorProvider>
  nameWithType: IList<IModelValidatorProvider>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider>
  nameWithType.vb: IList(Of IModelValidatorProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider)
  name.vb: IList(Of IModelValidatorProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
    name: IModelValidatorProvider
    nameWithType: IModelValidatorProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
    name: IModelValidatorProvider
    nameWithType: IModelValidatorProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: IOutputFormatter
  nameWithType: IOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter}
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter}
  parent: Microsoft.AspNetCore.Mvc.Formatters
  definition: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
  name: FormatterCollection<IOutputFormatter>
  nameWithType: FormatterCollection<IOutputFormatter>
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter>
  nameWithType.vb: FormatterCollection(Of IOutputFormatter)
  fullname.vb: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection(Of Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter)
  name.vb: FormatterCollection(Of IOutputFormatter)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1
    name: FormatterCollection
    nameWithType: FormatterCollection
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
    name: IOutputFormatter
    nameWithType: IOutputFormatter
    fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProviderFactory
  nameWithType: IValueProviderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IValueProviderFactory>
  nameWithType: IList<IValueProviderFactory>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory>
  nameWithType.vb: IList(Of IValueProviderFactory)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory)
  name.vb: IList(Of IValueProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
    name: IValueProviderFactory
    nameWithType: IValueProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.RequireHttpsAttribute
  commentId: T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute
  isExternal: false
  name: RequireHttpsAttribute
  nameWithType: RequireHttpsAttribute
  fullName: Microsoft.AspNetCore.Mvc.RequireHttpsAttribute
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
