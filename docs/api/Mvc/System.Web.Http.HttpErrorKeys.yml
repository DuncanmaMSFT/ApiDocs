### YamlMime:ManagedReference
items:
- uid: System.Web.Http.HttpErrorKeys
  commentId: T:System.Web.Http.HttpErrorKeys
  id: HttpErrorKeys
  parent: System.Web.Http
  children:
  - System.Web.Http.HttpErrorKeys.ErrorCodeKey
  - System.Web.Http.HttpErrorKeys.ExceptionMessageKey
  - System.Web.Http.HttpErrorKeys.ExceptionTypeKey
  - System.Web.Http.HttpErrorKeys.InnerExceptionKey
  - System.Web.Http.HttpErrorKeys.MessageDetailKey
  - System.Web.Http.HttpErrorKeys.MessageKey
  - System.Web.Http.HttpErrorKeys.MessageLanguageKey
  - System.Web.Http.HttpErrorKeys.ModelStateKey
  - System.Web.Http.HttpErrorKeys.StackTraceKey
  langs:
  - csharp
  - vb
  name: HttpErrorKeys
  nameWithType: HttpErrorKeys
  fullName: System.Web.Http.HttpErrorKeys
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpErrorKeys
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides keys to look up error information stored in the <xref href=\"System.Web.Http.HttpError\" data-throw-if-not-resolved=\"false\"></xref> dictionary.\n"
  example: []
  syntax:
    content: public static class HttpErrorKeys
    content.vb: Public Module HttpErrorKeys
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Web.Http.HttpErrorKeys.MessageKey
  commentId: F:System.Web.Http.HttpErrorKeys.MessageKey
  id: MessageKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: MessageKey
  nameWithType: HttpErrorKeys.MessageKey
  fullName: System.Web.Http.HttpErrorKeys.MessageKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MessageKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the Message.\n"
  example: []
  syntax:
    content: public static readonly string MessageKey
    content.vb: Public Shared ReadOnly MessageKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.MessageDetailKey
  commentId: F:System.Web.Http.HttpErrorKeys.MessageDetailKey
  id: MessageDetailKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: MessageDetailKey
  nameWithType: HttpErrorKeys.MessageDetailKey
  fullName: System.Web.Http.HttpErrorKeys.MessageDetailKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MessageDetailKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the MessageDetail.\n"
  example: []
  syntax:
    content: public static readonly string MessageDetailKey
    content.vb: Public Shared ReadOnly MessageDetailKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.ModelStateKey
  commentId: F:System.Web.Http.HttpErrorKeys.ModelStateKey
  id: ModelStateKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: ModelStateKey
  nameWithType: HttpErrorKeys.ModelStateKey
  fullName: System.Web.Http.HttpErrorKeys.ModelStateKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelStateKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the ModelState.\n"
  example: []
  syntax:
    content: public static readonly string ModelStateKey
    content.vb: Public Shared ReadOnly ModelStateKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.ExceptionMessageKey
  commentId: F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey
  id: ExceptionMessageKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: ExceptionMessageKey
  nameWithType: HttpErrorKeys.ExceptionMessageKey
  fullName: System.Web.Http.HttpErrorKeys.ExceptionMessageKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExceptionMessageKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the ExceptionMessage.\n"
  example: []
  syntax:
    content: public static readonly string ExceptionMessageKey
    content.vb: Public Shared ReadOnly ExceptionMessageKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.ExceptionTypeKey
  commentId: F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey
  id: ExceptionTypeKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: ExceptionTypeKey
  nameWithType: HttpErrorKeys.ExceptionTypeKey
  fullName: System.Web.Http.HttpErrorKeys.ExceptionTypeKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExceptionTypeKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the ExceptionType.\n"
  example: []
  syntax:
    content: public static readonly string ExceptionTypeKey
    content.vb: Public Shared ReadOnly ExceptionTypeKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.StackTraceKey
  commentId: F:System.Web.Http.HttpErrorKeys.StackTraceKey
  id: StackTraceKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: StackTraceKey
  nameWithType: HttpErrorKeys.StackTraceKey
  fullName: System.Web.Http.HttpErrorKeys.StackTraceKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StackTraceKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the StackTrace.\n"
  example: []
  syntax:
    content: public static readonly string StackTraceKey
    content.vb: Public Shared ReadOnly StackTraceKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.InnerExceptionKey
  commentId: F:System.Web.Http.HttpErrorKeys.InnerExceptionKey
  id: InnerExceptionKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: InnerExceptionKey
  nameWithType: HttpErrorKeys.InnerExceptionKey
  fullName: System.Web.Http.HttpErrorKeys.InnerExceptionKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InnerExceptionKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the InnerException.\n"
  example: []
  syntax:
    content: public static readonly string InnerExceptionKey
    content.vb: Public Shared ReadOnly InnerExceptionKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.MessageLanguageKey
  commentId: F:System.Web.Http.HttpErrorKeys.MessageLanguageKey
  id: MessageLanguageKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: MessageLanguageKey
  nameWithType: HttpErrorKeys.MessageLanguageKey
  fullName: System.Web.Http.HttpErrorKeys.MessageLanguageKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MessageLanguageKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the MessageLanguage.\n"
  example: []
  syntax:
    content: public static readonly string MessageLanguageKey
    content.vb: Public Shared ReadOnly MessageLanguageKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Web.Http.HttpErrorKeys.ErrorCodeKey
  commentId: F:System.Web.Http.HttpErrorKeys.ErrorCodeKey
  id: ErrorCodeKey
  parent: System.Web.Http.HttpErrorKeys
  langs:
  - csharp
  - vb
  name: ErrorCodeKey
  nameWithType: HttpErrorKeys.ErrorCodeKey
  fullName: System.Web.Http.HttpErrorKeys.ErrorCodeKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ErrorCodeKey
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/HttpErrorKeys.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nProvides a key for the ErrorCode.\n"
  example: []
  syntax:
    content: public static readonly string ErrorCodeKey
    content.vb: Public Shared ReadOnly ErrorCodeKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Web.Http.HttpError
  commentId: T:System.Web.Http.HttpError
  parent: System.Web.Http
  isExternal: false
  name: HttpError
  nameWithType: HttpError
  fullName: System.Web.Http.HttpError
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
