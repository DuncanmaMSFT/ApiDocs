### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  id: ModelBindingResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Failed
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.GetHashCode
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Success(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ToString
  langs:
  - csharp
  - vb
  name: ModelBindingResult
  nameWithType: ModelBindingResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBindingResult
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nContains the result of model binding.\n"
  example: []
  syntax:
    content: 'public struct ModelBindingResult : IEquatable<ModelBindingResult>'
    content.vb: >-
      Public Structure ModelBindingResult
          Implements IEquatable(Of ModelBindingResult)
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Failed
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Failed
  id: Failed
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Failed()
  nameWithType: ModelBindingResult.Failed()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Failed()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Failed
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult\" data-throw-if-not-resolved=\"false\"></xref> representing a failed model binding operation.\n"
  example: []
  syntax:
    content: public static ModelBindingResult Failed()
    content.vb: Public Shared Function Failed As ModelBindingResult
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref> representing a failed model binding operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Success(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Success(System.Object)
  id: Success(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Success(Object)
  nameWithType: ModelBindingResult.Success(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Success(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Success
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult\" data-throw-if-not-resolved=\"false\"></xref> representing a successful model binding operation.\n"
  example: []
  syntax:
    content: public static ModelBindingResult Success(object model)
    content.vb: Public Shared Function Success(model As Object) As ModelBindingResult
    parameters:
    - id: model
      type: System.Object
      description: The model value. May be <code>null.</code>
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref> representing a successful model bind.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
  id: Model
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: ModelBindingResult.Model
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Model
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the model associated with this context.\n"
  example: []
  syntax:
    content: public object Model { get; }
    content.vb: Public ReadOnly Property Model As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet
  id: IsModelSet
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: IsModelSet
  nameWithType: ModelBindingResult.IsModelSet
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsModelSet
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\n<p>\nGets a value indicating whether or not the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model\" data-throw-if-not-resolved=\"false\"></xref> value has been set.\n</p>\n<p>\nThis property can be used to distinguish between a model binder which does not find a value and\nthe case where a model binder sets the <code>null</code> value.\n</p>\n"
  example: []
  syntax:
    content: public bool IsModelSet { get; }
    content.vb: Public ReadOnly Property IsModelSet As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ModelBindingResult.Equals(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.GetHashCode
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ModelBindingResult.GetHashCode()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  id: Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Equals(ModelBindingResult)
  nameWithType: ModelBindingResult.Equals(ModelBindingResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Equals
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public bool Equals(ModelBindingResult other)
    content.vb: Public Function Equals(other As ModelBindingResult) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ToString
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModelBindingResult.ToString()
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ToString
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  id: op_Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Equality(ModelBindingResult, ModelBindingResult)
  nameWithType: ModelBindingResult.Equality(ModelBindingResult, ModelBindingResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCompares <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult\" data-throw-if-not-resolved=\"false\"></xref> objects for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(ModelBindingResult x, ModelBindingResult y)
    content.vb: Public Shared Operator =(x As ModelBindingResult, y As ModelBindingResult) As Boolean
    parameters:
    - id: x
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref>.
    - id: y
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the objects are equal, otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  id: op_Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  langs:
  - csharp
  - vb
  name: Inequality(ModelBindingResult, ModelBindingResult)
  nameWithType: ModelBindingResult.Inequality(ModelBindingResult, ModelBindingResult)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Inequality(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ModelBindingResult.cs
    startLine: 116
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCompares <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult\" data-throw-if-not-resolved=\"false\"></xref> objects for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(ModelBindingResult x, ModelBindingResult y)
    content.vb: Public Shared Operator <>(x As ModelBindingResult, y As ModelBindingResult) As Boolean
    parameters:
    - id: x
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref>.
    - id: y
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the objects are not equal, otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ModelBindingResult>
  nameWithType: IEquatable<ModelBindingResult>
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult>
  nameWithType.vb: IEquatable(Of ModelBindingResult)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  name.vb: IEquatable(Of ModelBindingResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
    name: ModelBindingResult
    nameWithType: ModelBindingResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
    name: ModelBindingResult
    nameWithType: ModelBindingResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelBindingResult
  nameWithType: ModelBindingResult
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  parent: System.IEquatable{Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ModelBindingResult)
  nameWithType: IEquatable<ModelBindingResult>.Equals(ModelBindingResult)
  fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult>.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  nameWithType.vb: IEquatable(Of ModelBindingResult).Equals(ModelBindingResult)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult).Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ModelBindingResult>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
    name: ModelBindingResult
    nameWithType: ModelBindingResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ModelBindingResult).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
    name: ModelBindingResult
    nameWithType: ModelBindingResult
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
