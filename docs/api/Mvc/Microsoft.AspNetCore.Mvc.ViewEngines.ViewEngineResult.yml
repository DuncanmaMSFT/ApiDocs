### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  id: ViewEngineResult
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  children:
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Found(System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.View
  - Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.ViewName
  langs:
  - csharp
  - vb
  name: ViewEngineResult
  nameWithType: ViewEngineResult
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewEngineResult
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public class ViewEngineResult
    content.vb: Public Class ViewEngineResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
  id: SearchedLocations
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: SearchedLocations
  nameWithType: ViewEngineResult.SearchedLocations
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SearchedLocations
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public IEnumerable<string> SearchedLocations { get; }
    content.vb: Public ReadOnly Property SearchedLocations As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.View
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.View
  id: View
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: View
  nameWithType: ViewEngineResult.View
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.View
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: View
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public IView View { get; }
    content.vb: Public ReadOnly Property View As IView
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.IView
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.ViewName
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.ViewName
  id: ViewName
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: ViewName
  nameWithType: ViewEngineResult.ViewName
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.ViewName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewName
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public string ViewName { get; }
    content.vb: Public ReadOnly Property ViewName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
  id: Success
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: ViewEngineResult.Success
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Success
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public bool Success { get; }
    content.vb: Public ReadOnly Property Success As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: NotFound(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: NotFound(String, IEnumerable<String>)
  nameWithType: ViewEngineResult.NotFound(String, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NotFound
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public static ViewEngineResult NotFound(string viewName, IEnumerable<string> searchedLocations)
    content.vb: Public Shared Function NotFound(viewName As String, searchedLocations As IEnumerable(Of String)) As ViewEngineResult
    parameters:
    - id: viewName
      type: System.String
    - id: searchedLocations
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  nameWithType.vb: ViewEngineResult.NotFound(String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: NotFound(String, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Found(System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Found(System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)
  id: Found(System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: Found(String, IView)
  nameWithType: ViewEngineResult.Found(String, IView)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Found(System.String, Microsoft.AspNetCore.Mvc.ViewEngines.IView)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Found
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  syntax:
    content: public static ViewEngineResult Found(string viewName, IView view)
    content.vb: Public Shared Function Found(viewName As String, view As IView) As ViewEngineResult
    parameters:
    - id: viewName
      type: System.String
    - id: view
      type: Microsoft.AspNetCore.Mvc.ViewEngines.IView
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable{System.String})
  id: EnsureSuccessful(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  langs:
  - csharp
  - vb
  name: EnsureSuccessful(IEnumerable<String>)
  nameWithType: ViewEngineResult.EnsureSuccessful(IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: EnsureSuccessful
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewEngines/ViewEngineResult.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewEngines
  summary: "\nEnsure this <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult\" data-throw-if-not-resolved=\"false\"></xref> was successful.\n"
  example: []
  syntax:
    content: public ViewEngineResult EnsureSuccessful(IEnumerable<string> originalLocations)
    content.vb: Public Function EnsureSuccessful(originalLocations As IEnumerable(Of String)) As ViewEngineResult
    parameters:
    - id: originalLocations
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nAdditional <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations\" data-throw-if-not-resolved=\"false\"></xref> to include in the thrown <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>\nif <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success\" data-throw-if-not-resolved=\"false\"></xref> is <code>false</code>.\n"
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
      description: This <xref href="Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult" data-throw-if-not-resolved="false"></xref> if <xref href="Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success" data-throw-if-not-resolved="false"></xref> is <code>true</code>.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThrown if <xref href=\"Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success\" data-throw-if-not-resolved=\"false\"></xref> is <code>false</code>.\n"
  nameWithType.vb: ViewEngineResult.EnsureSuccessful(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: EnsureSuccessful(IEnumerable(Of String))
references:
- uid: Microsoft.AspNetCore.Mvc.ViewEngines
  commentId: N:Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewEngines
  nameWithType: Microsoft.AspNetCore.Mvc.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IView
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.IView
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: IView
  nameWithType: IView
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IView
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: ViewEngineResult
  nameWithType: ViewEngineResult
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
  commentId: P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success
