### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator
  id: ViewDataEvaluator
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  children:
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)
  - Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: ViewDataEvaluator
  nameWithType: ViewDataEvaluator
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewDataEvaluator
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  syntax:
    content: public static class ViewDataEvaluator
    content.vb: Public Module ViewDataEvaluator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)
  id: Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator
  langs:
  - csharp
  - vb
  name: Eval(ViewDataDictionary, String)
  nameWithType: ViewDataEvaluator.Eval(ViewDataDictionary, String)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Eval
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nGets <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> for named <em>expression</em> in given\n<em>viewData</em>.\n"
  example: []
  syntax:
    content: public static ViewDataInfo Eval(ViewDataDictionary viewData, string expression)
    content.vb: Public Shared Function Eval(viewData As ViewDataDictionary, expression As String) As ViewDataInfo
    parameters:
    - id: viewData
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" data-throw-if-not-resolved=\"false\"></xref> that may contain the <em>expression</em> value.\n"
    - id: expression
      type: System.String
      description: Expression name, relative to <code>viewData.Model</code>.
    return:
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
      description: "\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> for named <em>expression</em> in given <em>viewData</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator
  langs:
  - csharp
  - vb
  name: Eval(Object, String)
  nameWithType: ViewDataEvaluator.Eval(Object, String)
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Eval
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewFeatures/ViewDataEvaluator.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewFeatures
  summary: "\nGets <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> for named <em>expression</em> in given\n<em>indexableObject</em>.\n"
  example: []
  syntax:
    content: public static ViewDataInfo Eval(object indexableObject, string expression)
    content.vb: Public Shared Function Eval(indexableObject As Object, expression As String) As ViewDataInfo
    parameters:
    - id: indexableObject
      type: System.Object
      description: "\nThe <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that may contain the <em>expression</em> value.\n"
    - id: expression
      type: System.String
      description: Expression name, relative to <em>indexableObject</em>.
    return:
      type: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
      description: "\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo\" data-throw-if-not-resolved=\"false\"></xref> for named <em>expression</em> in given\n<em>indexableObject</em>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures
  commentId: N:Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewFeatures
  nameWithType: Microsoft.AspNetCore.Mvc.ViewFeatures
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: ViewDataInfo
  nameWithType: ViewDataInfo
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  parent: Microsoft.AspNetCore.Mvc.ViewFeatures
  isExternal: false
  name: ViewDataDictionary
  nameWithType: ViewDataDictionary
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
