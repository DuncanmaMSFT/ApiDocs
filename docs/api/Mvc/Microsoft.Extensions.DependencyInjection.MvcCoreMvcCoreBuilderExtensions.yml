### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  id: MvcCoreMvcCoreBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Reflection.Assembly)
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})
  - Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})
  langs:
  - csharp
  - vb
  name: MvcCoreMvcCoreBuilderExtensions
  nameWithType: MvcCoreMvcCoreBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcCoreMvcCoreBuilderExtensions
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static class MvcCoreMvcCoreBuilderExtensions
    content.vb: Public Module MvcCoreMvcCoreBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})
  id: AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddMvcOptions(IMvcCoreBuilder, Action<MvcOptions>)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(IMvcCoreBuilder, Action<MvcOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Mvc.MvcOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddMvcOptions
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nRegisters an action to configure <xref href=\"Microsoft.AspNetCore.Mvc.MvcOptions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder AddMvcOptions(this IMvcCoreBuilder builder, Action<MvcOptions> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMvcOptions(builder As IMvcCoreBuilder, setupAction As Action(Of MvcOptions)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Mvc.MvcOptions}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(IMvcCoreBuilder, Action(Of MvcOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Mvc.MvcOptions))
  name.vb: AddMvcOptions(IMvcCoreBuilder, Action(Of MvcOptions))
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddFormatterMappings(IMvcCoreBuilder)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddFormatterMappings
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddFormatterMappings(this IMvcCoreBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFormatterMappings(builder As IMvcCoreBuilder) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})
  id: AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddFormatterMappings(IMvcCoreBuilder, Action<FormatterMappings>)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(IMvcCoreBuilder, Action<FormatterMappings>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddFormatterMappings
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddFormatterMappings(this IMvcCoreBuilder builder, Action<FormatterMappings> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFormatterMappings(builder As IMvcCoreBuilder, setupAction As Action(Of FormatterMappings)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings}
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  nameWithType.vb: MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(IMvcCoreBuilder, Action(Of FormatterMappings))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings))
  name.vb: AddFormatterMappings(IMvcCoreBuilder, Action(Of FormatterMappings))
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddAuthorization(IMvcCoreBuilder)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddAuthorization(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddAuthorization
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddAuthorization(this IMvcCoreBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAuthorization(builder As IMvcCoreBuilder) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  id: AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddAuthorization(IMvcCoreBuilder, Action<AuthorizationOptions>)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddAuthorization(IMvcCoreBuilder, Action<AuthorizationOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Authorization.AuthorizationOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddAuthorization
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IMvcCoreBuilder AddAuthorization(this IMvcCoreBuilder builder, Action<AuthorizationOptions> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAuthorization(builder As IMvcCoreBuilder, setupAction As Action(Of AuthorizationOptions)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  nameWithType.vb: MvcCoreMvcCoreBuilderExtensions.AddAuthorization(IMvcCoreBuilder, Action(Of AuthorizationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationOptions))
  name.vb: AddAuthorization(IMvcCoreBuilder, Action(Of AuthorizationOptions))
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  id: AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddControllersAsServices(IMvcCoreBuilder)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(IMvcCoreBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddControllersAsServices
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nRegisters discovered controllers as services in the <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder AddControllersAsServices(this IMvcCoreBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddControllersAsServices(builder As IMvcCoreBuilder) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Reflection.Assembly)
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Reflection.Assembly)
  id: AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApplicationPart(IMvcCoreBuilder, Assembly)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(IMvcCoreBuilder, Assembly)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AddApplicationPart
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds an <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart\" data-throw-if-not-resolved=\"false\"></xref> to the list of <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts\" data-throw-if-not-resolved=\"false\"></xref> on the\n<xref href=\"Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder AddApplicationPart(this IMvcCoreBuilder builder, Assembly assembly)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApplicationPart(builder As IMvcCoreBuilder, assembly As Assembly) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: assembly
      type: System.Reflection.Assembly
      description: The <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref> of the <xref href="Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})
  commentId: M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})
  id: ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions
  langs:
  - csharp
  - vb
  name: ConfigureApplicationPartManager(IMvcCoreBuilder, Action<ApplicationPartManager>)
  nameWithType: MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(IMvcCoreBuilder, Action<ApplicationPartManager>)
  fullName: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action<Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConfigureApplicationPartManager
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/MvcCoreMvcCoreBuilderExtensions.cs
    startLine: 149
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nConfigures the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager\" data-throw-if-not-resolved=\"false\"></xref> using\nthe given <xref href=\"System.Action%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IMvcCoreBuilder ConfigureApplicationPartManager(this IMvcCoreBuilder builder, Action<ApplicationPartManager> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureApplicationPartManager(builder As IMvcCoreBuilder, setupAction As Action(Of ApplicationPartManager)) As IMvcCoreBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager}
      description: The <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(IMvcCoreBuilder, Action(Of ApplicationPartManager))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder, System.Action(Of Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager))
  name.vb: ConfigureApplicationPartManager(IMvcCoreBuilder, Action(Of ApplicationPartManager))
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.MvcOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcOptions
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: MvcOptions
  nameWithType: MvcOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IMvcCoreBuilder
  nameWithType: IMvcCoreBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Mvc.MvcOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.MvcOptions}
  parent: System
  definition: System.Action`1
  name: Action<MvcOptions>
  nameWithType: Action<MvcOptions>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.MvcOptions>
  nameWithType.vb: Action(Of MvcOptions)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Mvc.MvcOptions)
  name.vb: Action(Of MvcOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.MvcOptions
    name: MvcOptions
    nameWithType: MvcOptions
    fullName: Microsoft.AspNetCore.Mvc.MvcOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings}
  parent: System
  definition: System.Action`1
  name: Action<FormatterMappings>
  nameWithType: Action<FormatterMappings>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings>
  nameWithType.vb: Action(Of FormatterMappings)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings)
  name.vb: Action(Of FormatterMappings)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
    name: FormatterMappings
    nameWithType: FormatterMappings
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
    name: FormatterMappings
    nameWithType: FormatterMappings
    fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
  parent: System
  definition: System.Action`1
  name: Action<AuthorizationOptions>
  nameWithType: Action<AuthorizationOptions>
  fullName: System.Action<Microsoft.AspNetCore.Authorization.AuthorizationOptions>
  nameWithType.vb: Action(Of AuthorizationOptions)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationOptions)
  name.vb: Action(Of AuthorizationOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    name: AuthorizationOptions
    nameWithType: AuthorizationOptions
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    name: AuthorizationOptions
    nameWithType: AuthorizationOptions
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPart
  nameWithType: ApplicationPart
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
  commentId: P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
  parent: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  isExternal: false
  name: PartManager
  nameWithType: IMvcCoreBuilder.PartManager
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPartManager
  nameWithType: ApplicationPartManager
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
- uid: System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager}
  parent: System
  definition: System.Action`1
  name: Action<ApplicationPartManager>
  nameWithType: Action<ApplicationPartManager>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager>
  nameWithType.vb: Action(Of ApplicationPartManager)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)
  name.vb: Action(Of ApplicationPartManager)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
    name: ApplicationPartManager
    nameWithType: ApplicationPartManager
    fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
    name: ApplicationPartManager
    nameWithType: ApplicationPartManager
    fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  - name: )
    nameWithType: )
    fullName: )
