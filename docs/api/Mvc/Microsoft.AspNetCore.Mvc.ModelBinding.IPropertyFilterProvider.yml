### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  id: IPropertyFilterProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  langs:
  - csharp
  - vb
  name: IPropertyFilterProvider
  nameWithType: IPropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/IPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IPropertyFilterProvider
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/IPropertyFilterProvider.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nProvides a predicate which can determines which model properties should be bound by model binding.\n"
  example: []
  syntax:
    content: public interface IPropertyFilterProvider
    content.vb: Public Interface IPropertyFilterProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  id: PropertyFilter
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  langs:
  - csharp
  - vb
  name: PropertyFilter
  nameWithType: IPropertyFilterProvider.PropertyFilter
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/IPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyFilter
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/IPropertyFilterProvider.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets a predicate which can determines which model properties should be bound by model binding.\n"
  example: []
  syntax:
    content: Func<ModelMetadata, bool> PropertyFilter { get; }
    content.vb: ReadOnly Property PropertyFilter As Func(Of ModelMetadata, Boolean)
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ModelMetadata, Boolean>
  nameWithType: Func<ModelMetadata, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>
  nameWithType.vb: Func(Of ModelMetadata, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean)
  name.vb: Func(Of ModelMetadata, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
