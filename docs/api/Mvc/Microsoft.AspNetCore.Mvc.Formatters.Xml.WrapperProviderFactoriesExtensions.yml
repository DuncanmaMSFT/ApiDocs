### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions
  id: WrapperProviderFactoriesExtensions
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions.GetWrapperProvider(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory},Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  langs:
  - csharp
  - vb
  name: WrapperProviderFactoriesExtensions
  nameWithType: WrapperProviderFactoriesExtensions
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderFactoriesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WrapperProviderFactoriesExtensions
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderFactoriesExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nExtension methods for <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class WrapperProviderFactoriesExtensions
    content.vb: Public Module WrapperProviderFactoriesExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions.GetWrapperProvider(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory},Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions.GetWrapperProvider(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory},Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  id: GetWrapperProvider(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory},Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions
  langs:
  - csharp
  - vb
  name: GetWrapperProvider(IEnumerable<IWrapperProviderFactory>, WrapperProviderContext)
  nameWithType: WrapperProviderFactoriesExtensions.GetWrapperProvider(IEnumerable<IWrapperProviderFactory>, WrapperProviderContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions.GetWrapperProvider(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory>, Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderFactoriesExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetWrapperProvider
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderFactoriesExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nGets an instance of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider\" data-throw-if-not-resolved=\"false\"></xref> for the supplied\ntype.\n"
  example: []
  syntax:
    content: public static IWrapperProvider GetWrapperProvider(this IEnumerable<IWrapperProviderFactory> wrapperProviderFactories, WrapperProviderContext wrapperProviderContext)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetWrapperProvider(wrapperProviderFactories As IEnumerable(Of IWrapperProviderFactory), wrapperProviderContext As WrapperProviderContext) As IWrapperProvider
    parameters:
    - id: wrapperProviderFactories
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory}
      description: A list of <xref href="Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory" data-throw-if-not-resolved="false"></xref>.
    - id: wrapperProviderContext
      type: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
      description: >-
        An instance of <xref href="Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider" data-throw-if-not-resolved="false"></xref> if there is a wrapping provider for the

        supplied type, else null.
  nameWithType.vb: WrapperProviderFactoriesExtensions.GetWrapperProvider(IEnumerable(Of IWrapperProviderFactory), WrapperProviderContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderFactoriesExtensions.GetWrapperProvider(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory), Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext)
  name.vb: GetWrapperProvider(IEnumerable(Of IWrapperProviderFactory), WrapperProviderContext)
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IWrapperProviderFactory
  nameWithType: IWrapperProviderFactory
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Xml
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Xml
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IWrapperProvider
  nameWithType: IWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: WrapperProviderContext
  nameWithType: WrapperProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IWrapperProviderFactory>
  nameWithType: IEnumerable<IWrapperProviderFactory>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory>
  nameWithType.vb: IEnumerable(Of IWrapperProviderFactory)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory)
  name.vb: IEnumerable(Of IWrapperProviderFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
    name: IWrapperProviderFactory
    nameWithType: IWrapperProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
    name: IWrapperProviderFactory
    nameWithType: IWrapperProviderFactory
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
