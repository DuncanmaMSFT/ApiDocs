### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions
  id: HtmlHelperDisplayNameExtensions
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  langs:
  - csharp
  - vb
  name: HtmlHelperDisplayNameExtensions
  nameWithType: HtmlHelperDisplayNameExtensions
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlHelperDisplayNameExtensions
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nDisplayName-related extensions for <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HtmlHelperDisplayNameExtensions
    content.vb: Public Module HtmlHelperDisplayNameExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  id: DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions
  langs:
  - csharp
  - vb
  name: DisplayNameForModel(IHtmlHelper)
  nameWithType: HtmlHelperDisplayNameExtensions.DisplayNameForModel(IHtmlHelper)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayNameForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the display name for the current model.\n"
  example: []
  syntax:
    content: public static string DisplayNameForModel(this IHtmlHelper htmlHelper)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayNameForModel(htmlHelper As IHtmlHelper) As String
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the display name.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: DisplayNameFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions
  langs:
  - csharp
  - vb
  name: DisplayNameFor<TModelItem, TResult>(IHtmlHelper<IEnumerable<TModelItem>>, Expression<Func<TModelItem, TResult>>)
  nameWithType: HtmlHelperDisplayNameExtensions.DisplayNameFor<TModelItem, TResult>(IHtmlHelper<IEnumerable<TModelItem>>, Expression<Func<TModelItem, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor<TModelItem, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<System.Collections.Generic.IEnumerable<TModelItem>>, System.Linq.Expressions.Expression<System.Func<TModelItem, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayNameFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayNameExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns the display name for the specified <em>expression</em>\nif the current model represents a collection.\n"
  example: []
  syntax:
    content: public static string DisplayNameFor<TModelItem, TResult>(this IHtmlHelper<IEnumerable<TModelItem>> htmlHelper, Expression<Func<TModelItem, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayNameFor(Of TModelItem, TResult)(htmlHelper As IHtmlHelper(Of IEnumerable(Of TModelItem)), expression As Expression(Of Func(Of TModelItem, TResult))) As String
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{{TModelItem}}}
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> instance this method extends.\n"
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModelItem},{TResult}}}
      description: An expression to be evaluated against an item in the current model.
    typeParameters:
    - id: TModelItem
      description: The type of items in the model collection.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the display name.
  nameWithType.vb: HtmlHelperDisplayNameExtensions.DisplayNameFor(Of TModelItem, TResult)(IHtmlHelper(Of IEnumerable(Of TModelItem)), Expression(Of Func(Of TModelItem, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor(Of TModelItem, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of System.Collections.Generic.IEnumerable(Of TModelItem)), System.Linq.Expressions.Expression(Of System.Func(Of TModelItem, TResult)))
  name.vb: DisplayNameFor(Of TModelItem, TResult)(IHtmlHelper(Of IEnumerable(Of TModelItem)), Expression(Of Func(Of TModelItem, TResult)))
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: IHtmlHelper
  nameWithType: IHtmlHelper
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  isExternal: false
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{{TModelItem}}}
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}}
  parent: Microsoft.AspNetCore.Mvc.Rendering
  definition: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  name: IHtmlHelper<IEnumerable<TModelItem>>
  nameWithType: IHtmlHelper<IEnumerable<TModelItem>>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<System.Collections.Generic.IEnumerable<TModelItem>>
  nameWithType.vb: IHtmlHelper(Of IEnumerable(Of TModelItem))
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of System.Collections.Generic.IEnumerable(Of TModelItem))
  name.vb: IHtmlHelper(Of IEnumerable(Of TModelItem))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelItem
    nameWithType: TModelItem
    fullName: TModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelItem
    nameWithType: TModelItem
    fullName: TModelItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModelItem},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModelItem, TResult>>
  nameWithType: Expression<Func<TModelItem, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModelItem, TResult>>
  nameWithType.vb: Expression(Of Func(Of TModelItem, TResult))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModelItem, TResult))
  name.vb: Expression(Of Func(Of TModelItem, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelItem
    nameWithType: TModelItem
    fullName: TModelItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelItem
    nameWithType: TModelItem
    fullName: TModelItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
