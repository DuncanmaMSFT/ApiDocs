### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  id: GeneratedTagHelperAttributeContext
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.CreateModelExpressionMethodName
  - Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionProviderPropertyName
  - Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionTypeName
  - Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ViewDataPropertyName
  langs:
  - csharp
  - vb
  name: GeneratedTagHelperAttributeContext
  nameWithType: GeneratedTagHelperAttributeContext
  fullName: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GeneratedTagHelperAttributeContext
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nContains information for the <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" data-throw-if-not-resolved=\"false\"></xref> attribute code\ngeneration process.\n"
  example: []
  syntax:
    content: public class GeneratedTagHelperAttributeContext
    content.vb: Public Class GeneratedTagHelperAttributeContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionTypeName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionTypeName
  id: ModelExpressionTypeName
  parent: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  langs:
  - csharp
  - vb
  name: ModelExpressionTypeName
  nameWithType: GeneratedTagHelperAttributeContext.ModelExpressionTypeName
  fullName: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelExpressionTypeName
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nName of the model expression type.\n"
  example: []
  syntax:
    content: public string ModelExpressionTypeName { get; set; }
    content.vb: Public Property ModelExpressionTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.CreateModelExpressionMethodName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.CreateModelExpressionMethodName
  id: CreateModelExpressionMethodName
  parent: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  langs:
  - csharp
  - vb
  name: CreateModelExpressionMethodName
  nameWithType: GeneratedTagHelperAttributeContext.CreateModelExpressionMethodName
  fullName: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.CreateModelExpressionMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateModelExpressionMethodName
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nName the method to create <code>ModelExpression</code>s.\n"
  example: []
  syntax:
    content: public string CreateModelExpressionMethodName { get; set; }
    content.vb: Public Property CreateModelExpressionMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionProviderPropertyName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionProviderPropertyName
  id: ModelExpressionProviderPropertyName
  parent: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  langs:
  - csharp
  - vb
  name: ModelExpressionProviderPropertyName
  nameWithType: GeneratedTagHelperAttributeContext.ModelExpressionProviderPropertyName
  fullName: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ModelExpressionProviderPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelExpressionProviderPropertyName
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the name of the <code>IModelExpressionProvider</code>.\n"
  example: []
  syntax:
    content: public string ModelExpressionProviderPropertyName { get; set; }
    content.vb: Public Property ModelExpressionProviderPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ViewDataPropertyName
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ViewDataPropertyName
  id: ViewDataPropertyName
  parent: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext
  langs:
  - csharp
  - vb
  name: ViewDataPropertyName
  nameWithType: GeneratedTagHelperAttributeContext.ViewDataPropertyName
  fullName: Microsoft.AspNetCore.Mvc.Razor.GeneratedTagHelperAttributeContext.ViewDataPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewDataPropertyName
    path: src/Microsoft.AspNetCore.Mvc.Razor.Host/GeneratedTagHelperAttributeContext.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor.Host
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets or sets the property name of the <code>ViewDataDictionary</code>.\n"
  example: []
  syntax:
    content: public string ViewDataPropertyName { get; set; }
    content.vb: Public Property ViewDataPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: true
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
