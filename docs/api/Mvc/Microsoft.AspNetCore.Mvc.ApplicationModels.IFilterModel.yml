### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  id: IFilterModel
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  langs:
  - csharp
  - vb
  name: IFilterModel
  nameWithType: IFilterModel
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/IFilterModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IFilterModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/IFilterModel.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: public interface IFilterModel
    content.vb: Public Interface IFilterModel
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  id: Filters
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: IFilterModel.Filters
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/IFilterModel.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filters
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationModels/IFilterModel.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationModels
  syntax:
    content: IList<IFilterMetadata> Filters { get; }
    content.vb: ReadOnly Property Filters As IList(Of IFilterMetadata)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFilterMetadata>
  nameWithType: IList<IFilterMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>
  nameWithType.vb: IList(Of IFilterMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  name.vb: IList(Of IFilterMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
