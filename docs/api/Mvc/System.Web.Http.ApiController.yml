### YamlMime:ManagedReference
items:
- uid: System.Web.Http.ApiController
  commentId: T:System.Web.Http.ApiController
  id: ApiController
  parent: System.Web.Http
  children:
  - System.Web.Http.ApiController.ActionContext
  - System.Web.Http.ApiController.BadRequest
  - System.Web.Http.ApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - System.Web.Http.ApiController.BadRequest(System.String)
  - System.Web.Http.ApiController.Conflict
  - System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  - System.Web.Http.ApiController.Context
  - System.Web.Http.ApiController.ControllerContext
  - System.Web.Http.ApiController.Created(System.String,System.Object)
  - System.Web.Http.ApiController.Created(System.Uri,System.Object)
  - System.Web.Http.ApiController.CreatedAtRoute(System.String,System.Object,System.Object)
  - System.Web.Http.ApiController.Dispose
  - System.Web.Http.ApiController.Dispose(System.Boolean)
  - System.Web.Http.ApiController.InternalServerError
  - System.Web.Http.ApiController.InternalServerError(System.Exception)
  - System.Web.Http.ApiController.Json``1(``0)
  - System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  - System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  - System.Web.Http.ApiController.MetadataProvider
  - System.Web.Http.ApiController.ModelState
  - System.Web.Http.ApiController.NotFound
  - System.Web.Http.ApiController.ObjectValidator
  - System.Web.Http.ApiController.Ok
  - System.Web.Http.ApiController.Ok``1(``0)
  - System.Web.Http.ApiController.Redirect(System.String)
  - System.Web.Http.ApiController.Redirect(System.Uri)
  - System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  - System.Web.Http.ApiController.Request
  - System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  - System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  - System.Web.Http.ApiController.Url
  - System.Web.Http.ApiController.User
  - System.Web.Http.ApiController.Validate``1(``0)
  - System.Web.Http.ApiController.Validate``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: ApiController
  nameWithType: ApiController
  fullName: System.Web.Http.ApiController
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApiController
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  syntax:
    content: 'public abstract class ApiController : IDisposable'
    content.vb: >-
      Public MustInherit Class ApiController
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Web.Http.ApiController.ActionContext
  commentId: P:System.Web.Http.ApiController.ActionContext
  id: ActionContext
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: ActionContext
  nameWithType: ApiController.ActionContext
  fullName: System.Web.Http.ApiController.ActionContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionContext
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ActionContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionContext ActionContext { get; }
    content.vb: Public ReadOnly Property ActionContext As ActionContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ActionContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.ApiController.ControllerContext
  commentId: P:System.Web.Http.ApiController.ControllerContext
  id: ControllerContext
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: ControllerContext
  nameWithType: ApiController.ControllerContext
  fullName: System.Web.Http.ApiController.ControllerContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerContext
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets or sets the <xref href=\"System.Web.Http.ApiController.ControllerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The setter is intended for unit testing purposes only.
  example: []
  syntax:
    content: public ControllerContext ControllerContext { get; set; }
    content.vb: Public Property ControllerContext As ControllerContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ControllerContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.Context
  commentId: P:System.Web.Http.ApiController.Context
  id: Context
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ApiController.Context
  fullName: System.Web.Http.ApiController.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Context
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the http context.\n"
  example: []
  syntax:
    content: public HttpContext Context { get; }
    content.vb: Public ReadOnly Property Context As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.ApiController.MetadataProvider
  commentId: P:System.Web.Http.ApiController.MetadataProvider
  id: MetadataProvider
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: MetadataProvider
  nameWithType: ApiController.MetadataProvider
  fullName: System.Web.Http.ApiController.MetadataProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MetadataProvider
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The setter is intended for unit testing purposes only.
  example: []
  syntax:
    content: public IModelMetadataProvider MetadataProvider { get; set; }
    content.vb: Public Property MetadataProvider As IModelMetadataProvider
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.ObjectValidator
  commentId: P:System.Web.Http.ApiController.ObjectValidator
  id: ObjectValidator
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: ObjectValidator
  nameWithType: ApiController.ObjectValidator
  fullName: System.Web.Http.ApiController.ObjectValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ObjectValidator
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IObjectModelValidator ObjectValidator { get; set; }
    content.vb: Public Property ObjectValidator As IObjectModelValidator
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.ModelState
  commentId: P:System.Web.Http.ApiController.ModelState
  id: ModelState
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: ModelState
  nameWithType: ApiController.ModelState
  fullName: System.Web.Http.ApiController.ModelState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelState
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets model state after the model binding process. This ModelState will be empty before model binding\nhappens.\n"
  example: []
  syntax:
    content: public ModelStateDictionary ModelState { get; }
    content.vb: Public ReadOnly Property ModelState As ModelStateDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.ApiController.Request
  commentId: P:System.Web.Http.ApiController.Request
  id: Request
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: ApiController.Request
  fullName: System.Web.Http.ApiController.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Request
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets or sets the HTTP request message.\n"
  remarks: The setter is intended for unit testing purposes only.
  example: []
  syntax:
    content: public HttpRequestMessage Request { get; set; }
    content.vb: Public Property Request As HttpRequestMessage
    parameters: []
    return:
      type: System.Net.Http.HttpRequestMessage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.Url
  commentId: P:System.Web.Http.ApiController.Url
  id: Url
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: ApiController.Url
  fullName: System.Web.Http.ApiController.Url
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Url
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets a factory used to generate URLs to other APIs.\n"
  remarks: The setter is intended for unit testing purposes only.
  example: []
  syntax:
    content: public IUrlHelper Url { get; set; }
    content.vb: Public Property Url As IUrlHelper
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.User
  commentId: P:System.Web.Http.ApiController.User
  id: User
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ApiController.User
  fullName: System.Web.Http.ApiController.User
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: User
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 174
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nGets or sets the current principal associated with this request.\n"
  example: []
  syntax:
    content: public IPrincipal User { get; }
    content.vb: Public ReadOnly Property User As IPrincipal
    parameters: []
    return:
      type: System.Security.Principal.IPrincipal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Web.Http.ApiController.BadRequest
  commentId: M:System.Web.Http.ApiController.BadRequest
  id: BadRequest
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: BadRequest()
  nameWithType: ApiController.BadRequest()
  fullName: System.Web.Http.ApiController.BadRequest()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.BadRequestResult\" data-throw-if-not-resolved=\"false\"></xref> (400 Bad Request).\n"
  example: []
  syntax:
    content: public virtual BadRequestResult BadRequest()
    content.vb: Public Overridable Function BadRequest As BadRequestResult
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.BadRequestResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.BadRequest(System.String)
  commentId: M:System.Web.Http.ApiController.BadRequest(System.String)
  id: BadRequest(System.String)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: BadRequest(String)
  nameWithType: ApiController.BadRequest(String)
  fullName: System.Web.Http.ApiController.BadRequest(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 197
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"System.Web.Http.BadRequestErrorMessageResult\" data-throw-if-not-resolved=\"false\"></xref> (400 Bad Request) with the specified error message.\n"
  example: []
  syntax:
    content: public virtual BadRequestErrorMessageResult BadRequest(string message)
    content.vb: Public Overridable Function BadRequest(message As String) As BadRequestErrorMessageResult
    parameters:
    - id: message
      type: System.String
      description: The user-visible error message.
    return:
      type: System.Web.Http.BadRequestErrorMessageResult
      description: A <xref href="System.Web.Http.BadRequestErrorMessageResult" data-throw-if-not-resolved="false"></xref> with the specified error message.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:System.Web.Http.ApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: BadRequest(ModelStateDictionary)
  nameWithType: ApiController.BadRequest(ModelStateDictionary)
  fullName: System.Web.Http.ApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"System.Web.Http.InvalidModelStateResult\" data-throw-if-not-resolved=\"false\"></xref> (400 Bad Request) with the specified model state.\n"
  example: []
  syntax:
    content: public virtual InvalidModelStateResult BadRequest(ModelStateDictionary modelState)
    content.vb: Public Overridable Function BadRequest(modelState As ModelStateDictionary) As InvalidModelStateResult
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The model state to include in the error.
    return:
      type: System.Web.Http.InvalidModelStateResult
      description: An <xref href="System.Web.Http.InvalidModelStateResult" data-throw-if-not-resolved="false"></xref> with the specified model state.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Conflict
  commentId: M:System.Web.Http.ApiController.Conflict
  id: Conflict
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Conflict()
  nameWithType: ApiController.Conflict()
  fullName: System.Web.Http.ApiController.Conflict()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Conflict
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: Creates a <xref href="System.Web.Http.ConflictResult" data-throw-if-not-resolved="false"></xref> (409 Conflict).
  example: []
  syntax:
    content: public virtual ConflictResult Conflict()
    content.vb: Public Overridable Function Conflict As ConflictResult
    return:
      type: System.Web.Http.ConflictResult
      description: A <xref href="System.Web.Http.ConflictResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  id: Content``1(System.Net.HttpStatusCode,``0)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Content<T>(HttpStatusCode, T)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 239
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"System.Web.Http.NegotiatedContentResult%601\" data-throw-if-not-resolved=\"false\"></xref> with the specified values.\n"
  example: []
  syntax:
    content: public virtual NegotiatedContentResult<T> Content<T>(HttpStatusCode statusCode, T value)
    content.vb: Public Overridable Function Content(Of T)(statusCode As HttpStatusCode, value As T) As NegotiatedContentResult(Of T)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The HTTP status code for the response message.
    - id: value
      type: '{T}'
      description: The content value to negotiate and format in the entity body.
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    return:
      type: System.Web.Http.NegotiatedContentResult{{T}}
      description: A <xref href="System.Web.Http.NegotiatedContentResult%601" data-throw-if-not-resolved="false"></xref> with the specified values.
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T)
  name.vb: Content(Of T)(HttpStatusCode, T)
- uid: System.Web.Http.ApiController.Created(System.String,System.Object)
  commentId: M:System.Web.Http.ApiController.Created(System.String,System.Object)
  id: Created(System.String,System.Object)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Created(String, Object)
  nameWithType: ApiController.Created(String, Object)
  fullName: System.Web.Http.ApiController.Created(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Created
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 258
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedResult\" data-throw-if-not-resolved=\"false\"></xref> (201 Created) with the specified values.\n"
  example: []
  syntax:
    content: public virtual CreatedResult Created(string location, object content)
    content.vb: Public Overridable Function Created(location As String, content As Object) As CreatedResult
    parameters:
    - id: location
      type: System.String
      description: "\nThe location at which the content has been created. Must be a relative or absolute URL.\n"
    - id: content
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.CreatedResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Created(System.Uri,System.Object)
  commentId: M:System.Web.Http.ApiController.Created(System.Uri,System.Object)
  id: Created(System.Uri,System.Object)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Created(Uri, Object)
  nameWithType: ApiController.Created(Uri, Object)
  fullName: System.Web.Http.ApiController.Created(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Created
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 275
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedResult\" data-throw-if-not-resolved=\"false\"></xref> (201 Created) with the specified values.\n"
  example: []
  syntax:
    content: public virtual CreatedResult Created(Uri uri, object content)
    content.vb: Public Overridable Function Created(uri As Uri, content As Object) As CreatedResult
    parameters:
    - id: uri
      type: System.Uri
      description: The location at which the content has been created.
    - id: content
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.CreatedResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.CreatedAtRoute(System.String,System.Object,System.Object)
  commentId: M:System.Web.Http.ApiController.CreatedAtRoute(System.String,System.Object,System.Object)
  id: CreatedAtRoute(System.String,System.Object,System.Object)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: CreatedAtRoute(String, Object, Object)
  nameWithType: ApiController.CreatedAtRoute(String, Object, Object)
  fullName: System.Web.Http.ApiController.CreatedAtRoute(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 302
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtRouteResult\" data-throw-if-not-resolved=\"false\"></xref> (201 Created) with the specified values.\n"
  example: []
  syntax:
    content: public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object routeValues, object content)
    content.vb: Public Overridable Function CreatedAtRoute(routeName As String, routeValues As Object, content As Object) As CreatedAtRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route to use for generating the URL.
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    - id: content
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.InternalServerError
  commentId: M:System.Web.Http.ApiController.InternalServerError
  id: InternalServerError
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: InternalServerError()
  nameWithType: ApiController.InternalServerError()
  fullName: System.Web.Http.ApiController.InternalServerError()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InternalServerError
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 320
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: >
    Creates an <xref href="System.Web.Http.InternalServerErrorResult" data-throw-if-not-resolved="false"></xref> (500 Internal Server Error).
  example: []
  syntax:
    content: public virtual InternalServerErrorResult InternalServerError()
    content.vb: Public Overridable Function InternalServerError As InternalServerErrorResult
    return:
      type: System.Web.Http.InternalServerErrorResult
      description: A <xref href="System.Web.Http.InternalServerErrorResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.InternalServerError(System.Exception)
  commentId: M:System.Web.Http.ApiController.InternalServerError(System.Exception)
  id: InternalServerError(System.Exception)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: InternalServerError(Exception)
  nameWithType: ApiController.InternalServerError(Exception)
  fullName: System.Web.Http.ApiController.InternalServerError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InternalServerError
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 331
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"System.Web.Http.ExceptionResult\" data-throw-if-not-resolved=\"false\"></xref> (500 Internal Server Error) with the specified exception.\n"
  example: []
  syntax:
    content: public virtual ExceptionResult InternalServerError(Exception exception)
    content.vb: Public Overridable Function InternalServerError(exception As Exception) As ExceptionResult
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the error.
    return:
      type: System.Web.Http.ExceptionResult
      description: An <xref href="System.Web.Http.ExceptionResult" data-throw-if-not-resolved="false"></xref> with the specified exception.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Json``1(``0)
  commentId: M:System.Web.Http.ApiController.Json``1(``0)
  id: Json``1(``0)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Json<T>(T)
  nameWithType: ApiController.Json<T>(T)
  fullName: System.Web.Http.ApiController.Json<T>(T)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Json
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 348
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> (200 OK) with the specified value.\n"
  example: []
  syntax:
    content: public virtual JsonResult Json<T>(T content)
    content.vb: Public Overridable Function Json(Of T)(content As T) As JsonResult
    parameters:
    - id: content
      type: '{T}'
      description: The content value to serialize in the entity body.
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.JsonResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.JsonResult" data-throw-if-not-resolved="false"></xref> with the specified value.
  nameWithType.vb: ApiController.Json(Of T)(T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T)
  name.vb: Json(Of T)(T)
- uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  id: Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Json<T>(T, JsonSerializerSettings)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Json
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 366
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> (200 OK) with the specified values.\n"
  example: []
  syntax:
    content: public virtual JsonResult Json<T>(T content, JsonSerializerSettings serializerSettings)
    content.vb: Public Overridable Function Json(Of T)(content As T, serializerSettings As JsonSerializerSettings) As JsonResult
    parameters:
    - id: content
      type: '{T}'
      description: The content value to serialize in the entity body.
    - id: serializerSettings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The serializer settings.
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.JsonResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.JsonResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: Json(Of T)(T, JsonSerializerSettings)
- uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  id: Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Json<T>(T, JsonSerializerSettings, Encoding)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings, Encoding)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Json
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 390
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.JsonResult\" data-throw-if-not-resolved=\"false\"></xref> (200 OK) with the specified values.\n"
  example: []
  syntax:
    content: public virtual JsonResult Json<T>(T content, JsonSerializerSettings serializerSettings, Encoding encoding)
    content.vb: Public Overridable Function Json(Of T)(content As T, serializerSettings As JsonSerializerSettings, encoding As Encoding) As JsonResult
    parameters:
    - id: content
      type: '{T}'
      description: The content value to serialize in the entity body.
    - id: serializerSettings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The serializer settings.
    - id: encoding
      type: System.Text.Encoding
      description: The content encoding.
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.JsonResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.JsonResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings, Encoding)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  name.vb: Json(Of T)(T, JsonSerializerSettings, Encoding)
- uid: System.Web.Http.ApiController.NotFound
  commentId: M:System.Web.Http.ApiController.NotFound
  id: NotFound
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: NotFound()
  nameWithType: ApiController.NotFound()
  fullName: System.Web.Http.ApiController.NotFound()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NotFound
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 421
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.NotFoundResult\" data-throw-if-not-resolved=\"false\"></xref> (404 Not Found).\n"
  example: []
  syntax:
    content: public virtual NotFoundResult NotFound()
    content.vb: Public Overridable Function NotFound As NotFoundResult
    return:
      type: Microsoft.AspNetCore.Mvc.NotFoundResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.NotFoundResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Ok
  commentId: M:System.Web.Http.ApiController.Ok
  id: Ok
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Ok()
  nameWithType: ApiController.Ok()
  fullName: System.Web.Http.ApiController.Ok()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Ok
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 431
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.OkResult\" data-throw-if-not-resolved=\"false\"></xref> (200 OK).\n"
  example: []
  syntax:
    content: public virtual OkResult Ok()
    content.vb: Public Overridable Function Ok As OkResult
    return:
      type: Microsoft.AspNetCore.Mvc.OkResult
      description: An <xref href="Microsoft.AspNetCore.Mvc.OkResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Ok``1(``0)
  commentId: M:System.Web.Http.ApiController.Ok``1(``0)
  id: Ok``1(``0)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Ok<T>(T)
  nameWithType: ApiController.Ok<T>(T)
  fullName: System.Web.Http.ApiController.Ok<T>(T)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Ok
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 443
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.OkObjectResult\" data-throw-if-not-resolved=\"false\"></xref> (200 OK) with the specified values.\n"
  example: []
  syntax:
    content: public virtual OkObjectResult Ok<T>(T content)
    content.vb: Public Overridable Function Ok(Of T)(content As T) As OkObjectResult
    parameters:
    - id: content
      type: '{T}'
      description: The content value to negotiate and format in the entity body.
    typeParameters:
    - id: T
      description: The type of content in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.OkObjectResult
      description: An <xref href="Microsoft.AspNetCore.Mvc.OkObjectResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  nameWithType.vb: ApiController.Ok(Of T)(T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Web.Http.ApiController.Ok(Of T)(T)
  name.vb: Ok(Of T)(T)
- uid: System.Web.Http.ApiController.Redirect(System.String)
  commentId: M:System.Web.Http.ApiController.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Redirect(String)
  nameWithType: ApiController.Redirect(String)
  fullName: System.Web.Http.ApiController.Redirect(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Redirect
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 454
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.RedirectResult\" data-throw-if-not-resolved=\"false\"></xref> (302 Found) with the specified value.\n"
  example: []
  syntax:
    content: public virtual RedirectResult Redirect(string location)
    content.vb: Public Overridable Function Redirect(location As String) As RedirectResult
    parameters:
    - id: location
      type: System.String
      description: The location to which to redirect.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.RedirectResult" data-throw-if-not-resolved="false"></xref> with the specified value.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Redirect(System.Uri)
  commentId: M:System.Web.Http.ApiController.Redirect(System.Uri)
  id: Redirect(System.Uri)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Redirect(Uri)
  nameWithType: ApiController.Redirect(Uri)
  fullName: System.Web.Http.ApiController.Redirect(System.Uri)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Redirect
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 471
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.RedirectResult\" data-throw-if-not-resolved=\"false\"></xref> (302 Found) with the specified value.\n"
  example: []
  syntax:
    content: public virtual RedirectResult Redirect(Uri location)
    content.vb: Public Overridable Function Redirect(location As Uri) As RedirectResult
    parameters:
    - id: location
      type: System.Uri
      description: The location to which to redirect.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.RedirectResult" data-throw-if-not-resolved="false"></xref> with the specified value.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  commentId: M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: RedirectToRoute(String, Object)
  nameWithType: ApiController.RedirectToRoute(String, Object)
  fullName: System.Web.Http.ApiController.RedirectToRoute(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 498
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToRouteResult\" data-throw-if-not-resolved=\"false\"></xref> (302 Found) with the specified values.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoute(string routeName, object routeValues)
    content.vb: Public Overridable Function RedirectToRoute(routeName As String, routeValues As Object) As RedirectToRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route to use for generating the URL.
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> with the specified values.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  commentId: M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  id: ResponseMessage(System.Net.Http.HttpResponseMessage)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: ResponseMessage(HttpResponseMessage)
  nameWithType: ApiController.ResponseMessage(HttpResponseMessage)
  fullName: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResponseMessage
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 522
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"System.Web.Http.ResponseMessageResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified response.\n"
  example: []
  syntax:
    content: public virtual ResponseMessageResult ResponseMessage(HttpResponseMessage response)
    content.vb: Public Overridable Function ResponseMessage(response As HttpResponseMessage) As ResponseMessageResult
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
      description: The HTTP response message.
    return:
      type: System.Web.Http.ResponseMessageResult
      description: A <xref href="System.Web.Http.ResponseMessageResult" data-throw-if-not-resolved="false"></xref> for the specified response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  commentId: M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  id: StatusCode(System.Net.HttpStatusCode)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: StatusCode(HttpStatusCode)
  nameWithType: ApiController.StatusCode(HttpStatusCode)
  fullName: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StatusCode
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 538
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.StatusCodeResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified status code.\n"
  example: []
  syntax:
    content: public virtual StatusCodeResult StatusCode(HttpStatusCode status)
    content.vb: Public Overridable Function StatusCode(status As HttpStatusCode) As StatusCodeResult
    parameters:
    - id: status
      type: System.Net.HttpStatusCode
      description: The HTTP status code for the response message
    return:
      type: Microsoft.AspNetCore.Mvc.StatusCodeResult
      description: A <xref href="Microsoft.AspNetCore.Mvc.StatusCodeResult" data-throw-if-not-resolved="false"></xref> with the specified status code.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Web.Http.ApiController.Dispose
  commentId: M:System.Web.Http.ApiController.Dispose
  id: Dispose
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ApiController.Dispose()
  fullName: System.Web.Http.ApiController.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 545
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Web.Http.ApiController.Validate``1(``0)
  commentId: M:System.Web.Http.ApiController.Validate``1(``0)
  id: Validate``1(``0)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Validate<TEntity>(TEntity)
  nameWithType: ApiController.Validate<TEntity>(TEntity)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Validate
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 553
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nValidates the given entity and adds the validation errors to the <xref href=\"System.Web.Http.ApiController.ModelState\" data-throw-if-not-resolved=\"false\"></xref>\nunder an empty prefix.\n"
  example: []
  syntax:
    content: public void Validate<TEntity>(TEntity entity)
    content.vb: Public Sub Validate(Of TEntity)(entity As TEntity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity being validated.
    typeParameters:
    - id: TEntity
      description: The type of the entity to be validated.
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity)
  name.vb: Validate(Of TEntity)(TEntity)
- uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
  commentId: M:System.Web.Http.ApiController.Validate``1(``0,System.String)
  id: Validate``1(``0,System.String)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Validate<TEntity>(TEntity, String)
  nameWithType: ApiController.Validate<TEntity>(TEntity, String)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Validate
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 567
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  summary: "\nValidates the given entity and adds the validation errors to the <xref href=\"System.Web.Http.ApiController.ModelState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Validate<TEntity>(TEntity entity, string keyPrefix)
    content.vb: Public Sub Validate(Of TEntity)(entity As TEntity, keyPrefix As String)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity being validated.
    - id: keyPrefix
      type: System.String
      description: "\nThe key prefix under which the model state errors would be added in the\n<xref href=\"System.Web.Http.ApiController.ModelState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    typeParameters:
    - id: TEntity
      description: The type of the entity to be validated.
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity, System.String)
  name.vb: Validate(Of TEntity)(TEntity, String)
- uid: System.Web.Http.ApiController.Dispose(System.Boolean)
  commentId: M:System.Web.Http.ApiController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.Http.ApiController
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ApiController.Dispose(Boolean)
  fullName: System.Web.Http.ApiController.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/ApiController.cs
    startLine: 576
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: System.Web.Http
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Web.Http.ApiController.ControllerContext
  commentId: P:System.Web.Http.ApiController.ControllerContext
- uid: Microsoft.AspNetCore.Mvc.ControllerContext
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelMetadataProvider
  nameWithType: IModelMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IObjectModelValidator
  nameWithType: IObjectModelValidator
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.IUrlHelper
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IUrlHelper
  nameWithType: IUrlHelper
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper
- uid: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: Microsoft.AspNetCore.Mvc.BadRequestResult
  commentId: T:Microsoft.AspNetCore.Mvc.BadRequestResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: BadRequestResult
  nameWithType: BadRequestResult
  fullName: Microsoft.AspNetCore.Mvc.BadRequestResult
- uid: System.Web.Http.BadRequestErrorMessageResult
  commentId: T:System.Web.Http.BadRequestErrorMessageResult
  parent: System.Web.Http
  isExternal: false
  name: BadRequestErrorMessageResult
  nameWithType: BadRequestErrorMessageResult
  fullName: System.Web.Http.BadRequestErrorMessageResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Http.InvalidModelStateResult
  commentId: T:System.Web.Http.InvalidModelStateResult
  parent: System.Web.Http
  isExternal: false
  name: InvalidModelStateResult
  nameWithType: InvalidModelStateResult
  fullName: System.Web.Http.InvalidModelStateResult
- uid: System.Web.Http.ConflictResult
  commentId: T:System.Web.Http.ConflictResult
  parent: System.Web.Http
  isExternal: false
  name: ConflictResult
  nameWithType: ConflictResult
  fullName: System.Web.Http.ConflictResult
- uid: System.Web.Http.NegotiatedContentResult`1
  commentId: T:System.Web.Http.NegotiatedContentResult`1
  isExternal: false
  name: NegotiatedContentResult<T>
  nameWithType: NegotiatedContentResult<T>
  fullName: System.Web.Http.NegotiatedContentResult<T>
  nameWithType.vb: NegotiatedContentResult(Of T)
  fullname.vb: System.Web.Http.NegotiatedContentResult(Of T)
  name.vb: NegotiatedContentResult(Of T)
  spec.csharp:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Http.NegotiatedContentResult{{T}}
  commentId: T:System.Web.Http.NegotiatedContentResult{``0}
  parent: System.Web.Http
  definition: System.Web.Http.NegotiatedContentResult`1
  name: NegotiatedContentResult<T>
  nameWithType: NegotiatedContentResult<T>
  fullName: System.Web.Http.NegotiatedContentResult<T>
  nameWithType.vb: NegotiatedContentResult(Of T)
  fullname.vb: System.Web.Http.NegotiatedContentResult(Of T)
  name.vb: NegotiatedContentResult(Of T)
  spec.csharp:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Web.Http.NegotiatedContentResult`1
    name: NegotiatedContentResult
    nameWithType: NegotiatedContentResult
    fullName: System.Web.Http.NegotiatedContentResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.AspNetCore.Mvc.CreatedResult
  commentId: T:Microsoft.AspNetCore.Mvc.CreatedResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CreatedResult
  nameWithType: CreatedResult
  fullName: Microsoft.AspNetCore.Mvc.CreatedResult
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
  commentId: T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CreatedAtRouteResult
  nameWithType: CreatedAtRouteResult
  fullName: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
- uid: System.Web.Http.InternalServerErrorResult
  commentId: T:System.Web.Http.InternalServerErrorResult
  parent: System.Web.Http
  isExternal: false
  name: InternalServerErrorResult
  nameWithType: InternalServerErrorResult
  fullName: System.Web.Http.InternalServerErrorResult
- uid: System.Web.Http.ExceptionResult
  commentId: T:System.Web.Http.ExceptionResult
  parent: System.Web.Http
  isExternal: false
  name: ExceptionResult
  nameWithType: ExceptionResult
  fullName: System.Web.Http.ExceptionResult
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Mvc.JsonResult
  commentId: T:Microsoft.AspNetCore.Mvc.JsonResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: JsonResult
  nameWithType: JsonResult
  fullName: Microsoft.AspNetCore.Mvc.JsonResult
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.AspNetCore.Mvc.NotFoundResult
  commentId: T:Microsoft.AspNetCore.Mvc.NotFoundResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: NotFoundResult
  nameWithType: NotFoundResult
  fullName: Microsoft.AspNetCore.Mvc.NotFoundResult
- uid: Microsoft.AspNetCore.Mvc.OkResult
  commentId: T:Microsoft.AspNetCore.Mvc.OkResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: OkResult
  nameWithType: OkResult
  fullName: Microsoft.AspNetCore.Mvc.OkResult
- uid: Microsoft.AspNetCore.Mvc.OkObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.OkObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: OkObjectResult
  nameWithType: OkObjectResult
  fullName: Microsoft.AspNetCore.Mvc.OkObjectResult
- uid: Microsoft.AspNetCore.Mvc.RedirectResult
  commentId: T:Microsoft.AspNetCore.Mvc.RedirectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: RedirectResult
  nameWithType: RedirectResult
  fullName: Microsoft.AspNetCore.Mvc.RedirectResult
- uid: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
  commentId: T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: RedirectToRouteResult
  nameWithType: RedirectToRouteResult
  fullName: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
- uid: System.Web.Http.ResponseMessageResult
  commentId: T:System.Web.Http.ResponseMessageResult
  parent: System.Web.Http
  isExternal: false
  name: ResponseMessageResult
  nameWithType: ResponseMessageResult
  fullName: System.Web.Http.ResponseMessageResult
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: Microsoft.AspNetCore.Mvc.StatusCodeResult
  commentId: T:Microsoft.AspNetCore.Mvc.StatusCodeResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: StatusCodeResult
  nameWithType: StatusCodeResult
  fullName: Microsoft.AspNetCore.Mvc.StatusCodeResult
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.ModelState
  commentId: P:System.Web.Http.ApiController.ModelState
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
