### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate
  id: ResourceExecutionDelegate
  parent: Microsoft.AspNetCore.Mvc.Filters
  children: []
  langs:
  - csharp
  - vb
  name: ResourceExecutionDelegate
  nameWithType: ResourceExecutionDelegate
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate
  type: Delegate
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutionDelegate.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResourceExecutionDelegate
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutionDelegate.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA delegate that asynchronously returns a <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext\" data-throw-if-not-resolved=\"false\"></xref> indicating model binding, the\naction, the action's result, result filters, and exception filters have executed.\n"
  example: []
  syntax:
    content: public delegate Task<ResourceExecutedContext> ResourceExecutionDelegate();
    content.vb: Public Delegate Function ResourceExecutionDelegate As Task(Of ResourceExecutedContext)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns a <xref href="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResourceExecutedContext
  nameWithType: ResourceExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceExecutedContext>
  nameWithType: Task<ResourceExecutedContext>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext>
  nameWithType.vb: Task(Of ResourceExecutedContext)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
  name.vb: Task(Of ResourceExecutedContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    name: ResourceExecutedContext
    nameWithType: ResourceExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    name: ResourceExecutedContext
    nameWithType: ResourceExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
