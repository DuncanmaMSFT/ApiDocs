### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  id: EnumerableWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.#ctor(System.Type,Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.Wrap(System.Object)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.WrappingType
  langs:
  - csharp
  - vb
  name: EnumerableWrapperProvider
  nameWithType: EnumerableWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: EnumerableWrapperProvider
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nProvides a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider\" data-throw-if-not-resolved=\"false\"></xref> for interface types which implement\n<xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class EnumerableWrapperProvider : IWrapperProvider'
    content.vb: >-
      Public Class EnumerableWrapperProvider
          Implements IWrapperProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.#ctor(System.Type,Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.#ctor(System.Type,Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider)
  id: '#ctor(System.Type,Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  langs:
  - csharp
  - vb
  name: EnumerableWrapperProvider(Type, IWrapperProvider)
  nameWithType: EnumerableWrapperProvider.EnumerableWrapperProvider(Type, IWrapperProvider)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.EnumerableWrapperProvider(System.Type, Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nInitializes an instance of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EnumerableWrapperProvider(Type sourceEnumerableOfT, IWrapperProvider elementWrapperProvider)
    content.vb: Public Sub New(sourceEnumerableOfT As Type, elementWrapperProvider As IWrapperProvider)
    parameters:
    - id: sourceEnumerableOfT
      type: System.Type
      description: >-
        Type of the original <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>

        that is being wrapped.
    - id: elementWrapperProvider
      type: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider" data-throw-if-not-resolved="false"></xref> for the element type.

        Can be null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.WrappingType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.WrappingType
  id: WrappingType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  langs:
  - csharp
  - vb
  name: WrappingType
  nameWithType: EnumerableWrapperProvider.WrappingType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.WrappingType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WrappingType
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  example: []
  syntax:
    content: public Type WrappingType { get; }
    content.vb: Public ReadOnly Property WrappingType As Type
    parameters: []
    return:
      type: System.Type
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.Wrap(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.Wrap(System.Object)
  id: Wrap(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  langs:
  - csharp
  - vb
  name: Wrap(Object)
  nameWithType: EnumerableWrapperProvider.Wrap(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider.Wrap(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Wrap
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/EnumerableWrapperProvider.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  example: []
  syntax:
    content: public object Wrap(object original)
    content.vb: Public Function Wrap(original As Object) As Object
    parameters:
    - id: original
      type: System.Object
    return:
      type: System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IWrapperProvider
  nameWithType: IWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Xml
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Xml
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
  isExternal: false
  name: EnumerableWrapperProvider
  nameWithType: EnumerableWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.EnumerableWrapperProvider
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  isExternal: false
  name: WrappingType
  nameWithType: IWrapperProvider.WrappingType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.WrappingType
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  isExternal: true
  name: Wrap(Object)
  nameWithType: IWrapperProvider.Wrap(Object)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
    name: Wrap
    nameWithType: IWrapperProvider.Wrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap(System.Object)
    name: Wrap
    nameWithType: IWrapperProvider.Wrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider.Wrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
