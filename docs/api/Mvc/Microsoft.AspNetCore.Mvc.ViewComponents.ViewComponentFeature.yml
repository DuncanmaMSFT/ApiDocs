### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  commentId: T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  id: ViewComponentFeature
  parent: Microsoft.AspNetCore.Mvc.ViewComponents
  children:
  - Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature.ViewComponents
  langs:
  - csharp
  - vb
  name: ViewComponentFeature
  nameWithType: ViewComponentFeature
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentFeature.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewComponentFeature
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentFeature.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nThe list of view component types in an MVC application.The <xref href=\"Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature\" data-throw-if-not-resolved=\"false\"></xref> can be populated\nusing the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager\" data-throw-if-not-resolved=\"false\"></xref> that is available during startup at <xref href=\"Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager\" data-throw-if-not-resolved=\"false\"></xref> or at a later stage by requiring the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager\" data-throw-if-not-resolved=\"false\"></xref>\nas a dependency in a component.\n"
  example: []
  syntax:
    content: public class ViewComponentFeature
    content.vb: Public Class ViewComponentFeature
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature.ViewComponents
  commentId: P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature.ViewComponents
  id: ViewComponents
  parent: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  langs:
  - csharp
  - vb
  name: ViewComponents
  nameWithType: ViewComponentFeature.ViewComponents
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature.ViewComponents
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentFeature.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewComponents
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/ViewComponents/ViewComponentFeature.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.ViewComponents
  summary: "\nGets the list of view component types in an MVC application.\n"
  example: []
  syntax:
    content: public IList<TypeInfo> ViewComponents { get; }
    content.vb: Public ReadOnly Property ViewComponents As IList(Of TypeInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.TypeInfo}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  commentId: T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
  parent: Microsoft.AspNetCore.Mvc.ViewComponents
  isExternal: false
  name: ViewComponentFeature
  nameWithType: ViewComponentFeature
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPartManager
  nameWithType: ApplicationPartManager
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
- uid: Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager
  commentId: P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager
  parent: Microsoft.Extensions.DependencyInjection.IMvcBuilder
  isExternal: false
  name: PartManager
  nameWithType: IMvcBuilder.PartManager
  fullName: Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
  commentId: P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
  parent: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  isExternal: false
  name: PartManager
  nameWithType: IMvcCoreBuilder.PartManager
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager
- uid: Microsoft.AspNetCore.Mvc.ViewComponents
  commentId: N:Microsoft.AspNetCore.Mvc.ViewComponents
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewComponents
  nameWithType: Microsoft.AspNetCore.Mvc.ViewComponents
  fullName: Microsoft.AspNetCore.Mvc.ViewComponents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: Microsoft.Extensions.DependencyInjection.IMvcBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IMvcBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IMvcBuilder
  nameWithType: IMvcBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IMvcBuilder
- uid: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IMvcCoreBuilder
  nameWithType: IMvcCoreBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Collections.Generic.IList{System.Reflection.TypeInfo}
  commentId: T:System.Collections.Generic.IList{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TypeInfo>
  nameWithType: IList<TypeInfo>
  fullName: System.Collections.Generic.IList<System.Reflection.TypeInfo>
  nameWithType.vb: IList(Of TypeInfo)
  fullname.vb: System.Collections.Generic.IList(Of System.Reflection.TypeInfo)
  name.vb: IList(Of TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
