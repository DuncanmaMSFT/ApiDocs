### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider
  id: IActionHttpMethodProvider
  parent: Microsoft.AspNetCore.Mvc.Routing
  children:
  - Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider.HttpMethods
  langs:
  - csharp
  - vb
  name: IActionHttpMethodProvider
  nameWithType: IActionHttpMethodProvider
  fullName: Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionHttpMethodProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IActionHttpMethodProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionHttpMethodProvider.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Routing
  syntax:
    content: public interface IActionHttpMethodProvider
    content.vb: Public Interface IActionHttpMethodProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider.HttpMethods
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider.HttpMethods
  id: HttpMethods
  parent: Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider
  langs:
  - csharp
  - vb
  name: HttpMethods
  nameWithType: IActionHttpMethodProvider.HttpMethods
  fullName: Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider.HttpMethods
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionHttpMethodProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpMethods
    path: src/Microsoft.AspNetCore.Mvc.Core/Routing/IActionHttpMethodProvider.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Routing
  syntax:
    content: IEnumerable<string> HttpMethods { get; }
    content.vb: ReadOnly Property HttpMethods As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Routing
  commentId: N:Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Routing
  nameWithType: Microsoft.AspNetCore.Mvc.Routing
  fullName: Microsoft.AspNetCore.Mvc.Routing
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
