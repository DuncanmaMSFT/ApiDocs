### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  id: AuthorizeFilter
  parent: Microsoft.AspNetCore.Mvc.Authorization
  children:
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy
  - Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider
  langs:
  - csharp
  - vb
  name: AuthorizeFilter
  nameWithType: AuthorizeFilter
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AuthorizeFilter
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nAn implementation of <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter\" data-throw-if-not-resolved=\"false\"></xref> which applies a specific\n<xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref>. MVC recognizes the <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizeAttribute\" data-throw-if-not-resolved=\"false\"></xref> and adds an instance of\nthis filter to the associated action or controller.\n"
  example: []
  syntax:
    content: 'public class AuthorizeFilter : IAsyncAuthorizationFilter, IFilterMetadata'
    content.vb: >-
      Public Class AuthorizeFilter
          Implements IAsyncAuthorizationFilter, IFilterMetadata
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  - Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  id: '#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)'
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: AuthorizeFilter(AuthorizationPolicy)
  nameWithType: AuthorizeFilter.AuthorizeFilter(AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeFilter(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nInitialize a new <xref href=\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public AuthorizeFilter(AuthorizationPolicy policy)
    content.vb: Public Sub New(policy As AuthorizationPolicy)
    parameters:
    - id: policy
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: Authorization policy to be used.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  commentId: M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  id: '#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})'
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: AuthorizeFilter(IAuthorizationPolicyProvider, IEnumerable<IAuthorizeData>)
  nameWithType: AuthorizeFilter.AuthorizeFilter(IAuthorizationPolicyProvider, IEnumerable<IAuthorizeData>)
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeFilter(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizeData>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nInitialize a new <xref href=\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public AuthorizeFilter(IAuthorizationPolicyProvider policyProvider, IEnumerable<IAuthorizeData> authorizeData)
    content.vb: Public Sub New(policyProvider As IAuthorizationPolicyProvider, authorizeData As IEnumerable(Of IAuthorizeData))
    parameters:
    - id: policyProvider
      type: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
      description: The <xref href="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" data-throw-if-not-resolved="false"></xref> to use to resolve policy names.
    - id: authorizeData
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
      description: The <xref href="Microsoft.AspNetCore.Authorization.IAuthorizeData" data-throw-if-not-resolved="false"></xref> to combine into an <xref href="Microsoft.AspNetCore.Authorization.IAuthorizeData" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: AuthorizeFilter.AuthorizeFilter(IAuthorizationPolicyProvider, IEnumerable(Of IAuthorizeData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeFilter(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizeData))
  name.vb: AuthorizeFilter(IAuthorizationPolicyProvider, IEnumerable(Of IAuthorizeData))
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider
  commentId: P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider
  id: PolicyProvider
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: PolicyProvider
  nameWithType: AuthorizeFilter.PolicyProvider
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PolicyProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider\" data-throw-if-not-resolved=\"false\"></xref> to use to resolve policy names.\n"
  example: []
  syntax:
    content: public IAuthorizationPolicyProvider PolicyProvider { get; }
    content.vb: Public ReadOnly Property PolicyProvider As IAuthorizationPolicyProvider
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData
  commentId: P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData
  id: AuthorizeData
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: AuthorizeData
  nameWithType: AuthorizeFilter.AuthorizeData
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AuthorizeData
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizeData\" data-throw-if-not-resolved=\"false\"></xref> to combine into an <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizeData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerable<IAuthorizeData> AuthorizeData { get; }
    content.vb: Public ReadOnly Property AuthorizeData As IEnumerable(Of IAuthorizeData)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy
  commentId: P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy
  id: Policy
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: Policy
  nameWithType: AuthorizeFilter.Policy
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Policy
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  summary: "\nGets the authorization policy to be used.  If null, the policy will be constructed via\nAuthorizePolicy.CombineAsync(PolicyProvider, AuthorizeData)\n"
  example: []
  syntax:
    content: public AuthorizationPolicy Policy { get; }
    content.vb: Public ReadOnly Property Policy As AuthorizationPolicy
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  id: OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  parent: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  langs:
  - csharp
  - vb
  name: OnAuthorizationAsync(AuthorizationFilterContext)
  nameWithType: AuthorizeFilter.OnAuthorizationAsync(AuthorizationFilterContext)
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnAuthorizationAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Authorization/AuthorizeFilter.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Authorization
  example: []
  syntax:
    content: public virtual Task OnAuthorizationAsync(AuthorizationFilterContext context)
    content.vb: Public Overridable Function OnAuthorizationAsync(context As AuthorizationFilterContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncAuthorizationFilter
  nameWithType: IAsyncAuthorizationFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  isExternal: true
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
- uid: Microsoft.AspNetCore.Authorization.AuthorizeAttribute
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizeAttribute
- uid: Microsoft.AspNetCore.Mvc.Authorization
  commentId: N:Microsoft.AspNetCore.Mvc.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Authorization
  nameWithType: Microsoft.AspNetCore.Mvc.Authorization
  fullName: Microsoft.AspNetCore.Mvc.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
  isExternal: false
  name: AuthorizeFilter
  nameWithType: AuthorizeFilter
  fullName: Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  parent: Microsoft.AspNetCore.Authorization
  isExternal: true
  name: IAuthorizationPolicyProvider
  nameWithType: IAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
- uid: Microsoft.AspNetCore.Authorization.IAuthorizeData
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizeData
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizeData>
  nameWithType: IEnumerable<IAuthorizeData>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizeData>
  nameWithType.vb: IEnumerable(Of IAuthorizeData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizeData)
  name.vb: IEnumerable(Of IAuthorizeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizeData
    name: IAuthorizeData
    nameWithType: IAuthorizeData
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizeData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizeData
    name: IAuthorizeData
    nameWithType: IAuthorizeData
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizeData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  parent: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  isExternal: false
  name: OnAuthorizationAsync(AuthorizationFilterContext)
  nameWithType: IAsyncAuthorizationFilter.OnAuthorizationAsync(AuthorizationFilterContext)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
    name: OnAuthorizationAsync
    nameWithType: IAsyncAuthorizationFilter.OnAuthorizationAsync
    fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    name: AuthorizationFilterContext
    nameWithType: AuthorizationFilterContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)
    name: OnAuthorizationAsync
    nameWithType: IAsyncAuthorizationFilter.OnAuthorizationAsync
    fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    name: AuthorizationFilterContext
    nameWithType: AuthorizationFilterContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: AuthorizationFilterContext
  nameWithType: AuthorizationFilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
