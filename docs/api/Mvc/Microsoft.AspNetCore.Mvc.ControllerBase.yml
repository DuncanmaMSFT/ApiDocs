### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ControllerBase
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerBase
  id: ControllerBase
  parent: Microsoft.AspNetCore.Mvc
  children:
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  - Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  - Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  - Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  - Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  - Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Request
  - Microsoft.AspNetCore.Mvc.ControllerBase.Response
  - Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  - Microsoft.AspNetCore.Mvc.ControllerBase.Url
  - Microsoft.AspNetCore.Mvc.ControllerBase.User
  langs:
  - csharp
  - vb
  name: ControllerBase
  nameWithType: ControllerBase
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerBase
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nA base class for an MVC controller without view support.\n"
  example: []
  syntax:
    content: public abstract class ControllerBase
    content.vb: Public MustInherit Class ControllerBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  id: HttpContext
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: ControllerBase.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpContext
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> for the executing action.\n"
  example: []
  syntax:
    content: public HttpContext HttpContext { get; }
    content.vb: Public ReadOnly Property HttpContext As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Request
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Request
  id: Request
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: ControllerBase.Request
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Request
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref> for the executing action.\n"
  example: []
  syntax:
    content: public HttpRequest Request { get; }
    content.vb: Public ReadOnly Property Request As HttpRequest
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpRequest
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Response
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Response
  id: Response
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: ControllerBase.Response
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Response
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Response
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref> for the executing action.\n"
  example: []
  syntax:
    content: public HttpResponse Response { get; }
    content.vb: Public ReadOnly Property Response As HttpResponse
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpResponse
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  id: RouteData
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RouteData
  nameWithType: ControllerBase.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RouteData
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Routing.RouteData\" data-throw-if-not-resolved=\"false\"></xref> for the executing action.\n"
  example: []
  syntax:
    content: public RouteData RouteData { get; }
    content.vb: Public ReadOnly Property RouteData As RouteData
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteData
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  id: ModelState
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: ModelState
  nameWithType: ControllerBase.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelState
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> that contains the state of the model and of model-binding validation.\n"
  example: []
  syntax:
    content: public ModelStateDictionary ModelState { get; }
    content.vb: Public ReadOnly Property ModelState As ModelStateDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  id: ControllerContext
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: ControllerContext
  nameWithType: ControllerBase.ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerContext
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ControllerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<xref href=\"Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator\" data-throw-if-not-resolved=\"false\"></xref> activates this property while activating controllers.\nIf user code directly instantiates a controller, the getter returns an empty\n<xref href=\"Microsoft.AspNetCore.Mvc.ControllerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ControllerContext ControllerContext { get; set; }
    content.vb: Public Property ControllerContext As ControllerContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ControllerContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  id: MetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: MetadataProvider
  nameWithType: ControllerBase.MetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MetadataProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IModelMetadataProvider MetadataProvider { get; set; }
    content.vb: Public Property MetadataProvider As IModelMetadataProvider
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  id: ModelBinderFactory
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: ModelBinderFactory
  nameWithType: ControllerBase.ModelBinderFactory
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBinderFactory
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 149
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IModelBinderFactory ModelBinderFactory { get; set; }
    content.vb: Public Property ModelBinderFactory As IModelBinderFactory
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Url
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Url
  id: Url
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: ControllerBase.Url
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Url
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Url
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 174
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IUrlHelper Url { get; set; }
    content.vb: Public Property Url As IUrlHelper
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  id: ObjectValidator
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: ObjectValidator
  nameWithType: ControllerBase.ObjectValidator
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ObjectValidator
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IObjectModelValidator ObjectValidator { get; set; }
    content.vb: Public Property ObjectValidator As IObjectModelValidator
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.User
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.User
  id: User
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ControllerBase.User
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.User
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: User
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 225
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nGets or sets the <xref href=\"System.Security.Claims.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> for user associated with the executing action.\n"
  example: []
  syntax:
    content: public ClaimsPrincipal User { get; }
    content.vb: Public ReadOnly Property User As ClaimsPrincipal
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  id: StatusCode(System.Int32)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: StatusCode(Int32)
  nameWithType: ControllerBase.StatusCode(Int32)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StatusCode
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 238
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.StatusCodeResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>statusCode</em>.\n"
  example: []
  syntax:
    content: public virtual StatusCodeResult StatusCode(int statusCode)
    content.vb: Public Overridable Function StatusCode(statusCode As Integer) As StatusCodeResult
    parameters:
    - id: statusCode
      type: System.Int32
      description: The status code to set on the response.
    return:
      type: Microsoft.AspNetCore.Mvc.StatusCodeResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.StatusCodeResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  id: StatusCode(System.Int32,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: StatusCode(Int32, Object)
  nameWithType: ControllerBase.StatusCode(Int32, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: StatusCode
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 250
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ObjectResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>statusCode</em> and <em>value</em>\n"
  example: []
  syntax:
    content: public virtual ObjectResult StatusCode(int statusCode, object value)
    content.vb: Public Overridable Function StatusCode(statusCode As Integer, value As Object) As ObjectResult
    parameters:
    - id: statusCode
      type: System.Int32
      description: The status code to set on the response.
    - id: value
      type: System.Object
      description: The value to set on the <xref href="Microsoft.AspNetCore.Mvc.ObjectResult" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Mvc.ObjectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ObjectResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  id: Content(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Content(String)
  nameWithType: ControllerBase.Content(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 264
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ContentResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>content</em> string.\n"
  example: []
  syntax:
    content: public virtual ContentResult Content(string content)
    content.vb: Public Overridable Function Content(content As String) As ContentResult
    parameters:
    - id: content
      type: System.String
      description: The content to write to the response.
    return:
      type: Microsoft.AspNetCore.Mvc.ContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ContentResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  id: Content(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Content(String, String)
  nameWithType: ControllerBase.Content(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 277
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ContentResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>content</em> string\nand a content type.\n"
  example: []
  syntax:
    content: public virtual ContentResult Content(string content, string contentType)
    content.vb: Public Overridable Function Content(content As String, contentType As String) As ContentResult
    parameters:
    - id: content
      type: System.String
      description: The content to write to the response.
    - id: contentType
      type: System.String
      description: The content type (MIME type).
    return:
      type: Microsoft.AspNetCore.Mvc.ContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ContentResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  id: Content(System.String,System.String,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Content(String, String, Encoding)
  nameWithType: ControllerBase.Content(String, String, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 295
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ContentResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>content</em> string,\na <em>contentType</em>, and <em>contentEncoding</em>.\n"
  remarks: "\nIf encoding is provided by both the 'charset' and the <em>contentEncoding</em> parameters, then\nthe <em>contentEncoding</em> parameter is chosen as the final encoding.\n"
  example: []
  syntax:
    content: public virtual ContentResult Content(string content, string contentType, Encoding contentEncoding)
    content.vb: Public Overridable Function Content(content As String, contentType As String, contentEncoding As Encoding) As ContentResult
    parameters:
    - id: content
      type: System.String
      description: The content to write to the response.
    - id: contentType
      type: System.String
      description: The content type (MIME type).
    - id: contentEncoding
      type: System.Text.Encoding
      description: The content encoding.
    return:
      type: Microsoft.AspNetCore.Mvc.ContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ContentResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  id: Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Content(String, MediaTypeHeaderValue)
  nameWithType: ControllerBase.Content(String, MediaTypeHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Content
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 310
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ContentResult\" data-throw-if-not-resolved=\"false\"></xref> object by specifying a <em>content</em>\nstring and a <em>contentType</em>.\n"
  example: []
  syntax:
    content: public virtual ContentResult Content(string content, MediaTypeHeaderValue contentType)
    content.vb: Public Overridable Function Content(content As String, contentType As MediaTypeHeaderValue) As ContentResult
    parameters:
    - id: content
      type: System.String
      description: The content to write to the response.
    - id: contentType
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: The content type (MIME type).
    return:
      type: Microsoft.AspNetCore.Mvc.ContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ContentResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  id: NoContent
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: NoContent()
  nameWithType: ControllerBase.NoContent()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NoContent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 326
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.NoContentResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces an empty No Content (204) response.\n"
  example: []
  syntax:
    content: public virtual NoContentResult NoContent()
    content.vb: Public Overridable Function NoContent As NoContentResult
    return:
      type: Microsoft.AspNetCore.Mvc.NoContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.NoContentResult" data-throw-if-not-resolved="false"></xref> object for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  id: Ok
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Ok()
  nameWithType: ControllerBase.Ok()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Ok
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 336
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.OkResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces an empty OK (200) response.\n"
  example: []
  syntax:
    content: public virtual OkResult Ok()
    content.vb: Public Overridable Function Ok As OkResult
    return:
      type: Microsoft.AspNetCore.Mvc.OkResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.OkResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  id: Ok(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Ok(Object)
  nameWithType: ControllerBase.Ok(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Ok
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 347
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.OkObjectResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces an OK (200) response.\n"
  example: []
  syntax:
    content: public virtual OkObjectResult Ok(object value)
    content.vb: Public Overridable Function Ok(value As Object) As OkObjectResult
    parameters:
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.OkObjectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.OkObjectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  id: Redirect(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Redirect(String)
  nameWithType: ControllerBase.Redirect(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Redirect
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 358
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.RedirectResult\" data-throw-if-not-resolved=\"false\"></xref> object that redirects to the specified <em>url</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectResult Redirect(string url)
    content.vb: Public Overridable Function Redirect(url As String) As RedirectResult
    parameters:
    - id: url
      type: System.String
      description: The URL to redirect to.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  id: RedirectPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectPermanent(String)
  nameWithType: ControllerBase.RedirectPermanent(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 375
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.RedirectResult\" data-throw-if-not-resolved=\"false\"></xref> object with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>url</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectResult RedirectPermanent(string url)
    content.vb: Public Overridable Function RedirectPermanent(url As String) As RedirectResult
    parameters:
    - id: url
      type: System.String
      description: The URL to redirect to.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  id: LocalRedirect(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: LocalRedirect(String)
  nameWithType: ControllerBase.LocalRedirect(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: LocalRedirect
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 392
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.LocalRedirectResult\" data-throw-if-not-resolved=\"false\"></xref> object that redirects to\nthe specified local <em>localUrl</em>.\n"
  example: []
  syntax:
    content: public virtual LocalRedirectResult LocalRedirect(string localUrl)
    content.vb: Public Overridable Function LocalRedirect(localUrl As String) As LocalRedirectResult
    parameters:
    - id: localUrl
      type: System.String
      description: The local URL to redirect to.
    return:
      type: Microsoft.AspNetCore.Mvc.LocalRedirectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.LocalRedirectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  id: LocalRedirectPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: LocalRedirectPermanent(String)
  nameWithType: ControllerBase.LocalRedirectPermanent(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: LocalRedirectPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 409
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.LocalRedirectResult\" data-throw-if-not-resolved=\"false\"></xref> object with <xref href=\"Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref>\nset to true using the specified <em>localUrl</em>.\n"
  example: []
  syntax:
    content: public virtual LocalRedirectResult LocalRedirectPermanent(string localUrl)
    content.vb: Public Overridable Function LocalRedirectPermanent(localUrl As String) As LocalRedirectResult
    parameters:
    - id: localUrl
      type: System.String
      description: The local URL to redirect to.
    return:
      type: Microsoft.AspNetCore.Mvc.LocalRedirectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.LocalRedirectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  id: RedirectToAction(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToAction(String)
  nameWithType: ControllerBase.RedirectToAction(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 425
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action using the <em>actionName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToAction(string actionName)
    content.vb: Public Overridable Function RedirectToAction(actionName As String) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  id: RedirectToAction(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToAction(String, Object)
  nameWithType: ControllerBase.RedirectToAction(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 438
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action using the <em>actionName</em>\nand <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToAction(string actionName, object routeValues)
    content.vb: Public Overridable Function RedirectToAction(actionName As String, routeValues As Object) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  id: RedirectToAction(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToAction(String, String)
  nameWithType: ControllerBase.RedirectToAction(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 451
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action using the <em>actionName</em>\nand the <em>controllerName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName)
    content.vb: Public Overridable Function RedirectToAction(actionName As String, controllerName As String) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: controllerName
      type: System.String
      description: The name of the controller.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  id: RedirectToAction(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToAction(String, String, Object)
  nameWithType: ControllerBase.RedirectToAction(String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 465
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action using the specified <em>actionName</em>,\n<em>controllerName</em>, and <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName, object routeValues)
    content.vb: Public Overridable Function RedirectToAction(actionName As String, controllerName As String, routeValues As Object) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: controllerName
      type: System.String
      description: The name of the controller.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  id: RedirectToActionPermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToActionPermanent(String)
  nameWithType: ControllerBase.RedirectToActionPermanent(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToActionPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 483
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>actionName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToActionPermanent(string actionName)
    content.vb: Public Overridable Function RedirectToActionPermanent(actionName As String) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  id: RedirectToActionPermanent(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToActionPermanent(String, Object)
  nameWithType: ControllerBase.RedirectToActionPermanent(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToActionPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 496
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>actionName</em> and <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, object routeValues)
    content.vb: Public Overridable Function RedirectToActionPermanent(actionName As String, routeValues As Object) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  id: RedirectToActionPermanent(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToActionPermanent(String, String)
  nameWithType: ControllerBase.RedirectToActionPermanent(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToActionPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 509
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>actionName</em> and <em>controllerName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName)
    content.vb: Public Overridable Function RedirectToActionPermanent(actionName As String, controllerName As String) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: controllerName
      type: System.String
      description: The name of the controller.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  id: RedirectToActionPermanent(System.String,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToActionPermanent(String, String, Object)
  nameWithType: ControllerBase.RedirectToActionPermanent(String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToActionPermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 524
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified action with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>actionName</em>, <em>controllerName</em>,\nand <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, object routeValues)
    content.vb: Public Overridable Function RedirectToActionPermanent(actionName As String, controllerName As String, routeValues As Object) As RedirectToActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action.
    - id: controllerName
      type: System.String
      description: The name of the controller.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  id: RedirectToRoute(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoute(String)
  nameWithType: ControllerBase.RedirectToRoute(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 545
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route using the specified <em>routeName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoute(string routeName)
    content.vb: Public Overridable Function RedirectToRoute(routeName As String) As RedirectToRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  id: RedirectToRoute(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoute(Object)
  nameWithType: ControllerBase.RedirectToRoute(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 556
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route using the specified <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoute(object routeValues)
    content.vb: Public Overridable Function RedirectToRoute(routeValues As Object) As RedirectToRouteResult
    parameters:
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoute(String, Object)
  nameWithType: ControllerBase.RedirectToRoute(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 569
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route using the specified <em>routeName</em>\nand <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoute(string routeName, object routeValues)
    content.vb: Public Overridable Function RedirectToRoute(routeName As String, routeValues As Object) As RedirectToRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  id: RedirectToRoutePermanent(System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoutePermanent(String)
  nameWithType: ControllerBase.RedirectToRoutePermanent(String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoutePermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 584
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>routeName</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName)
    content.vb: Public Overridable Function RedirectToRoutePermanent(routeName As String) As RedirectToRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  id: RedirectToRoutePermanent(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoutePermanent(Object)
  nameWithType: ControllerBase.RedirectToRoutePermanent(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoutePermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 596
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoutePermanent(object routeValues)
    content.vb: Public Overridable Function RedirectToRoutePermanent(routeValues As Object) As RedirectToRouteResult
    parameters:
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  id: RedirectToRoutePermanent(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: RedirectToRoutePermanent(String, Object)
  nameWithType: ControllerBase.RedirectToRoutePermanent(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RedirectToRoutePermanent
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 609
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nRedirects to the specified route with <xref href=\"Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent\" data-throw-if-not-resolved=\"false\"></xref> set to true\nusing the specified <em>routeName</em> and <em>routeValues</em>.\n"
  example: []
  syntax:
    content: public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName, object routeValues)
    content.vb: Public Overridable Function RedirectToRoutePermanent(routeName As String, routeValues As Object) As RedirectToRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route.
    - id: routeValues
      type: System.Object
      description: The parameters for a route.
    return:
      type: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.RedirectToRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  id: File(System.Byte[],System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(Byte[], String)
  nameWithType: ControllerBase.File(Byte[], String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 625
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns a file with the specified <em>fileContents</em> as content and the\nspecified <em>contentType</em> as the Content-Type.\n"
  example: []
  syntax:
    content: public virtual FileContentResult File(byte[] fileContents, string contentType)
    content.vb: Public Overridable Function File(fileContents As Byte(), contentType As String) As FileContentResult
    parameters:
    - id: fileContents
      type: System.Byte[]
      description: The file contents.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    return:
      type: Microsoft.AspNetCore.Mvc.FileContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.FileContentResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.File(Byte(), String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte(), System.String)
  name.vb: File(Byte(), String)
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  id: File(System.Byte[],System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(Byte[], String, String)
  nameWithType: ControllerBase.File(Byte[], String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 640
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns a file with the specified <em>fileContents</em> as content, the\nspecified <em>contentType</em> as the Content-Type and the\nspecified <em>fileDownloadName</em> as the suggested file name.\n"
  example: []
  syntax:
    content: public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName)
    content.vb: Public Overridable Function File(fileContents As Byte(), contentType As String, fileDownloadName As String) As FileContentResult
    parameters:
    - id: fileContents
      type: System.Byte[]
      description: The file contents.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    - id: fileDownloadName
      type: System.String
      description: The suggested file name.
    return:
      type: Microsoft.AspNetCore.Mvc.FileContentResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.FileContentResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.File(Byte(), String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte(), System.String, System.String)
  name.vb: File(Byte(), String, String)
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  id: File(System.IO.Stream,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(Stream, String)
  nameWithType: ControllerBase.File(Stream, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 653
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns a file in the specified <em>fileStream</em> with the\nspecified <em>contentType</em> as the Content-Type.\n"
  example: []
  syntax:
    content: public virtual FileStreamResult File(Stream fileStream, string contentType)
    content.vb: Public Overridable Function File(fileStream As Stream, contentType As String) As FileStreamResult
    parameters:
    - id: fileStream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> with the contents of the file.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    return:
      type: Microsoft.AspNetCore.Mvc.FileStreamResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.FileStreamResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  id: File(System.IO.Stream,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(Stream, String, String)
  nameWithType: ControllerBase.File(Stream, String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 668
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns a file in the specified <em>fileStream</em> with the\nspecified <em>contentType</em> as the Content-Type and the\nspecified <em>fileDownloadName</em> as the suggested file name.\n"
  example: []
  syntax:
    content: public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName)
    content.vb: Public Overridable Function File(fileStream As Stream, contentType As String, fileDownloadName As String) As FileStreamResult
    parameters:
    - id: fileStream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> with the contents of the file.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    - id: fileDownloadName
      type: System.String
      description: The suggested file name.
    return:
      type: Microsoft.AspNetCore.Mvc.FileStreamResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.FileStreamResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  id: File(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(String, String)
  nameWithType: ControllerBase.File(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 681
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns the file specified by <em>virtualPath</em> with the\nspecified <em>contentType</em> as the Content-Type.\n"
  example: []
  syntax:
    content: public virtual VirtualFileResult File(string virtualPath, string contentType)
    content.vb: Public Overridable Function File(virtualPath As String, contentType As String) As VirtualFileResult
    parameters:
    - id: virtualPath
      type: System.String
      description: The virtual path of the file to be returned.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    return:
      type: Microsoft.AspNetCore.Mvc.VirtualFileResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.VirtualFileResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  id: File(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: File(String, String, String)
  nameWithType: ControllerBase.File(String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: File
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 696
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns the file specified by <em>virtualPath</em> with the\nspecified <em>contentType</em> as the Content-Type and the\nspecified <em>fileDownloadName</em> as the suggested file name.\n"
  example: []
  syntax:
    content: public virtual VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName)
    content.vb: Public Overridable Function File(virtualPath As String, contentType As String, fileDownloadName As String) As VirtualFileResult
    parameters:
    - id: virtualPath
      type: System.String
      description: The virtual path of the file to be returned.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    - id: fileDownloadName
      type: System.String
      description: The suggested file name.
    return:
      type: Microsoft.AspNetCore.Mvc.VirtualFileResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.VirtualFileResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  id: PhysicalFile(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: PhysicalFile(String, String)
  nameWithType: ControllerBase.PhysicalFile(String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PhysicalFile
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 709
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns the file specified by <em>physicalPath</em> with the\nspecified <em>contentType</em> as the Content-Type.\n"
  example: []
  syntax:
    content: public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType)
    content.vb: Public Overridable Function PhysicalFile(physicalPath As String, contentType As String) As PhysicalFileResult
    parameters:
    - id: physicalPath
      type: System.String
      description: The physical path of the file to be returned.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    return:
      type: Microsoft.AspNetCore.Mvc.PhysicalFileResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.PhysicalFileResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  id: PhysicalFile(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: PhysicalFile(String, String, String)
  nameWithType: ControllerBase.PhysicalFile(String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PhysicalFile
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 724
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nReturns the file specified by <em>physicalPath</em> with the\nspecified <em>contentType</em> as the Content-Type and the\nspecified <em>fileDownloadName</em> as the suggested file name.\n"
  example: []
  syntax:
    content: public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName)
    content.vb: Public Overridable Function PhysicalFile(physicalPath As String, contentType As String, fileDownloadName As String) As PhysicalFileResult
    parameters:
    - id: physicalPath
      type: System.String
      description: The physical path of the file to be returned.
    - id: contentType
      type: System.String
      description: The Content-Type of the file.
    - id: fileDownloadName
      type: System.String
      description: The suggested file name.
    return:
      type: Microsoft.AspNetCore.Mvc.PhysicalFileResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.PhysicalFileResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  id: Unauthorized
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Unauthorized()
  nameWithType: ControllerBase.Unauthorized()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Unauthorized
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 737
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.UnauthorizedResult\" data-throw-if-not-resolved=\"false\"></xref> that produces an Unauthorized (401) response.\n"
  example: []
  syntax:
    content: public virtual UnauthorizedResult Unauthorized()
    content.vb: Public Overridable Function Unauthorized As UnauthorizedResult
    return:
      type: Microsoft.AspNetCore.Mvc.UnauthorizedResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.UnauthorizedResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  id: NotFound
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: NotFound()
  nameWithType: ControllerBase.NotFound()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NotFound
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 747
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.NotFoundResult\" data-throw-if-not-resolved=\"false\"></xref> that produces a Not Found (404) response.\n"
  example: []
  syntax:
    content: public virtual NotFoundResult NotFound()
    content.vb: Public Overridable Function NotFound As NotFoundResult
    return:
      type: Microsoft.AspNetCore.Mvc.NotFoundResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.NotFoundResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  id: NotFound(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: NotFound(Object)
  nameWithType: ControllerBase.NotFound(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NotFound
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 757
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.NotFoundObjectResult\" data-throw-if-not-resolved=\"false\"></xref> that produces a Not Found (404) response.\n"
  example: []
  syntax:
    content: public virtual NotFoundObjectResult NotFound(object value)
    content.vb: Public Overridable Function NotFound(value As Object) As NotFoundObjectResult
    parameters:
    - id: value
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.NotFoundObjectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  id: BadRequest
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: BadRequest()
  nameWithType: ControllerBase.BadRequest()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 767
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.BadRequestResult\" data-throw-if-not-resolved=\"false\"></xref> that produces a Bad Request (400) response.\n"
  example: []
  syntax:
    content: public virtual BadRequestResult BadRequest()
    content.vb: Public Overridable Function BadRequest As BadRequestResult
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.BadRequestResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  id: BadRequest(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: BadRequest(Object)
  nameWithType: ControllerBase.BadRequest(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 777
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.BadRequestObjectResult\" data-throw-if-not-resolved=\"false\"></xref> that produces a Bad Request (400) response.\n"
  example: []
  syntax:
    content: public virtual BadRequestObjectResult BadRequest(object error)
    content.vb: Public Overridable Function BadRequest(error As Object) As BadRequestObjectResult
    parameters:
    - id: error
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.BadRequestObjectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: BadRequest(ModelStateDictionary)
  nameWithType: ControllerBase.BadRequest(ModelStateDictionary)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BadRequest
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 787
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.BadRequestObjectResult\" data-throw-if-not-resolved=\"false\"></xref> that produces a Bad Request (400) response.\n"
  example: []
  syntax:
    content: public virtual BadRequestObjectResult BadRequest(ModelStateDictionary modelState)
    content.vb: Public Overridable Function BadRequest(modelState As ModelStateDictionary) As BadRequestObjectResult
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.BadRequestObjectResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  id: Created(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Created(String, Object)
  nameWithType: ControllerBase.Created(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Created
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 804
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedResult Created(string uri, object value)
    content.vb: Public Overridable Function Created(uri As String, value As Object) As CreatedResult
    parameters:
    - id: uri
      type: System.String
      description: The URI at which the content has been created.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  id: Created(System.Uri,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Created(Uri, Object)
  nameWithType: ControllerBase.Created(Uri, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Created
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 821
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedResult Created(Uri uri, object value)
    content.vb: Public Overridable Function Created(uri As Uri, value As Object) As CreatedResult
    parameters:
    - id: uri
      type: System.Uri
      description: The URI at which the content has been created.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  id: CreatedAtAction(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtAction(String, Object)
  nameWithType: ControllerBase.CreatedAtAction(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 838
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtActionResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtActionResult CreatedAtAction(string actionName, object value)
    content.vb: Public Overridable Function CreatedAtAction(actionName As String, value As Object) As CreatedAtActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  id: CreatedAtAction(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtAction(String, Object, Object)
  nameWithType: ControllerBase.CreatedAtAction(String, Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 851
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtActionResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtActionResult CreatedAtAction(string actionName, object routeValues, object value)
    content.vb: Public Overridable Function CreatedAtAction(actionName As String, routeValues As Object, value As Object) As CreatedAtActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action to use for generating the URL.
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  id: CreatedAtAction(System.String,System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtAction(String, String, Object, Object)
  nameWithType: ControllerBase.CreatedAtAction(String, String, Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtAction
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 865
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtActionResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtActionResult CreatedAtAction(string actionName, string controllerName, object routeValues, object value)
    content.vb: Public Overridable Function CreatedAtAction(actionName As String, controllerName As String, routeValues As Object, value As Object) As CreatedAtActionResult
    parameters:
    - id: actionName
      type: System.String
      description: The name of the action to use for generating the URL.
    - id: controllerName
      type: System.String
      description: The name of the controller to use for generating the URL.
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtActionResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtActionResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  id: CreatedAtRoute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtRoute(String, Object)
  nameWithType: ControllerBase.CreatedAtRoute(String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 881
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtRouteResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object value)
    content.vb: Public Overridable Function CreatedAtRoute(routeName As String, value As Object) As CreatedAtRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  id: CreatedAtRoute(System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtRoute(Object, Object)
  nameWithType: ControllerBase.CreatedAtRoute(Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 893
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtRouteResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtRouteResult CreatedAtRoute(object routeValues, object value)
    content.vb: Public Overridable Function CreatedAtRoute(routeValues As Object, value As Object) As CreatedAtRouteResult
    parameters:
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  id: CreatedAtRoute(System.String,System.Object,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: CreatedAtRoute(String, Object, Object)
  nameWithType: ControllerBase.CreatedAtRoute(String, Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreatedAtRoute
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 906
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.CreatedAtRouteResult\" data-throw-if-not-resolved=\"false\"></xref> object that produces a Created (201) response.\n"
  example: []
  syntax:
    content: public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object routeValues, object value)
    content.vb: Public Overridable Function CreatedAtRoute(routeName As String, routeValues As Object, value As Object) As CreatedAtRouteResult
    parameters:
    - id: routeName
      type: System.String
      description: The name of the route to use for generating the URL.
    - id: routeValues
      type: System.Object
      description: The route data to use for generating the URL.
    - id: value
      type: System.Object
      description: The content value to format in the entity body.
    return:
      type: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  id: Challenge
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Challenge()
  nameWithType: ControllerBase.Challenge()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Challenge
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 916
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ChallengeResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual ChallengeResult Challenge()
    content.vb: Public Overridable Function Challenge As ChallengeResult
    return:
      type: Microsoft.AspNetCore.Mvc.ChallengeResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ChallengeResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  id: Challenge(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Challenge(String[])
  nameWithType: ControllerBase.Challenge(String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Challenge
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 925
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ChallengeResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified authentication schemes.\n"
  example: []
  syntax:
    content: public virtual ChallengeResult Challenge(params string[] authenticationSchemes)
    content.vb: Public Overridable Function Challenge(ParamArray authenticationSchemes As String()) As ChallengeResult
    parameters:
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication schemes to challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ChallengeResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ChallengeResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.Challenge(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String())
  name.vb: Challenge(String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  id: Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Challenge(AuthenticationProperties)
  nameWithType: ControllerBase.Challenge(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Challenge
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 935
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ChallengeResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified <em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual ChallengeResult Challenge(AuthenticationProperties properties)
    content.vb: Public Overridable Function Challenge(properties As AuthenticationProperties) As ChallengeResult
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: >-
        <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the authentication
            challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ChallengeResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ChallengeResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  id: Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Challenge(AuthenticationProperties, String[])
  nameWithType: ControllerBase.Challenge(AuthenticationProperties, String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Challenge
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 947
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ChallengeResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified specified authentication schemes and\n<em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual ChallengeResult Challenge(AuthenticationProperties properties, params string[] authenticationSchemes)
    content.vb: Public Overridable Function Challenge(properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As ChallengeResult
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: >-
        <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the authentication
            challenge.
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication schemes to challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ChallengeResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ChallengeResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.Challenge(AuthenticationProperties, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String())
  name.vb: Challenge(AuthenticationProperties, String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  id: Forbid
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Forbid()
  nameWithType: ControllerBase.Forbid()
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Forbid
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 957
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ForbidResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual ForbidResult Forbid()
    content.vb: Public Overridable Function Forbid As ForbidResult
    return:
      type: Microsoft.AspNetCore.Mvc.ForbidResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ForbidResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  id: Forbid(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Forbid(String[])
  nameWithType: ControllerBase.Forbid(String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Forbid
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 966
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ForbidResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified authentication schemes.\n"
  example: []
  syntax:
    content: public virtual ForbidResult Forbid(params string[] authenticationSchemes)
    content.vb: Public Overridable Function Forbid(ParamArray authenticationSchemes As String()) As ForbidResult
    parameters:
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication schemes to challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ForbidResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ForbidResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.Forbid(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String())
  name.vb: Forbid(String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  id: Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Forbid(AuthenticationProperties)
  nameWithType: ControllerBase.Forbid(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Forbid
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 976
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ForbidResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified <em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual ForbidResult Forbid(AuthenticationProperties properties)
    content.vb: Public Overridable Function Forbid(properties As AuthenticationProperties) As ForbidResult
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: >-
        <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the authentication
            challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ForbidResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ForbidResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  id: Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: Forbid(AuthenticationProperties, String[])
  nameWithType: ControllerBase.Forbid(AuthenticationProperties, String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Forbid
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 988
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.ForbidResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified specified authentication schemes and\n<em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual ForbidResult Forbid(AuthenticationProperties properties, params string[] authenticationSchemes)
    content.vb: Public Overridable Function Forbid(properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As ForbidResult
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: >-
        <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the authentication
            challenge.
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication schemes to challenge.
    return:
      type: Microsoft.AspNetCore.Mvc.ForbidResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.ForbidResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.Forbid(AuthenticationProperties, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String())
  name.vb: Forbid(AuthenticationProperties, String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  id: SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: SignIn(ClaimsPrincipal, String)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SignIn
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 998
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.SignInResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified authentication scheme.\n"
  example: []
  syntax:
    content: public virtual SignInResult SignIn(ClaimsPrincipal principal, string authenticationScheme)
    content.vb: Public Overridable Function SignIn(principal As ClaimsPrincipal, authenticationScheme As String) As SignInResult
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="System.Security.Claims.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> containing the user claims.
    - id: authenticationScheme
      type: System.String
      description: The authentication scheme to use for the sign-in operation.
    return:
      type: Microsoft.AspNetCore.Mvc.SignInResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.SignInResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  id: SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: SignIn(ClaimsPrincipal, AuthenticationProperties, String)
  nameWithType: ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SignIn
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1010
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.SignInResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified specified authentication scheme and\n<em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual SignInResult SignIn(ClaimsPrincipal principal, AuthenticationProperties properties, string authenticationScheme)
    content.vb: Public Overridable Function SignIn(principal As ClaimsPrincipal, properties As AuthenticationProperties, authenticationScheme As String) As SignInResult
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: The <xref href="System.Security.Claims.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> containing the user claims.
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the sign-in operation.
    - id: authenticationScheme
      type: System.String
      description: The authentication scheme to use for the sign-in operation.
    return:
      type: Microsoft.AspNetCore.Mvc.SignInResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.SignInResult" data-throw-if-not-resolved="false"></xref> for the response.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  id: SignOut(System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: SignOut(String[])
  nameWithType: ControllerBase.SignOut(String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SignOut
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1022
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.SignOutResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified authentication schemes.\n"
  example: []
  syntax:
    content: public virtual SignOutResult SignOut(params string[] authenticationSchemes)
    content.vb: Public Overridable Function SignOut(ParamArray authenticationSchemes As String()) As SignOutResult
    parameters:
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication schemes to use for the sign-out operation.
    return:
      type: Microsoft.AspNetCore.Mvc.SignOutResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.SignOutResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.SignOut(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String())
  name.vb: SignOut(String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  id: SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: SignOut(AuthenticationProperties, String[])
  nameWithType: ControllerBase.SignOut(AuthenticationProperties, String[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SignOut
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1033
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Mvc.SignOutResult\" data-throw-if-not-resolved=\"false\"></xref> with the specified specified authentication schemes and\n<em>properties</em>.\n"
  example: []
  syntax:
    content: public virtual SignOutResult SignOut(AuthenticationProperties properties, params string[] authenticationSchemes)
    content.vb: Public Overridable Function SignOut(properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As SignOutResult
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
      description: <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> used to perform the sign-out operation.
    - id: authenticationSchemes
      type: System.String[]
      description: The authentication scheme to use for the sign-out operation.
    return:
      type: Microsoft.AspNetCore.Mvc.SignOutResult
      description: The created <xref href="Microsoft.AspNetCore.Mvc.SignOutResult" data-throw-if-not-resolved="false"></xref> for the response.
  nameWithType.vb: ControllerBase.SignOut(AuthenticationProperties, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String())
  name.vb: SignOut(AuthenticationProperties, String())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  id: TryUpdateModelAsync``1(``0)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1044
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using values from the controller's current\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model)where TModel : class'
    content.vb: Public Overridable Function TryUpdateModelAsync(Of TModel As Class)(model As TModel) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel)
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  id: TryUpdateModelAsync``1(``0,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1066
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using values from the controller's current\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> and a <em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix)where TModel : class'
    content.vb: Public Overridable Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the current <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String)
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, IValueProvider)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String, IValueProvider)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1096
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using the <em>valueProvider</em> and a\n<em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider)where TModel : class'
    content.vb: Public Overridable Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, valueProvider As IValueProvider) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider)
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, Expression<Func<TModel, Object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String, Expression<Func<TModel, Object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1139
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using values from the controller's current\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> and a <em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, params Expression<Func<TModel, object>>[] includeExpressions)where TModel : class'
    content.vb: Public Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, ParamArray includeExpressions As Expression(Of Func(Of TModel, Object))()) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the current <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref>.
    - id: includeExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: >-
        <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref>(s) which represent top-level properties
           which need to be included for the current model.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, Expression(Of Func(Of TModel, Object))())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  id: TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, Func<ModelMetadata, Boolean>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String, Func<ModelMetadata, Boolean>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1178
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using values from the controller's current\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> and a <em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, Func<ModelMetadata, bool> propertyFilter)where TModel : class'
    content.vb: Public Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the current <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref>.
    - id: propertyFilter
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
      description: A predicate which can be used to filter properties at runtime.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, Func(Of ModelMetadata, Boolean))
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, IValueProvider, Expression<Func<TModel, Object>>[])
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String, IValueProvider, Expression<Func<TModel, Object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1219
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using the <em>valueProvider</em> and a\n<em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, params Expression<Func<TModel, object>>[] includeExpressions)where TModel : class'
    content.vb: Public Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, valueProvider As IValueProvider, ParamArray includeExpressions As Expression(Of Func(Of TModel, Object))()) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: includeExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: >-
        <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref>(s) which represent top-level properties
           which need to be included for the current model.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Expression(Of Func(Of TModel, Object))())
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, IValueProvider, Func<ModelMetadata, Boolean>)
  nameWithType: ControllerBase.TryUpdateModelAsync<TModel>(TModel, String, IValueProvider, Func<ModelMetadata, Boolean>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1264
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using the <em>valueProvider</em> and a\n<em>prefix</em>.\n"
  example: []
  syntax:
    content: 'public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, Func<ModelMetadata, bool> propertyFilter)where TModel : class'
    content.vb: Public Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, valueProvider As IValueProvider, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: propertyFilter
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
      description: A predicate which can be used to filter properties at runtime.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, IValueProvider, Func(Of ModelMetadata, Boolean))
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  id: TryUpdateModelAsync(System.Object,System.Type,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync(Object, Type, String)
  nameWithType: ControllerBase.TryUpdateModelAsync(Object, Type, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1307
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using values from the controller's current\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> and a <em>prefix</em>.\n"
  example: []
  syntax:
    content: public virtual Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix)
    content.vb: Public Overridable Function TryUpdateModelAsync(model As Object, modelType As Type, prefix As String) As Task(Of Boolean)
    parameters:
    - id: model
      type: System.Object
      description: The model instance to update.
    - id: modelType
      type: System.Type
      description: The type of model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the current <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  id: TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync(Object, Type, String, IValueProvider, Func<ModelMetadata, Boolean>)
  nameWithType: ControllerBase.TryUpdateModelAsync(Object, Type, String, IValueProvider, Func<ModelMetadata, Boolean>)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1346
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nUpdates the specified <em>model</em> instance using the <em>valueProvider</em> and a\n<em>prefix</em>.\n"
  example: []
  syntax:
    content: public Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix, IValueProvider valueProvider, Func<ModelMetadata, bool> propertyFilter)
    content.vb: Public Function TryUpdateModelAsync(model As Object, modelType As Type, prefix As String, valueProvider As IValueProvider, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)
    parameters:
    - id: model
      type: System.Object
      description: The model instance to update.
    - id: modelType
      type: System.Type
      description: The type of model instance to update.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: propertyFilter
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
      description: A predicate which can be used to filter properties at runtime.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful.
  nameWithType.vb: ControllerBase.TryUpdateModelAsync(Object, Type, String, IValueProvider, Func(Of ModelMetadata, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: TryUpdateModelAsync(Object, Type, String, IValueProvider, Func(Of ModelMetadata, Boolean))
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  id: TryValidateModel(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryValidateModel(Object)
  nameWithType: ControllerBase.TryValidateModel(Object)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryValidateModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1391
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nValidates the specified <em>model</em> instance.\n"
  example: []
  syntax:
    content: public virtual bool TryValidateModel(object model)
    content.vb: Public Overridable Function TryValidateModel(model As Object) As Boolean
    parameters:
    - id: model
      type: System.Object
      description: The model to validate.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" data-throw-if-not-resolved="false"></xref> is valid; <code>false</code> otherwise.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  id: TryValidateModel(System.Object,System.String)
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  langs:
  - csharp
  - vb
  name: TryValidateModel(Object, String)
  nameWithType: ControllerBase.TryValidateModel(Object, String)
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryValidateModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ControllerBase.cs
    startLine: 1410
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc
  summary: "\nValidates the specified <em>model</em> instance.\n"
  example: []
  syntax:
    content: public virtual bool TryValidateModel(object model, string prefix)
    content.vb: Public Overridable Function TryValidateModel(model As Object, prefix As String) As Boolean
    parameters:
    - id: model
      type: System.Object
      description: The model to validate.
    - id: prefix
      type: System.String
      description: >
        The key to use when looking up information in <xref href="Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" data-throw-if-not-resolved="false"></xref> is valid;<code>false</code> otherwise.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ControllerContext
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: IControllerActivator
  nameWithType: IControllerActivator
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelMetadataProvider
  nameWithType: IModelMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelBinderFactory
  nameWithType: IModelBinderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.IUrlHelper
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IUrlHelper
  nameWithType: IUrlHelper
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IObjectModelValidator
  nameWithType: IObjectModelValidator
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.AspNetCore.Mvc.StatusCodeResult
  commentId: T:Microsoft.AspNetCore.Mvc.StatusCodeResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: StatusCodeResult
  nameWithType: StatusCodeResult
  fullName: Microsoft.AspNetCore.Mvc.StatusCodeResult
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.ObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.ObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ObjectResult
  nameWithType: ObjectResult
  fullName: Microsoft.AspNetCore.Mvc.ObjectResult
- uid: Microsoft.AspNetCore.Mvc.ContentResult
  commentId: T:Microsoft.AspNetCore.Mvc.ContentResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ContentResult
  nameWithType: ContentResult
  fullName: Microsoft.AspNetCore.Mvc.ContentResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: Microsoft.AspNetCore.Mvc.NoContentResult
  commentId: T:Microsoft.AspNetCore.Mvc.NoContentResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: NoContentResult
  nameWithType: NoContentResult
  fullName: Microsoft.AspNetCore.Mvc.NoContentResult
- uid: Microsoft.AspNetCore.Mvc.OkResult
  commentId: T:Microsoft.AspNetCore.Mvc.OkResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: OkResult
  nameWithType: OkResult
  fullName: Microsoft.AspNetCore.Mvc.OkResult
- uid: Microsoft.AspNetCore.Mvc.OkObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.OkObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: OkObjectResult
  nameWithType: OkObjectResult
  fullName: Microsoft.AspNetCore.Mvc.OkObjectResult
- uid: Microsoft.AspNetCore.Mvc.RedirectResult
  commentId: T:Microsoft.AspNetCore.Mvc.RedirectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: RedirectResult
  nameWithType: RedirectResult
  fullName: Microsoft.AspNetCore.Mvc.RedirectResult
- uid: Microsoft.AspNetCore.Mvc.RedirectResult.Permanent
  commentId: P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent
- uid: Microsoft.AspNetCore.Mvc.LocalRedirectResult
  commentId: T:Microsoft.AspNetCore.Mvc.LocalRedirectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: LocalRedirectResult
  nameWithType: LocalRedirectResult
  fullName: Microsoft.AspNetCore.Mvc.LocalRedirectResult
- uid: Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent
  commentId: P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent
- uid: Microsoft.AspNetCore.Mvc.RedirectToActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.RedirectToActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: RedirectToActionResult
  nameWithType: RedirectToActionResult
  fullName: Microsoft.AspNetCore.Mvc.RedirectToActionResult
- uid: Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent
  commentId: P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent
- uid: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
  commentId: T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: RedirectToRouteResult
  nameWithType: RedirectToRouteResult
  fullName: Microsoft.AspNetCore.Mvc.RedirectToRouteResult
- uid: Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent
  commentId: P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent
- uid: Microsoft.AspNetCore.Mvc.FileContentResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileContentResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileContentResult
  nameWithType: FileContentResult
  fullName: Microsoft.AspNetCore.Mvc.FileContentResult
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.AspNetCore.Mvc.FileStreamResult
  commentId: T:Microsoft.AspNetCore.Mvc.FileStreamResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: FileStreamResult
  nameWithType: FileStreamResult
  fullName: Microsoft.AspNetCore.Mvc.FileStreamResult
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Mvc.VirtualFileResult
  commentId: T:Microsoft.AspNetCore.Mvc.VirtualFileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: VirtualFileResult
  nameWithType: VirtualFileResult
  fullName: Microsoft.AspNetCore.Mvc.VirtualFileResult
- uid: Microsoft.AspNetCore.Mvc.PhysicalFileResult
  commentId: T:Microsoft.AspNetCore.Mvc.PhysicalFileResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: PhysicalFileResult
  nameWithType: PhysicalFileResult
  fullName: Microsoft.AspNetCore.Mvc.PhysicalFileResult
- uid: Microsoft.AspNetCore.Mvc.UnauthorizedResult
  commentId: T:Microsoft.AspNetCore.Mvc.UnauthorizedResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: UnauthorizedResult
  nameWithType: UnauthorizedResult
  fullName: Microsoft.AspNetCore.Mvc.UnauthorizedResult
- uid: Microsoft.AspNetCore.Mvc.NotFoundResult
  commentId: T:Microsoft.AspNetCore.Mvc.NotFoundResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: NotFoundResult
  nameWithType: NotFoundResult
  fullName: Microsoft.AspNetCore.Mvc.NotFoundResult
- uid: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: NotFoundObjectResult
  nameWithType: NotFoundObjectResult
  fullName: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
- uid: Microsoft.AspNetCore.Mvc.BadRequestResult
  commentId: T:Microsoft.AspNetCore.Mvc.BadRequestResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: BadRequestResult
  nameWithType: BadRequestResult
  fullName: Microsoft.AspNetCore.Mvc.BadRequestResult
- uid: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
  commentId: T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: BadRequestObjectResult
  nameWithType: BadRequestObjectResult
  fullName: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
- uid: Microsoft.AspNetCore.Mvc.CreatedResult
  commentId: T:Microsoft.AspNetCore.Mvc.CreatedResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CreatedResult
  nameWithType: CreatedResult
  fullName: Microsoft.AspNetCore.Mvc.CreatedResult
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.AspNetCore.Mvc.CreatedAtActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CreatedAtActionResult
  nameWithType: CreatedAtActionResult
  fullName: Microsoft.AspNetCore.Mvc.CreatedAtActionResult
- uid: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
  commentId: T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CreatedAtRouteResult
  nameWithType: CreatedAtRouteResult
  fullName: Microsoft.AspNetCore.Mvc.CreatedAtRouteResult
- uid: Microsoft.AspNetCore.Mvc.ChallengeResult
  commentId: T:Microsoft.AspNetCore.Mvc.ChallengeResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ChallengeResult
  nameWithType: ChallengeResult
  fullName: Microsoft.AspNetCore.Mvc.ChallengeResult
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
- uid: Microsoft.AspNetCore.Mvc.ForbidResult
  commentId: T:Microsoft.AspNetCore.Mvc.ForbidResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ForbidResult
  nameWithType: ForbidResult
  fullName: Microsoft.AspNetCore.Mvc.ForbidResult
- uid: Microsoft.AspNetCore.Mvc.SignInResult
  commentId: T:Microsoft.AspNetCore.Mvc.SignInResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: SignInResult
  nameWithType: SignInResult
  fullName: Microsoft.AspNetCore.Mvc.SignInResult
- uid: Microsoft.AspNetCore.Mvc.SignOutResult
  commentId: T:Microsoft.AspNetCore.Mvc.SignOutResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: SignOutResult
  nameWithType: SignOutResult
  fullName: Microsoft.AspNetCore.Mvc.SignOutResult
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TModel
  isExternal: false
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
  name: Expression<Func<TModel, Object>>[]
  nameWithType: Expression<Func<TModel, Object>>[]
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]
  nameWithType.vb: Expression(Of Func(Of TModel, Object))()
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))()
  name.vb: Expression(Of Func(Of TModel, Object))()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ModelMetadata, Boolean>
  nameWithType: Func<ModelMetadata, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>
  nameWithType.vb: Func(Of ModelMetadata, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean)
  name.vb: Func(Of ModelMetadata, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  parent: Microsoft.AspNetCore.Mvc.ControllerBase
  isExternal: false
  name: ModelState
  nameWithType: ControllerBase.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ControllerBase
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerBase
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ControllerBase
  nameWithType: ControllerBase
  fullName: Microsoft.AspNetCore.Mvc.ControllerBase
