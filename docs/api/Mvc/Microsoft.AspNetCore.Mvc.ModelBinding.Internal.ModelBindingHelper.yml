### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  id: ModelBindingHelper
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  - Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  langs:
  - csharp
  - vb
  name: ModelBindingHelper
  nameWithType: ModelBindingHelper
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelBindingHelper
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  syntax:
    content: public static class ModelBindingHelper
    content.vb: Public Module ModelBindingHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
  nameWithType: ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nUpdates the specified <em>model</em> instance using the specified\n<em>modelBinderFactory</em> and the specified <em>valueProvider</em> and executes\nvalidation using the specified <em>objectModelValidator</em>.\n"
  example: []
  syntax:
    content: 'public static Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, ActionContext actionContext, IModelMetadataProvider metadataProvider, IModelBinderFactory modelBinderFactory, IValueProvider valueProvider, IObjectModelValidator objectModelValidator)where TModel : class'
    content.vb: Public Shared Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, actionContext As ActionContext, metadataProvider As IModelMetadataProvider, modelBinderFactory As IModelBinderFactory, valueProvider As IValueProvider, objectModelValidator As IObjectModelValidator) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update and validate.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> for the current executing request.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The provider used for reading metadata for the model type.
    - id: modelBinderFactory
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" data-throw-if-not-resolved="false"></xref> used for binding.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: objectModelValidator
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" data-throw-if-not-resolved="false"></xref> used for validating the

        bound values.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful
  nameWithType.vb: ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Expression<Func<TModel, Object>>[])
  nameWithType: ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Expression<Func<TModel, Object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nUpdates the specified <em>model</em> instance using the specified <em>modelBinderFactory</em>\nand the specified <em>valueProvider</em> and executes validation using the specified\n<em>objectModelValidator</em>.\n"
  example: []
  syntax:
    content: 'public static Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, ActionContext actionContext, IModelMetadataProvider metadataProvider, IModelBinderFactory modelBinderFactory, IValueProvider valueProvider, IObjectModelValidator objectModelValidator, params Expression<Func<TModel, object>>[] includeExpressions)where TModel : class'
    content.vb: Public Shared Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, actionContext As ActionContext, metadataProvider As IModelMetadataProvider, modelBinderFactory As IModelBinderFactory, valueProvider As IValueProvider, objectModelValidator As IObjectModelValidator, ParamArray includeExpressions As Expression(Of Func(Of TModel, Object))()) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update and validate.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> for the current executing request.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The provider used for reading metadata for the model type.
    - id: modelBinderFactory
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" data-throw-if-not-resolved="false"></xref> used for binding.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: objectModelValidator
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" data-throw-if-not-resolved="false"></xref> used for validating the

        bound values.
    - id: includeExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: >-
        Expression(s) which represent top level properties

        which need to be included for the current model.
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful
  nameWithType.vb: ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Expression(Of Func(Of TModel, Object))())
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  id: TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func<ModelMetadata, Boolean>)
  nameWithType: ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func<ModelMetadata, Boolean>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 195
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nUpdates the specified <em>model</em> instance using the specified <em>modelBinderFactory</em>\nand the specified <em>valueProvider</em> and executes validation using the specified\n<em>objectModelValidator</em>.\n"
  example: []
  syntax:
    content: 'public static Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, ActionContext actionContext, IModelMetadataProvider metadataProvider, IModelBinderFactory modelBinderFactory, IValueProvider valueProvider, IObjectModelValidator objectModelValidator, Func<ModelMetadata, bool> propertyFilter)where TModel : class'
    content.vb: Public Shared Function TryUpdateModelAsync(Of TModel As Class)(model As TModel, prefix As String, actionContext As ActionContext, metadataProvider As IModelMetadataProvider, modelBinderFactory As IModelBinderFactory, valueProvider As IValueProvider, objectModelValidator As IObjectModelValidator, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model instance to update and validate.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> for the current executing request.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The provider used for reading metadata for the model type.
    - id: modelBinderFactory
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" data-throw-if-not-resolved="false"></xref> used for binding.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: objectModelValidator
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" data-throw-if-not-resolved="false"></xref> used for validating the

        bound values.
    - id: propertyFilter
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
      description: "\nA predicate which can be used to filter properties(for inclusion/exclusion) at runtime.\n"
    typeParameters:
    - id: TModel
      description: The type of the model object.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful
  nameWithType.vb: ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func(Of ModelMetadata, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(Of TModel)(TModel, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: TryUpdateModelAsync(Of TModel)(TModel, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func(Of ModelMetadata, Boolean))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  id: TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
  nameWithType: ModelBindingHelper.TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 274
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nUpdates the specified <em>model</em> instance using the specified <em>modelBinderFactory</em>\nand the specified <em>valueProvider</em> and executes validation using the specified\n<em>objectModelValidator</em>.\n"
  example: []
  syntax:
    content: public static Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix, ActionContext actionContext, IModelMetadataProvider metadataProvider, IModelBinderFactory modelBinderFactory, IValueProvider valueProvider, IObjectModelValidator objectModelValidator)
    content.vb: Public Shared Function TryUpdateModelAsync(model As Object, modelType As Type, prefix As String, actionContext As ActionContext, metadataProvider As IModelMetadataProvider, modelBinderFactory As IModelBinderFactory, valueProvider As IValueProvider, objectModelValidator As IObjectModelValidator) As Task(Of Boolean)
    parameters:
    - id: model
      type: System.Object
      description: The model instance to update and validate.
    - id: modelType
      type: System.Type
      description: The type of model instance to update and validate.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> for the current executing request.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The provider used for reading metadata for the model type.
    - id: modelBinderFactory
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" data-throw-if-not-resolved="false"></xref> used for binding.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: objectModelValidator
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" data-throw-if-not-resolved="false"></xref> used for validating the

        bound values.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  id: TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func<ModelMetadata, Boolean>)
  nameWithType: ModelBindingHelper.TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func<ModelMetadata, Boolean>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TryUpdateModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 355
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nUpdates the specified <em>model</em> instance using the specified <em>modelBinderFactory</em>\nand the specified <em>valueProvider</em> and executes validation using the specified\n<em>objectModelValidator</em>.\n"
  example: []
  syntax:
    content: public static Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix, ActionContext actionContext, IModelMetadataProvider metadataProvider, IModelBinderFactory modelBinderFactory, IValueProvider valueProvider, IObjectModelValidator objectModelValidator, Func<ModelMetadata, bool> propertyFilter)
    content.vb: Public Shared Function TryUpdateModelAsync(model As Object, modelType As Type, prefix As String, actionContext As ActionContext, metadataProvider As IModelMetadataProvider, modelBinderFactory As IModelBinderFactory, valueProvider As IValueProvider, objectModelValidator As IObjectModelValidator, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)
    parameters:
    - id: model
      type: System.Object
      description: The model instance to update and validate.
    - id: modelType
      type: System.Type
      description: The type of model instance to update and validate.
    - id: prefix
      type: System.String
      description: >
        The prefix to use when looking up values in the <em>valueProvider</em>.
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref> for the current executing request.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The provider used for reading metadata for the model type.
    - id: modelBinderFactory
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" data-throw-if-not-resolved="false"></xref> used for binding.
    - id: valueProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" data-throw-if-not-resolved="false"></xref> used for looking up values.
    - id: objectModelValidator
      type: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" data-throw-if-not-resolved="false"></xref> used for validating the

        bound values.
    - id: propertyFilter
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
      description: >-
        A predicate which can be used to

        filter properties(for inclusion/exclusion) at runtime.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion returns <code>true</code> if the update is successful
  nameWithType.vb: ModelBindingHelper.TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func(Of ModelMetadata, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator, System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: TryUpdateModelAsync(Object, Type, String, ActionContext, IModelMetadataProvider, IModelBinderFactory, IValueProvider, IObjectModelValidator, Func(Of ModelMetadata, Boolean))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: GetPropertyFilterExpression<TModel>(Expression<Func<TModel, Object>>[])
  nameWithType: ModelBindingHelper.GetPropertyFilterExpression<TModel>(Expression<Func<TModel, Object>>[])
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression<TModel>(System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetPropertyFilterExpression
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 509
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nCreates an expression for a predicate to limit the set of properties used in model binding.\n"
  example: []
  syntax:
    content: public static Expression<Func<ModelMetadata, bool>> GetPropertyFilterExpression<TModel>(Expression<Func<TModel, object>>[] expressions)
    content.vb: Public Shared Function GetPropertyFilterExpression(Of TModel)(expressions As Expression(Of Func(Of TModel, Object))()) As Expression(Of Func(Of ModelMetadata, Boolean))
    parameters:
    - id: expressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions identifying the properties to allow for binding.
    typeParameters:
    - id: TModel
      description: The model type.
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}}
      description: An expression which can be used with <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ModelBindingHelper.GetPropertyFilterExpression(Of TModel)(Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression(Of TModel)(System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: GetPropertyFilterExpression(Of TModel)(Expression(Of Func(Of TModel, Object))())
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)
  id: ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ClearValidationStateForModel(Type, ModelStateDictionary, IModelMetadataProvider, String)
  nameWithType: ModelBindingHelper.ClearValidationStateForModel(Type, ModelStateDictionary, IModelMetadataProvider, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(System.Type, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ClearValidationStateForModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 546
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nClears <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> entries for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void ClearValidationStateForModel(Type modelType, ModelStateDictionary modelState, IModelMetadataProvider metadataProvider, string modelKey)
    content.vb: Public Shared Sub ClearValidationStateForModel(modelType As Type, modelState As ModelStateDictionary, metadataProvider As IModelMetadataProvider, modelKey As String)
    parameters:
    - id: modelType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the model.
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> associated with the model.
    - id: metadataProvider
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" data-throw-if-not-resolved="false"></xref>.
    - id: modelKey
      type: System.String
      description: 'The entry to clear. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  id: ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ClearValidationStateForModel(ModelMetadata, ModelStateDictionary, String)
  nameWithType: ModelBindingHelper.ClearValidationStateForModel(ModelMetadata, ModelStateDictionary, String)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ClearValidationStateForModel
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 576
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nClears <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> entries for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void ClearValidationStateForModel(ModelMetadata modelMetadata, ModelStateDictionary modelState, string modelKey)
    content.vb: Public Shared Sub ClearValidationStateForModel(modelMetadata As ModelMetadata, modelState As ModelStateDictionary, modelKey As String)
    parameters:
    - id: modelMetadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" data-throw-if-not-resolved="false"></xref>.
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" data-throw-if-not-resolved="false"></xref> associated with the model.
    - id: modelKey
      type: System.String
      description: 'The entry to clear. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  id: CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: CanGetCompatibleCollection<T>(ModelBindingContext)
  nameWithType: ModelBindingHelper.CanGetCompatibleCollection<T>(ModelBindingContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection<T>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanGetCompatibleCollection
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 657
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nGets an indication whether <xref href=\"GetCompatibleCollection%7bT%7d\" data-throw-if-not-resolved=\"false\"></xref> is likely to return a usable\nnon-<code>null</code> value.\n"
  remarks: "\"Usable\" in this context means the property can be set or its value reused."
  example: []
  syntax:
    content: public static bool CanGetCompatibleCollection<T>(ModelBindingContext bindingContext)
    content.vb: Public Shared Function CanGetCompatibleCollection(Of T)(bindingContext As ModelBindingContext) As Boolean
    parameters:
    - id: bindingContext
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
      description: The element type of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> required.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if <xref href=\"GetCompatibleCollection%7bT%7d\" data-throw-if-not-resolved=\"false\"></xref> is likely to return a usable non-<code>null</code>\nvalue; <code>false</code> otherwise.\n"
  nameWithType.vb: ModelBindingHelper.CanGetCompatibleCollection(Of T)(ModelBindingContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection(Of T)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  name.vb: CanGetCompatibleCollection(Of T)(ModelBindingContext)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  id: GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleCollection<T>(ModelBindingContext)
  nameWithType: ModelBindingHelper.GetCompatibleCollection<T>(ModelBindingContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection<T>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetCompatibleCollection
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 717
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nCreates an <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> instance compatible with <em>bindingContext</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nShould not be called if <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection%60%601(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)\" data-throw-if-not-resolved=\"false\"></xref> returned <code>false</code>.\n"
  example: []
  syntax:
    content: public static ICollection<T> GetCompatibleCollection<T>(ModelBindingContext bindingContext)
    content.vb: Public Shared Function GetCompatibleCollection(Of T)(bindingContext As ModelBindingContext) As ICollection(Of T)
    parameters:
    - id: bindingContext
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
      description: The element type of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> required.
    return:
      type: System.Collections.Generic.ICollection{{T}}
      description: "\nAn <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> instance compatible with <em>bindingContext</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  nameWithType.vb: ModelBindingHelper.GetCompatibleCollection(Of T)(ModelBindingContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection(Of T)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  name.vb: GetCompatibleCollection(Of T)(ModelBindingContext)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)
  id: GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleCollection<T>(ModelBindingContext, Int32)
  nameWithType: ModelBindingHelper.GetCompatibleCollection<T>(ModelBindingContext, Int32)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection<T>(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetCompatibleCollection
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 738
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nCreates an <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> instance compatible with <em>bindingContext</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nShould not be called if <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection%60%601(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)\" data-throw-if-not-resolved=\"false\"></xref> returned <code>false</code>.\n"
  example: []
  syntax:
    content: public static ICollection<T> GetCompatibleCollection<T>(ModelBindingContext bindingContext, int capacity)
    content.vb: Public Shared Function GetCompatibleCollection(Of T)(bindingContext As ModelBindingContext, capacity As Integer) As ICollection(Of T)
    parameters:
    - id: bindingContext
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" data-throw-if-not-resolved="false"></xref>.
    - id: capacity
      type: System.Int32
      description: "\nCapacity for use when creating a <xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref> instance. Not used when creating another type.\n"
    typeParameters:
    - id: T
      description: The element type of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> required.
    return:
      type: System.Collections.Generic.ICollection{{T}}
      description: "\nAn <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> instance compatible with <em>bindingContext</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  nameWithType.vb: ModelBindingHelper.GetCompatibleCollection(Of T)(ModelBindingContext, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection(Of T)(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext, System.Int32)
  name.vb: GetCompatibleCollection(Of T)(ModelBindingContext, Int32)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object)
  id: ConvertTo``1(System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ConvertTo<T>(Object)
  nameWithType: ModelBindingHelper.ConvertTo<T>(Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo<T>(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 797
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nConverts the provided <em>value</em> to a value of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> <em>T</em>\nusing the <xref href=\"System.Globalization.CultureInfo.InvariantCulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static T ConvertTo<T>(object value)
    content.vb: Public Shared Function ConvertTo(Of T)(value As Object) As T
    parameters:
    - id: value
      type: System.Object
      description: The value to convert."/&gt;
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: '{T}'
      description: "\nThe converted value or the default value of <em>T</em> if the value could not be converted.\n"
  nameWithType.vb: ModelBindingHelper.ConvertTo(Of T)(Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(Of T)(System.Object)
  name.vb: ConvertTo(Of T)(Object)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)
  id: ConvertTo``1(System.Object,System.Globalization.CultureInfo)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ConvertTo<T>(Object, CultureInfo)
  nameWithType: ModelBindingHelper.ConvertTo<T>(Object, CultureInfo)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo<T>(System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 811
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nConverts the provided <em>value</em> to a value of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> <em>T</em>.\n"
  example: []
  syntax:
    content: public static T ConvertTo<T>(object value, CultureInfo culture)
    content.vb: Public Shared Function ConvertTo(Of T)(value As Object, culture As CultureInfo) As T
    parameters:
    - id: value
      type: System.Object
      description: The value to convert."/&gt;
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> for conversion.
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: '{T}'
      description: "\nThe converted value or the default value of <em>T</em> if the value could not be converted.\n"
  nameWithType.vb: ModelBindingHelper.ConvertTo(Of T)(Object, CultureInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(Of T)(System.Object, System.Globalization.CultureInfo)
  name.vb: ConvertTo(Of T)(Object, CultureInfo)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ConvertTo(Object, Type)
  nameWithType: ModelBindingHelper.ConvertTo(Object, Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 826
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nConverts the provided <em>value</em> to a value of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> <em>type</em>\nusing the <xref href=\"System.Globalization.CultureInfo.InvariantCulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static object ConvertTo(object value, Type type)
    content.vb: Public Shared Function ConvertTo(value As Object, type As Type) As Object
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: System.Object
      description: "\nThe converted value or <code>null</code> if the value could not be converted.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)
  id: ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper
  langs:
  - csharp
  - vb
  name: ConvertTo(Object, Type, CultureInfo)
  nameWithType: ModelBindingHelper.ConvertTo(Object, Type, CultureInfo)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object, System.Type, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertTo
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Internal/ModelBindingHelper.cs
    startLine: 845
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  summary: "\nConverts the provided <em>value</em> to a value of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> <em>type</em>.\n"
  example: []
  syntax:
    content: public static object ConvertTo(object value, Type type, CultureInfo culture)
    content.vb: Public Shared Function ConvertTo(value As Object, type As Type, culture As CultureInfo) As Object
    parameters:
    - id: value
      type: System.Object
      description: The value to convert."/&gt;
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for conversion.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> for conversion.
    return:
      type: System.Object
      description: "\nThe converted value or <code>null</code> if the value could not be converted.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelBinderFactory
  nameWithType: IModelBinderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IObjectModelValidator
  nameWithType: IObjectModelValidator
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelMetadataProvider
  nameWithType: IModelMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TModel
  isExternal: false
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
  name: Expression<Func<TModel, Object>>[]
  nameWithType: Expression<Func<TModel, Object>>[]
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]
  nameWithType.vb: Expression(Of Func(Of TModel, Object))()
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))()
  name.vb: Expression(Of Func(Of TModel, Object))()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ModelMetadata, Boolean>
  nameWithType: Func<ModelMetadata, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>
  nameWithType.vb: Func(Of ModelMetadata, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean)
  name.vb: Func(Of ModelMetadata, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IPropertyFilterProvider
  nameWithType: IPropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
- uid: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<ModelMetadata, Boolean>>
  nameWithType: Expression<Func<ModelMetadata, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of ModelMetadata, Boolean))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean))
  name.vb: Expression(Of Func(Of ModelMetadata, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: GetCompatibleCollection{T}
  commentId: M:GetCompatibleCollection{T}
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelBindingContext
  nameWithType: ModelBindingContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  isExternal: false
  name: ModelType
  nameWithType: ModelBindingContext.ModelType
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.CultureInfo.InvariantCulture
  commentId: P:System.Globalization.CultureInfo.InvariantCulture
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
