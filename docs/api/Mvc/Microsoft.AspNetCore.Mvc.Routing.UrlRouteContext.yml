### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  commentId: T:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  id: UrlRouteContext
  parent: Microsoft.AspNetCore.Mvc.Routing
  children:
  - Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment
  - Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host
  - Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol
  - Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName
  - Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values
  langs:
  - csharp
  - vb
  name: UrlRouteContext
  nameWithType: UrlRouteContext
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: UrlRouteContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nContext object to be used for the URLs that <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)\" data-throw-if-not-resolved=\"false\"></xref> generates.\n"
  example: []
  syntax:
    content: public class UrlRouteContext
    content.vb: Public Class UrlRouteContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName
  id: RouteName
  parent: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  langs:
  - csharp
  - vb
  name: RouteName
  nameWithType: UrlRouteContext.RouteName
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RouteName
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nThe name of the route that <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)\" data-throw-if-not-resolved=\"false\"></xref> uses to generate URLs.\n"
  example: []
  syntax:
    content: public string RouteName { get; set; }
    content.vb: Public Property RouteName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values
  id: Values
  parent: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: UrlRouteContext.Values
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Values
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nThe object that contains the route values for the generated URLs.\n"
  example: []
  syntax:
    content: public object Values { get; set; }
    content.vb: Public Property Values As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol
  id: Protocol
  parent: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: UrlRouteContext.Protocol
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Protocol
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nThe protocol for the URLs that <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)\" data-throw-if-not-resolved=\"false\"></xref> generates\nsuch as \"http\" or \"https\"\n"
  example: []
  syntax:
    content: public string Protocol { get; set; }
    content.vb: Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host
  id: Host
  parent: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: UrlRouteContext.Host
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Host
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nThe host name for the URLs that <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)\" data-throw-if-not-resolved=\"false\"></xref> generates.\n"
  example: []
  syntax:
    content: public string Host { get; set; }
    content.vb: Public Property Host As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment
  commentId: P:Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment
  id: Fragment
  parent: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  langs:
  - csharp
  - vb
  name: Fragment
  nameWithType: UrlRouteContext.Fragment
  fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Fragment
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Routing/UrlRouteContext.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Routing
  summary: "\nThe fragment for the URLs that <xref href=\"Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)\" data-throw-if-not-resolved=\"false\"></xref> generates.\n"
  example: []
  syntax:
    content: public string Fragment { get; set; }
    content.vb: Public Property Fragment As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)
  parent: Microsoft.AspNetCore.Mvc.IUrlHelper
  isExternal: false
  name: RouteUrl(UrlRouteContext)
  nameWithType: IUrlHelper.RouteUrl(UrlRouteContext)
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)
    name: RouteUrl
    nameWithType: IUrlHelper.RouteUrl
    fullName: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
    name: UrlRouteContext
    nameWithType: UrlRouteContext
    fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)
    name: RouteUrl
    nameWithType: IUrlHelper.RouteUrl
    fullName: Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
    name: UrlRouteContext
    nameWithType: UrlRouteContext
    fullName: Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Routing
  commentId: N:Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Routing
  nameWithType: Microsoft.AspNetCore.Mvc.Routing
  fullName: Microsoft.AspNetCore.Mvc.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.IUrlHelper
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IUrlHelper
  nameWithType: IUrlHelper
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
