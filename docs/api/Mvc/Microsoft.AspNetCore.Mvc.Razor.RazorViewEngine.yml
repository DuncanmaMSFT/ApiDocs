### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  id: RazorViewEngine
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,System.Text.Encodings.Web.HtmlEncoder,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},Microsoft.Extensions.Logging.ILoggerFactory)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  - Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  langs:
  - csharp
  - vb
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RazorViewEngine
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nDefault implementation of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nFor <code>ViewResults</code> returned from controllers, views should be located in\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats\" data-throw-if-not-resolved=\"false\"></xref>\nby default. For the controllers in an area, views should exist in\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class RazorViewEngine : IRazorViewEngine, IViewEngine'
    content.vb: >-
      Public Class RazorViewEngine
          Implements IRazorViewEngine, IViewEngine
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  commentId: F:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  id: ViewExtension
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: ViewExtension
  nameWithType: RazorViewEngine.ViewExtension
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewExtension
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewExtension
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  syntax:
    content: public static readonly string ViewExtension
    content.vb: Public Shared ReadOnly ViewExtension As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,System.Text.Encodings.Web.HtmlEncoder,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,System.Text.Encodings.Web.HtmlEncoder,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider,Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator,System.Text.Encodings.Web.HtmlEncoder,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions},Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions<RazorViewEngineOptions>, ILoggerFactory)
  nameWithType: RazorViewEngine.RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions<RazorViewEngineOptions>, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.RazorViewEngine(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider, Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator, System.Text.Encodings.Web.HtmlEncoder, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RazorViewEngine(IRazorPageFactoryProvider pageFactory, IRazorPageActivator pageActivator, HtmlEncoder htmlEncoder, IOptions<RazorViewEngineOptions> optionsAccessor, ILoggerFactory loggerFactory)
    content.vb: Public Sub New(pageFactory As IRazorPageFactoryProvider, pageActivator As IRazorPageActivator, htmlEncoder As HtmlEncoder, optionsAccessor As IOptions(Of RazorViewEngineOptions), loggerFactory As ILoggerFactory)
    parameters:
    - id: pageFactory
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
    - id: pageActivator
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
    - id: htmlEncoder
      type: System.Text.Encodings.Web.HtmlEncoder
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
  nameWithType.vb: RazorViewEngine.RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions(Of RazorViewEngineOptions), ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.RazorViewEngine(Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider, Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator, System.Text.Encodings.Web.HtmlEncoder, Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions), Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: RazorViewEngine(IRazorPageFactoryProvider, IRazorPageActivator, HtmlEncoder, IOptions(Of RazorViewEngineOptions), ILoggerFactory)
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  id: ViewLookupCache
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: ViewLookupCache
  nameWithType: RazorViewEngine.ViewLookupCache
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.ViewLookupCache
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ViewLookupCache
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nA cache for results of view lookups.\n"
  example: []
  syntax:
    content: protected IMemoryCache ViewLookupCache { get; }
    content.vb: Protected ReadOnly Property ViewLookupCache As IMemoryCache
    parameters: []
    return:
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  id: GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetNormalizedRouteValue(ActionContext, String)
  nameWithType: RazorViewEngine.GetNormalizedRouteValue(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetNormalizedRouteValue
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the case-normalized route value for the specified route <em>key</em>.\n"
  remarks: "\nThe casing of a route value in <xref href=\"Microsoft.AspNetCore.Mvc.ActionContext.RouteData\" data-throw-if-not-resolved=\"false\"></xref> is determined by the client.\nThis making constructing paths for view locations in a case sensitive file system unreliable. Using the\n<xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues\" data-throw-if-not-resolved=\"false\"></xref> to get route values\nproduces consistently cased results.\n"
  example: []
  syntax:
    content: public static string GetNormalizedRouteValue(ActionContext context, string key)
    content.vb: Public Shared Function GetNormalizedRouteValue(context As ActionContext, key As String) As String
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: key
      type: System.String
      description: The route key to lookup.
    return:
      type: System.String
      description: The value corresponding to the key.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  id: FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: FindPage(ActionContext, String)
  nameWithType: RazorViewEngine.FindPage(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindPage
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public RazorPageResult FindPage(ActionContext context, string pageName)
    content.vb: Public Function FindPage(context As ActionContext, pageName As String) As RazorPageResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: pageName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String,System.String)
  id: GetPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetPage(String, String)
  nameWithType: RazorViewEngine.GetPage(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetPage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetPage
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public RazorPageResult GetPage(string executingFilePath, string pagePath)
    content.vb: Public Function GetPage(executingFilePath As String, pagePath As String) As RazorPageResult
    parameters:
    - id: executingFilePath
      type: System.String
    - id: pagePath
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  id: FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: FindView(ActionContext, String, Boolean)
  nameWithType: RazorViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FindView
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage)
    content.vb: Public Function FindView(context As ActionContext, viewName As String, isMainPage As Boolean) As ViewEngineResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: viewName
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String,System.String,System.Boolean)
  id: GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetView(String, String, Boolean)
  nameWithType: RazorViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetView
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 214
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage)
    content.vb: Public Function GetView(executingFilePath As String, viewPath As String, isMainPage As Boolean) As ViewEngineResult
    parameters:
    - id: executingFilePath
      type: System.String
    - id: viewPath
      type: System.String
    - id: isMainPage
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  implements:
  - Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String,System.String)
  id: GetAbsolutePath(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  langs:
  - csharp
  - vb
  name: GetAbsolutePath(String, String)
  nameWithType: RazorViewEngine.GetAbsolutePath(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetAbsolutePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetAbsolutePath
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorViewEngine.cs
    startLine: 312
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  example: []
  syntax:
    content: public string GetAbsolutePath(string executingFilePath, string pagePath)
    content.vb: Public Function GetAbsolutePath(executingFilePath As String, pagePath As String) As String
    parameters:
    - id: executingFilePath
      type: System.String
    - id: pagePath
      type: System.String
    return:
      type: System.String
  implements:
  - Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorViewEngine
  nameWithType: IRazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.ViewLocationFormats
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AreaViewLocationFormats
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: IViewEngine
  nameWithType: IViewEngine
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ViewEngines
  commentId: N:Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ViewEngines
  nameWithType: Microsoft.AspNetCore.Mvc.ViewEngines
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  isExternal: false
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPageFactoryProvider
  nameWithType: IRazorPageFactoryProvider
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPageFactoryProvider
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPageActivator
  nameWithType: IRazorPageActivator
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPageActivator
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<RazorViewEngineOptions>
  nameWithType: IOptions<RazorViewEngineOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions>
  nameWithType.vb: IOptions(Of RazorViewEngineOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions)
  name.vb: IOptions(Of RazorViewEngineOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
    name: RazorViewEngineOptions
    nameWithType: RazorViewEngineOptions
    fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: RouteData
  nameWithType: ActionContext.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  isExternal: false
  name: RouteValues
  nameWithType: ActionDescriptor.RouteValues
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: FindPage(ActionContext, String)
  nameWithType: IRazorViewEngine.FindPage(ActionContext, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
    name: FindPage
    nameWithType: IRazorViewEngine.FindPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage(Microsoft.AspNetCore.Mvc.ActionContext,System.String)
    name: FindPage
    nameWithType: IRazorViewEngine.FindPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.FindPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: RazorPageResult
  nameWithType: RazorPageResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: GetPage(String, String)
  nameWithType: IRazorViewEngine.GetPage(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
    name: GetPage
    nameWithType: IRazorViewEngine.GetPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage(System.String,System.String)
    name: GetPage
    nameWithType: IRazorViewEngine.GetPage
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: FindView(ActionContext, String, Boolean)
  nameWithType: IViewEngine.FindView(ActionContext, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)
    name: FindView
    nameWithType: IViewEngine.FindView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ActionContext
    name: ActionContext
    nameWithType: ActionContext
    fullName: Microsoft.AspNetCore.Mvc.ActionContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  commentId: T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
  parent: Microsoft.AspNetCore.Mvc.ViewEngines
  isExternal: false
  name: ViewEngineResult
  nameWithType: ViewEngineResult
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult
- uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine
  isExternal: true
  name: GetView(String, String, Boolean)
  nameWithType: IViewEngine.GetView(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)
    name: GetView
    nameWithType: IViewEngine.GetView
    fullName: Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine
  isExternal: true
  name: GetAbsolutePath(String, String)
  nameWithType: IRazorViewEngine.GetAbsolutePath(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
    name: GetAbsolutePath
    nameWithType: IRazorViewEngine.GetAbsolutePath
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath(System.String,System.String)
    name: GetAbsolutePath
    nameWithType: IRazorViewEngine.GetAbsolutePath
    fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine.GetAbsolutePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
