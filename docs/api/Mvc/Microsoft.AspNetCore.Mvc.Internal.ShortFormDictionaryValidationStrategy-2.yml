### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  id: ShortFormDictionaryValidationStrategy`2
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  - Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.KeyMappings
  langs:
  - csharp
  - vb
  name: ShortFormDictionaryValidationStrategy<TKey, TValue>
  nameWithType: ShortFormDictionaryValidationStrategy<TKey, TValue>
  fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ShortFormDictionaryValidationStrategy
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nAn implementation of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy\" data-throw-if-not-resolved=\"false\"></xref> for a dictionary bound with 'short form' style keys.\n"
  remarks: "\nThis implemenation handles cases like:\n<example>\n    Model: IDictionary&lt;string, Student&gt; \n    Query String: ?students[Joey].Age=8&amp;students[Katherine].Age=9\n\n    In this case, 'Joey' and 'Katherine' are the keys of the dictionary, used to bind two 'Student'\n    objects. The enumerator returned from this class will yield two 'Student' objects with corresponding\n    keys 'students[Joey]' and 'students[Katherine]'\n</example>\n\nUsing this key format, the enumerator enumerates model objects of type <em>TValue</em>. The\nkeys of the dictionary are not validated as they must be simple types.\n"
  example: []
  syntax:
    content: 'public class ShortFormDictionaryValidationStrategy<TKey, TValue> : IValidationStrategy'
    content.vb: >-
      Public Class ShortFormDictionaryValidationStrategy(Of TKey, TValue)
          Implements IValidationStrategy
    typeParameters:
    - id: TKey
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the keys of the model dictionary.
    - id: TValue
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the values of the model dictionary.
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy(Of TKey, TValue)
  name.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue)
- uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  langs:
  - csharp
  - vb
  name: ShortFormDictionaryValidationStrategy(IEnumerable<KeyValuePair<String, TKey>>, ModelMetadata)
  nameWithType: ShortFormDictionaryValidationStrategy<TKey, TValue>.ShortFormDictionaryValidationStrategy(IEnumerable<KeyValuePair<String, TKey>>, ModelMetadata)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy<TKey, TValue>.ShortFormDictionaryValidationStrategy(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TKey>>, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ShortFormDictionaryValidationStrategy(IEnumerable<KeyValuePair<string, TKey>> keyMappings, ModelMetadata valueMetadata)
    content.vb: Public Sub New(keyMappings As IEnumerable(Of KeyValuePair(Of String, TKey)), valueMetadata As ModelMetadata)
    parameters:
    - id: keyMappings
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,{TKey}}}
      description: The mapping from model prefix key to dictionary key.
    - id: valueMetadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref> associated with <em>TValue</em>.\n"
  nameWithType.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue).ShortFormDictionaryValidationStrategy(IEnumerable(Of KeyValuePair(Of String, TKey)), ModelMetadata)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy(Of TKey, TValue).ShortFormDictionaryValidationStrategy(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, TKey)), Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)
  name.vb: ShortFormDictionaryValidationStrategy(IEnumerable(Of KeyValuePair(Of String, TKey)), ModelMetadata)
- uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.KeyMappings
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.KeyMappings
  id: KeyMappings
  parent: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  langs:
  - csharp
  - vb
  name: KeyMappings
  nameWithType: ShortFormDictionaryValidationStrategy<TKey, TValue>.KeyMappings
  fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy<TKey, TValue>.KeyMappings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: KeyMappings
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets the mapping from model prefix key to dictionary key.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, TKey>> KeyMappings { get; }
    content.vb: Public ReadOnly Property KeyMappings As IEnumerable(Of KeyValuePair(Of String, TKey))
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,{TKey}}}
  nameWithType.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue).KeyMappings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy(Of TKey, TValue).KeyMappings
- uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  id: GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  langs:
  - csharp
  - vb
  name: GetChildren(ModelMetadata, String, Object)
  nameWithType: ShortFormDictionaryValidationStrategy<TKey, TValue>.GetChildren(ModelMetadata, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy<TKey, TValue>.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetChildren
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ShortFormDictionaryValidationStrategy.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public IEnumerator<ValidationEntry> GetChildren(ModelMetadata metadata, string key, object model)
    content.vb: Public Function GetChildren(metadata As ModelMetadata, key As String, model As Object) As IEnumerator(Of ValidationEntry)
    parameters:
    - id: metadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    - id: key
      type: System.String
    - id: model
      type: System.Object
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry}
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  nameWithType.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue).GetChildren(ModelMetadata, String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy(Of TKey, TValue).GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.String, System.Object)
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: IValidationStrategy
  nameWithType: IValidationStrategy
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
  isExternal: false
  name: ShortFormDictionaryValidationStrategy<TKey, TValue>
  nameWithType: ShortFormDictionaryValidationStrategy<TKey, TValue>
  fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy<TKey, TValue>
  nameWithType.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue)
  fullname.vb: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy(Of TKey, TValue)
  name.vb: ShortFormDictionaryValidationStrategy(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
    name: ShortFormDictionaryValidationStrategy
    nameWithType: ShortFormDictionaryValidationStrategy
    fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy`2
    name: ShortFormDictionaryValidationStrategy
    nameWithType: ShortFormDictionaryValidationStrategy
    fullName: Microsoft.AspNetCore.Mvc.Internal.ShortFormDictionaryValidationStrategy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,{TKey}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, TKey>>
  nameWithType: IEnumerable<KeyValuePair<String, TKey>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TKey>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, TKey))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, TKey))
  name.vb: IEnumerable(Of KeyValuePair(Of String, TKey))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
  isExternal: true
  name: GetChildren(ModelMetadata, String, Object)
  nameWithType: IValidationStrategy.GetChildren(ModelMetadata, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
    name: GetChildren
    nameWithType: IValidationStrategy.GetChildren
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)
    name: GetChildren
    nameWithType: IValidationStrategy.GetChildren
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ValidationEntry>
  nameWithType: IEnumerator<ValidationEntry>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry>
  nameWithType.vb: IEnumerator(Of ValidationEntry)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry)
  name.vb: IEnumerator(Of ValidationEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry
    name: ValidationEntry
    nameWithType: ValidationEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry
    name: ValidationEntry
    nameWithType: ValidationEntry
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
