### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  id: MvcCoreDiagnosticSourceExtensions
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,Microsoft.AspNetCore.Mvc.IActionResult)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  - Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  langs:
  - csharp
  - vb
  name: MvcCoreDiagnosticSourceExtensions
  nameWithType: MvcCoreDiagnosticSourceExtensions
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MvcCoreDiagnosticSourceExtensions
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static class MvcCoreDiagnosticSourceExtensions
    content.vb: Public Module MvcCoreDiagnosticSourceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  id: BeforeAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeAction(DiagnosticSource, ActionDescriptor, HttpContext, RouteData)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeAction(DiagnosticSource, ActionDescriptor, HttpContext, RouteData)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeAction(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.RouteData)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeAction
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeAction(this DiagnosticSource diagnosticSource, ActionDescriptor actionDescriptor, HttpContext httpContext, RouteData routeData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeAction(diagnosticSource As DiagnosticSource, actionDescriptor As ActionDescriptor, httpContext As HttpContext, routeData As RouteData)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionDescriptor
      type: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: routeData
      type: Microsoft.AspNetCore.Routing.RouteData
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  id: AfterAction(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterAction(DiagnosticSource, ActionDescriptor, HttpContext, RouteData)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterAction(DiagnosticSource, ActionDescriptor, HttpContext, RouteData)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterAction(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.RouteData)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterAction
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterAction(this DiagnosticSource diagnosticSource, ActionDescriptor actionDescriptor, HttpContext httpContext, RouteData routeData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterAction(diagnosticSource As DiagnosticSource, actionDescriptor As ActionDescriptor, httpContext As HttpContext, routeData As RouteData)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionDescriptor
      type: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: routeData
      type: Microsoft.AspNetCore.Routing.RouteData
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  id: BeforeOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnAuthorizationAsync(DiagnosticSource, AuthorizationFilterContext, IAsyncAuthorizationFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorizationAsync(DiagnosticSource, AuthorizationFilterContext, IAsyncAuthorizationFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorizationAsync(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnAuthorizationAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnAuthorizationAsync(this DiagnosticSource diagnosticSource, AuthorizationFilterContext authorizationContext, IAsyncAuthorizationFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnAuthorizationAsync(diagnosticSource As DiagnosticSource, authorizationContext As AuthorizationFilterContext, filter As IAsyncAuthorizationFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: authorizationContext
      type: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  id: AfterOnAuthorizationAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnAuthorizationAsync(DiagnosticSource, AuthorizationFilterContext, IAsyncAuthorizationFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnAuthorizationAsync(DiagnosticSource, AuthorizationFilterContext, IAsyncAuthorizationFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorizationAsync(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnAuthorizationAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnAuthorizationAsync(this DiagnosticSource diagnosticSource, AuthorizationFilterContext authorizationContext, IAsyncAuthorizationFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnAuthorizationAsync(diagnosticSource As DiagnosticSource, authorizationContext As AuthorizationFilterContext, filter As IAsyncAuthorizationFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: authorizationContext
      type: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  id: BeforeOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnAuthorization(DiagnosticSource, AuthorizationFilterContext, IAuthorizationFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorization(DiagnosticSource, AuthorizationFilterContext, IAuthorizationFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnAuthorization(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext, Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnAuthorization
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnAuthorization(this DiagnosticSource diagnosticSource, AuthorizationFilterContext authorizationContext, IAuthorizationFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnAuthorization(diagnosticSource As DiagnosticSource, authorizationContext As AuthorizationFilterContext, filter As IAuthorizationFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: authorizationContext
      type: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  id: AfterOnAuthorization(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnAuthorization(DiagnosticSource, AuthorizationFilterContext, IAuthorizationFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnAuthorization(DiagnosticSource, AuthorizationFilterContext, IAuthorizationFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnAuthorization(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext, Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnAuthorization
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnAuthorization(this DiagnosticSource diagnosticSource, AuthorizationFilterContext authorizationContext, IAuthorizationFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnAuthorization(diagnosticSource As DiagnosticSource, authorizationContext As AuthorizationFilterContext, filter As IAuthorizationFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: authorizationContext
      type: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  id: BeforeOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResourceExecution(DiagnosticSource, ResourceExecutingContext, IAsyncResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecution(DiagnosticSource, ResourceExecutingContext, IAsyncResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResourceExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResourceExecution(this DiagnosticSource diagnosticSource, ResourceExecutingContext resourceExecutingContext, IAsyncResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResourceExecution(diagnosticSource As DiagnosticSource, resourceExecutingContext As ResourceExecutingContext, filter As IAsyncResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  id: AfterOnResourceExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResourceExecution(DiagnosticSource, ResourceExecutedContext, IAsyncResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecution(DiagnosticSource, ResourceExecutedContext, IAsyncResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResourceExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResourceExecution(this DiagnosticSource diagnosticSource, ResourceExecutedContext resourceExecutedContext, IAsyncResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResourceExecution(diagnosticSource As DiagnosticSource, resourceExecutedContext As ResourceExecutedContext, filter As IAsyncResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  id: BeforeOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResourceExecuting(DiagnosticSource, ResourceExecutingContext, IResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuting(DiagnosticSource, ResourceExecutingContext, IResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResourceExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResourceExecuting(this DiagnosticSource diagnosticSource, ResourceExecutingContext resourceExecutingContext, IResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResourceExecuting(diagnosticSource As DiagnosticSource, resourceExecutingContext As ResourceExecutingContext, filter As IResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  id: AfterOnResourceExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResourceExecuting(DiagnosticSource, ResourceExecutingContext, IResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuting(DiagnosticSource, ResourceExecutingContext, IResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResourceExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 209
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResourceExecuting(this DiagnosticSource diagnosticSource, ResourceExecutingContext resourceExecutingContext, IResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResourceExecuting(diagnosticSource As DiagnosticSource, resourceExecutingContext As ResourceExecutingContext, filter As IResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  id: BeforeOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResourceExecuted(DiagnosticSource, ResourceExecutedContext, IResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuted(DiagnosticSource, ResourceExecutedContext, IResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResourceExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResourceExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 231
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResourceExecuted(this DiagnosticSource diagnosticSource, ResourceExecutedContext resourceExecutedContext, IResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResourceExecuted(diagnosticSource As DiagnosticSource, resourceExecutedContext As ResourceExecutedContext, filter As IResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  id: AfterOnResourceExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResourceExecuted(DiagnosticSource, ResourceExecutedContext, IResourceFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuted(DiagnosticSource, ResourceExecutedContext, IResourceFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResourceExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IResourceFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResourceExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 253
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResourceExecuted(this DiagnosticSource diagnosticSource, ResourceExecutedContext resourceExecutedContext, IResourceFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResourceExecuted(diagnosticSource As DiagnosticSource, resourceExecutedContext As ResourceExecutedContext, filter As IResourceFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resourceExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  id: BeforeOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnExceptionAsync(DiagnosticSource, ExceptionContext, IAsyncExceptionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnExceptionAsync(DiagnosticSource, ExceptionContext, IAsyncExceptionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnExceptionAsync(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ExceptionContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnExceptionAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 275
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnExceptionAsync(this DiagnosticSource diagnosticSource, ExceptionContext exceptionContext, IAsyncExceptionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnExceptionAsync(diagnosticSource As DiagnosticSource, exceptionContext As ExceptionContext, filter As IAsyncExceptionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: exceptionContext
      type: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  id: AfterOnExceptionAsync(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnExceptionAsync(DiagnosticSource, ExceptionContext, IAsyncExceptionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnExceptionAsync(DiagnosticSource, ExceptionContext, IAsyncExceptionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnExceptionAsync(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ExceptionContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnExceptionAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 297
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnExceptionAsync(this DiagnosticSource diagnosticSource, ExceptionContext exceptionContext, IAsyncExceptionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnExceptionAsync(diagnosticSource As DiagnosticSource, exceptionContext As ExceptionContext, filter As IAsyncExceptionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: exceptionContext
      type: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  id: BeforeOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnException(DiagnosticSource, ExceptionContext, IExceptionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnException(DiagnosticSource, ExceptionContext, IExceptionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnException(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ExceptionContext, Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnException
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 319
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnException(this DiagnosticSource diagnosticSource, ExceptionContext exceptionContext, IExceptionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnException(diagnosticSource As DiagnosticSource, exceptionContext As ExceptionContext, filter As IExceptionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: exceptionContext
      type: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  id: AfterOnException(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnException(DiagnosticSource, ExceptionContext, IExceptionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnException(DiagnosticSource, ExceptionContext, IExceptionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnException(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ExceptionContext, Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnException
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 341
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnException(this DiagnosticSource diagnosticSource, ExceptionContext exceptionContext, IExceptionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnException(diagnosticSource As DiagnosticSource, exceptionContext As ExceptionContext, filter As IExceptionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: exceptionContext
      type: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  id: BeforeOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnActionExecution(DiagnosticSource, ActionExecutingContext, IAsyncActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecution(DiagnosticSource, ActionExecutingContext, IAsyncActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnActionExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 363
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnActionExecution(this DiagnosticSource diagnosticSource, ActionExecutingContext actionExecutingContext, IAsyncActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnActionExecution(diagnosticSource As DiagnosticSource, actionExecutingContext As ActionExecutingContext, filter As IAsyncActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  id: AfterOnActionExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnActionExecution(DiagnosticSource, ActionExecutedContext, IAsyncActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnActionExecution(DiagnosticSource, ActionExecutedContext, IAsyncActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnActionExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 385
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnActionExecution(this DiagnosticSource diagnosticSource, ActionExecutedContext actionExecutedContext, IAsyncActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnActionExecution(diagnosticSource As DiagnosticSource, actionExecutedContext As ActionExecutedContext, filter As IAsyncActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  id: BeforeOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnActionExecuting(DiagnosticSource, ActionExecutingContext, IActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuting(DiagnosticSource, ActionExecutingContext, IActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnActionExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 407
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnActionExecuting(this DiagnosticSource diagnosticSource, ActionExecutingContext actionExecutingContext, IActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnActionExecuting(diagnosticSource As DiagnosticSource, actionExecutingContext As ActionExecutingContext, filter As IActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  id: AfterOnActionExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnActionExecuting(DiagnosticSource, ActionExecutingContext, IActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuting(DiagnosticSource, ActionExecutingContext, IActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnActionExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 429
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnActionExecuting(this DiagnosticSource diagnosticSource, ActionExecutingContext actionExecutingContext, IActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnActionExecuting(diagnosticSource As DiagnosticSource, actionExecutingContext As ActionExecutingContext, filter As IActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  id: BeforeOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnActionExecuted(DiagnosticSource, ActionExecutedContext, IActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuted(DiagnosticSource, ActionExecutedContext, IActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnActionExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnActionExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 451
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnActionExecuted(this DiagnosticSource diagnosticSource, ActionExecutedContext actionExecutedContext, IActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnActionExecuted(diagnosticSource As DiagnosticSource, actionExecutedContext As ActionExecutedContext, filter As IActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  id: AfterOnActionExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnActionExecuted(DiagnosticSource, ActionExecutedContext, IActionFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuted(DiagnosticSource, ActionExecutedContext, IActionFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnActionExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IActionFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnActionExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 473
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnActionExecuted(this DiagnosticSource diagnosticSource, ActionExecutedContext actionExecutedContext, IActionFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnActionExecuted(diagnosticSource As DiagnosticSource, actionExecutedContext As ActionExecutedContext, filter As IActionFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  id: BeforeActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeActionMethod(DiagnosticSource, ActionContext, IDictionary<String, Object>, Object)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(DiagnosticSource, ActionContext, IDictionary<String, Object>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeActionMethod
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 495
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeActionMethod(this DiagnosticSource diagnosticSource, ActionContext actionContext, IDictionary<string, object> actionArguments, object controller)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeActionMethod(diagnosticSource As DiagnosticSource, actionContext As ActionContext, actionArguments As IDictionary(Of String, Object), controller As Object)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: actionArguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: controller
      type: System.Object
  nameWithType.vb: MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(DiagnosticSource, ActionContext, IDictionary(Of String, Object), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionMethod(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Object)
  name.vb: BeforeActionMethod(DiagnosticSource, ActionContext, IDictionary(Of String, Object), Object)
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,Microsoft.AspNetCore.Mvc.IActionResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,Microsoft.AspNetCore.Mvc.IActionResult)
  id: AfterActionMethod(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,Microsoft.AspNetCore.Mvc.IActionResult)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterActionMethod(DiagnosticSource, ActionContext, IDictionary<String, Object>, Object, IActionResult)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterActionMethod(DiagnosticSource, ActionContext, IDictionary<String, Object>, Object, IActionResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionMethod(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Object, Microsoft.AspNetCore.Mvc.IActionResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterActionMethod
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 519
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterActionMethod(this DiagnosticSource diagnosticSource, ActionContext actionContext, IDictionary<string, object> actionArguments, object controller, IActionResult result)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterActionMethod(diagnosticSource As DiagnosticSource, actionContext As ActionContext, actionArguments As IDictionary(Of String, Object), controller As Object, result As IActionResult)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: actionArguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: controller
      type: System.Object
    - id: result
      type: Microsoft.AspNetCore.Mvc.IActionResult
  nameWithType.vb: MvcCoreDiagnosticSourceExtensions.AfterActionMethod(DiagnosticSource, ActionContext, IDictionary(Of String, Object), Object, IActionResult)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionMethod(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Object, Microsoft.AspNetCore.Mvc.IActionResult)
  name.vb: AfterActionMethod(DiagnosticSource, ActionContext, IDictionary(Of String, Object), Object, IActionResult)
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  id: BeforeOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResultExecution(DiagnosticSource, ResultExecutingContext, IAsyncResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecution(DiagnosticSource, ResultExecutingContext, IAsyncResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResultExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 545
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResultExecution(this DiagnosticSource diagnosticSource, ResultExecutingContext resultExecutingContext, IAsyncResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResultExecution(diagnosticSource As DiagnosticSource, resultExecutingContext As ResultExecutingContext, filter As IAsyncResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  id: AfterOnResultExecution(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResultExecution(DiagnosticSource, ResultExecutedContext, IAsyncResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResultExecution(DiagnosticSource, ResultExecutedContext, IAsyncResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecution(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResultExecution
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 567
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResultExecution(this DiagnosticSource diagnosticSource, ResultExecutedContext resultExecutedContext, IAsyncResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResultExecution(diagnosticSource As DiagnosticSource, resultExecutedContext As ResultExecutedContext, filter As IAsyncResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  id: BeforeOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResultExecuting(DiagnosticSource, ResultExecutingContext, IResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuting(DiagnosticSource, ResultExecutingContext, IResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResultExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 589
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResultExecuting(this DiagnosticSource diagnosticSource, ResultExecutingContext resultExecutingContext, IResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResultExecuting(diagnosticSource As DiagnosticSource, resultExecutingContext As ResultExecutingContext, filter As IResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  id: AfterOnResultExecuting(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResultExecuting(DiagnosticSource, ResultExecutingContext, IResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuting(DiagnosticSource, ResultExecutingContext, IResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuting(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResultExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 611
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResultExecuting(this DiagnosticSource diagnosticSource, ResultExecutingContext resultExecutingContext, IResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResultExecuting(diagnosticSource As DiagnosticSource, resultExecutingContext As ResultExecutingContext, filter As IResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutingContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  id: BeforeOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeOnResultExecuted(DiagnosticSource, ResultExecutedContext, IResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuted(DiagnosticSource, ResultExecutedContext, IResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeOnResultExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeOnResultExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 633
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeOnResultExecuted(this DiagnosticSource diagnosticSource, ResultExecutedContext resultExecutedContext, IResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeOnResultExecuted(diagnosticSource As DiagnosticSource, resultExecutedContext As ResultExecutedContext, filter As IResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  id: AfterOnResultExecuted(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterOnResultExecuted(DiagnosticSource, ResultExecutedContext, IResultFilter)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuted(DiagnosticSource, ResultExecutedContext, IResultFilter)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterOnResultExecuted(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext, Microsoft.AspNetCore.Mvc.Filters.IResultFilter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterOnResultExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 655
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterOnResultExecuted(this DiagnosticSource diagnosticSource, ResultExecutedContext resultExecutedContext, IResultFilter filter)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterOnResultExecuted(diagnosticSource As DiagnosticSource, resultExecutedContext As ResultExecutedContext, filter As IResultFilter)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: resultExecutedContext
      type: Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
    - id: filter
      type: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  id: BeforeActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: BeforeActionResult(DiagnosticSource, ActionContext, IActionResult)
  nameWithType: MvcCoreDiagnosticSourceExtensions.BeforeActionResult(DiagnosticSource, ActionContext, IActionResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.BeforeActionResult(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.IActionResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BeforeActionResult
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 677
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void BeforeActionResult(this DiagnosticSource diagnosticSource, ActionContext actionContext, IActionResult result)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeforeActionResult(diagnosticSource As DiagnosticSource, actionContext As ActionContext, result As IActionResult)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: result
      type: Microsoft.AspNetCore.Mvc.IActionResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  id: AfterActionResult(System.Diagnostics.DiagnosticSource,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions
  langs:
  - csharp
  - vb
  name: AfterActionResult(DiagnosticSource, ActionContext, IActionResult)
  nameWithType: MvcCoreDiagnosticSourceExtensions.AfterActionResult(DiagnosticSource, ActionContext, IActionResult)
  fullName: Microsoft.AspNetCore.Mvc.Internal.MvcCoreDiagnosticSourceExtensions.AfterActionResult(System.Diagnostics.DiagnosticSource, Microsoft.AspNetCore.Mvc.ActionContext, Microsoft.AspNetCore.Mvc.IActionResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AfterActionResult
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/MvcCoreDiagnosticSourceExtensions.cs
    startLine: 694
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public static void AfterActionResult(this DiagnosticSource diagnosticSource, ActionContext actionContext, IActionResult result)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AfterActionResult(diagnosticSource As DiagnosticSource, actionContext As ActionContext, result As IActionResult)
    parameters:
    - id: diagnosticSource
      type: System.Diagnostics.DiagnosticSource
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
    - id: result
      type: Microsoft.AspNetCore.Mvc.IActionResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Diagnostics.DiagnosticSource
  commentId: T:System.Diagnostics.DiagnosticSource
  parent: System.Diagnostics
  isExternal: true
  name: DiagnosticSource
  nameWithType: DiagnosticSource
  fullName: System.Diagnostics.DiagnosticSource
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Routing.RouteData
  commentId: T:Microsoft.AspNetCore.Routing.RouteData
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: Microsoft.AspNetCore.Routing.RouteData
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: AuthorizationFilterContext
  nameWithType: AuthorizationFilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncAuthorizationFilter
  nameWithType: IAsyncAuthorizationFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAuthorizationFilter
  nameWithType: IAuthorizationFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResourceExecutingContext
  nameWithType: ResourceExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncResourceFilter
  nameWithType: IAsyncResourceFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResourceExecutedContext
  nameWithType: ResourceExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IResourceFilter
  nameWithType: IResourceFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ExceptionContext
  nameWithType: ExceptionContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncExceptionFilter
  nameWithType: IAsyncExceptionFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IExceptionFilter
  nameWithType: IExceptionFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ActionExecutingContext
  nameWithType: ActionExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncActionFilter
  nameWithType: IAsyncActionFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ActionExecutedContext
  nameWithType: ActionExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IActionFilter
  nameWithType: IActionFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResultExecutingContext
  nameWithType: ResultExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IAsyncResultFilter
  nameWithType: IAsyncResultFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResultExecutedContext
  nameWithType: ResultExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IResultFilter
  nameWithType: IResultFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResultFilter
