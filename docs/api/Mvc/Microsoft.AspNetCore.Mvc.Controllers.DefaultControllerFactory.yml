### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  id: DefaultControllerFactory
  parent: Microsoft.AspNetCore.Mvc.Controllers
  children:
  - Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator})
  - Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ControllerActivator
  - Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  - Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  langs:
  - csharp
  - vb
  name: DefaultControllerFactory
  nameWithType: DefaultControllerFactory
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultControllerFactory
    path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Controllers
  summary: "\nDefault implementation for <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class DefaultControllerFactory : IControllerFactory'
    content.vb: >-
      Public Class DefaultControllerFactory
          Implements IControllerFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator})
  commentId: M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator})
  id: '#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator})'
  parent: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  langs:
  - csharp
  - vb
  name: DefaultControllerFactory(IControllerActivator, IEnumerable<IControllerPropertyActivator>)
  nameWithType: DefaultControllerFactory.DefaultControllerFactory(IControllerActivator, IEnumerable<IControllerPropertyActivator>)
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.DefaultControllerFactory(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Controllers
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DefaultControllerFactory(IControllerActivator controllerActivator, IEnumerable<IControllerPropertyActivator> propertyActivators)
    content.vb: Public Sub New(controllerActivator As IControllerActivator, propertyActivators As IEnumerable(Of IControllerPropertyActivator))
    parameters:
    - id: controllerActivator
      type: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
      description: "\n<xref href=\"Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator\" data-throw-if-not-resolved=\"false\"></xref> used to create controller instances.\n"
    - id: propertyActivators
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator}
      description: "\nA set of <xref href=\"Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator\" data-throw-if-not-resolved=\"false\"></xref> instances used to initialize controller\nproperties.\n"
  nameWithType.vb: DefaultControllerFactory.DefaultControllerFactory(IControllerActivator, IEnumerable(Of IControllerPropertyActivator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.DefaultControllerFactory(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator))
  name.vb: DefaultControllerFactory(IControllerActivator, IEnumerable(Of IControllerPropertyActivator))
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ControllerActivator
  commentId: P:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ControllerActivator
  id: ControllerActivator
  parent: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  langs:
  - csharp
  - vb
  name: ControllerActivator
  nameWithType: DefaultControllerFactory.ControllerActivator
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ControllerActivator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerActivator
    path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Controllers
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator\" data-throw-if-not-resolved=\"false\"></xref> used to create a controller.\n"
  example: []
  syntax:
    content: protected IControllerActivator ControllerActivator { get; }
    content.vb: Protected ReadOnly Property ControllerActivator As IControllerActivator
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  id: CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  parent: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  langs:
  - csharp
  - vb
  name: CreateController(ControllerContext)
  nameWithType: DefaultControllerFactory.CreateController(ControllerContext)
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateController
    path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Controllers
  example: []
  syntax:
    content: public virtual object CreateController(ControllerContext context)
    content.vb: Public Overridable Function CreateController(context As ControllerContext) As Object
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ControllerContext
    return:
      type: System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  id: ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  langs:
  - csharp
  - vb
  name: ReleaseController(ControllerContext, Object)
  nameWithType: DefaultControllerFactory.ReleaseController(ControllerContext, Object)
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReleaseController
    path: src/Microsoft.AspNetCore.Mvc.Core/Controllers/DefaultControllerFactory.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Controllers
  example: []
  syntax:
    content: public virtual void ReleaseController(ControllerContext context, object controller)
    content.vb: Public Overridable Sub ReleaseController(context As ControllerContext, controller As Object)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ControllerContext
    - id: controller
      type: System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: IControllerFactory
  nameWithType: IControllerFactory
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
- uid: Microsoft.AspNetCore.Mvc.Controllers
  commentId: N:Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Controllers
  nameWithType: Microsoft.AspNetCore.Mvc.Controllers
  fullName: Microsoft.AspNetCore.Mvc.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
  isExternal: false
  name: DefaultControllerFactory
  nameWithType: DefaultControllerFactory
  fullName: Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
  parent: Microsoft.AspNetCore.Mvc.Controllers
  isExternal: false
  name: IControllerActivator
  nameWithType: IControllerActivator
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator
- uid: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IControllerPropertyActivator
  nameWithType: IControllerPropertyActivator
  fullName: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IControllerPropertyActivator>
  nameWithType: IEnumerable<IControllerPropertyActivator>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator>
  nameWithType.vb: IEnumerable(Of IControllerPropertyActivator)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator)
  name.vb: IEnumerable(Of IControllerPropertyActivator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
    name: IControllerPropertyActivator
    nameWithType: IControllerPropertyActivator
    fullName: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
    name: IControllerPropertyActivator
    nameWithType: IControllerPropertyActivator
    fullName: Microsoft.AspNetCore.Mvc.Internal.IControllerPropertyActivator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  parent: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  isExternal: false
  name: CreateController(ControllerContext)
  nameWithType: IControllerFactory.CreateController(ControllerContext)
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
    name: CreateController
    nameWithType: IControllerFactory.CreateController
    fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ControllerContext
    name: ControllerContext
    nameWithType: ControllerContext
    fullName: Microsoft.AspNetCore.Mvc.ControllerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)
    name: CreateController
    nameWithType: IControllerFactory.CreateController
    fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ControllerContext
    name: ControllerContext
    nameWithType: ControllerContext
    fullName: Microsoft.AspNetCore.Mvc.ControllerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ControllerContext
  commentId: T:Microsoft.AspNetCore.Mvc.ControllerContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ControllerContext
  nameWithType: ControllerContext
  fullName: Microsoft.AspNetCore.Mvc.ControllerContext
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
  parent: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory
  isExternal: true
  name: ReleaseController(ControllerContext, Object)
  nameWithType: IControllerFactory.ReleaseController(ControllerContext, Object)
  fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
    name: ReleaseController
    nameWithType: IControllerFactory.ReleaseController
    fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ControllerContext
    name: ControllerContext
    nameWithType: ControllerContext
    fullName: Microsoft.AspNetCore.Mvc.ControllerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)
    name: ReleaseController
    nameWithType: IControllerFactory.ReleaseController
    fullName: Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ControllerContext
    name: ControllerContext
    nameWithType: ControllerContext
    fullName: Microsoft.AspNetCore.Mvc.ControllerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
