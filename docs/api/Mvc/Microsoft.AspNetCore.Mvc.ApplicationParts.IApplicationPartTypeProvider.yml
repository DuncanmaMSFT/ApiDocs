### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider
  id: IApplicationPartTypeProvider
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  children:
  - Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider.Types
  langs:
  - csharp
  - vb
  name: IApplicationPartTypeProvider
  nameWithType: IApplicationPartTypeProvider
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationParts/IApplicationPartTypeProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IApplicationPartTypeProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationParts/IApplicationPartTypeProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationParts
  summary: "\nExposes a set of types from an <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IApplicationPartTypeProvider
    content.vb: Public Interface IApplicationPartTypeProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider.Types
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider.Types
  id: Types
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: IApplicationPartTypeProvider.Types
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider.Types
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationParts/IApplicationPartTypeProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Types
    path: src/Microsoft.AspNetCore.Mvc.Core/ApplicationParts/IApplicationPartTypeProvider.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApplicationParts
  summary: "\nGets the list of available types in the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IEnumerable<TypeInfo> Types { get; }
    content.vb: ReadOnly Property Types As IEnumerable(Of TypeInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPart
  nameWithType: ApplicationPart
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypeInfo>
  nameWithType: IEnumerable<TypeInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  nameWithType.vb: IEnumerable(Of TypeInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  name.vb: IEnumerable(Of TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
