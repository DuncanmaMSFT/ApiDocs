### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1
  id: DefaultPropertyFilterProvider`1
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.Prefix
  - Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyFilter
  - Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyIncludeExpressions
  langs:
  - csharp
  - vb
  name: DefaultPropertyFilterProvider<TModel>
  nameWithType: DefaultPropertyFilterProvider<TModel>
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider<TModel>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DefaultPropertyFilterProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nDefault implementation for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider\" data-throw-if-not-resolved=\"false\"></xref>.\nProvides a expression based way to provide include properties.\n"
  example: []
  syntax:
    content: 'public class DefaultPropertyFilterProvider<TModel> : IPropertyFilterProvider where TModel : class'
    content.vb: >-
      Public Class DefaultPropertyFilterProvider(Of TModel As Class)
          Implements IPropertyFilterProvider
    typeParameters:
    - id: TModel
      description: The target model Type.
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DefaultPropertyFilterProvider(Of TModel)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider(Of TModel)
  name.vb: DefaultPropertyFilterProvider(Of TModel)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.Prefix
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.Prefix
  id: Prefix
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: DefaultPropertyFilterProvider<TModel>.Prefix
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider<TModel>.Prefix
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Prefix
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nThe prefix which is used while generating the property filter.\n"
  example: []
  syntax:
    content: public virtual string Prefix { get; }
    content.vb: Public Overridable ReadOnly Property Prefix As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: DefaultPropertyFilterProvider(Of TModel).Prefix
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider(Of TModel).Prefix
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyIncludeExpressions
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyIncludeExpressions
  id: PropertyIncludeExpressions
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1
  langs:
  - csharp
  - vb
  name: PropertyIncludeExpressions
  nameWithType: DefaultPropertyFilterProvider<TModel>.PropertyIncludeExpressions
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider<TModel>.PropertyIncludeExpressions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyIncludeExpressions
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nExpressions which can be used to generate property filter which can filter model \nproperties.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Expression<Func<TModel, object>>> PropertyIncludeExpressions { get; }
    content.vb: Public Overridable ReadOnly Property PropertyIncludeExpressions As IEnumerable(Of Expression(Of Func(Of TModel, Object)))
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}}
  nameWithType.vb: DefaultPropertyFilterProvider(Of TModel).PropertyIncludeExpressions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider(Of TModel).PropertyIncludeExpressions
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyFilter
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyFilter
  id: PropertyFilter
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1
  langs:
  - csharp
  - vb
  name: PropertyFilter
  nameWithType: DefaultPropertyFilterProvider<TModel>.PropertyFilter
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider<TModel>.PropertyFilter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PropertyFilter
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/DefaultPropertyFilterProvider.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  example: []
  syntax:
    content: public virtual Func<ModelMetadata, bool> PropertyFilter { get; }
    content.vb: Public Overridable ReadOnly Property PropertyFilter As Func(Of ModelMetadata, Boolean)
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  nameWithType.vb: DefaultPropertyFilterProvider(Of TModel).PropertyFilter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider(Of TModel).PropertyFilter
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IPropertyFilterProvider
  nameWithType: IPropertyFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Expression<Func<TModel, Object>>>
  nameWithType: IEnumerable<Expression<Func<TModel, Object>>>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>>
  nameWithType.vb: IEnumerable(Of Expression(Of Func(Of TModel, Object)))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)))
  name.vb: IEnumerable(Of Expression(Of Func(Of TModel, Object)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
  isExternal: false
  name: PropertyFilter
  nameWithType: IPropertyFilterProvider.PropertyFilter
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter
- uid: System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ModelMetadata, Boolean>
  nameWithType: Func<ModelMetadata, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>
  nameWithType.vb: Func(Of ModelMetadata, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean)
  name.vb: Func(Of ModelMetadata, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
