### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  id: ValueProviderFactoryContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
  - Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviders
  langs:
  - csharp
  - vb
  name: ValueProviderFactoryContext
  nameWithType: ValueProviderFactoryContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviderFactoryContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nA context for <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class ValueProviderFactoryContext
    content.vb: Public Class ValueProviderFactoryContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  langs:
  - csharp
  - vb
  name: ValueProviderFactoryContext(ActionContext)
  nameWithType: ValueProviderFactoryContext.ValueProviderFactoryContext(ActionContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviderFactoryContext(Microsoft.AspNetCore.Mvc.ActionContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ValueProviderFactoryContext(ActionContext context)
    content.vb: Public Sub New(context As ActionContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
  id: ActionContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  langs:
  - csharp
  - vb
  name: ActionContext
  nameWithType: ValueProviderFactoryContext.ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext\" data-throw-if-not-resolved=\"false\"></xref> associated with this context.\n"
  example: []
  syntax:
    content: public ActionContext ActionContext { get; }
    content.vb: Public ReadOnly Property ActionContext As ActionContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ActionContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviders
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviders
  id: ValueProviders
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  langs:
  - csharp
  - vb
  name: ValueProviders
  nameWithType: ValueProviderFactoryContext.ValueProviders
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ValueProviders
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/ValueProviderFactoryContext.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding
  summary: "\nGets the list of <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> instances.\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory\" data-throw-if-not-resolved=\"false\"></xref> instances should add the appropriate\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider\" data-throw-if-not-resolved=\"false\"></xref> instances to this list.\n"
  example: []
  syntax:
    content: public IList<IValueProvider> ValueProviders { get; }
    content.vb: Public ReadOnly Property ValueProviders As IList(Of IValueProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProviderFactory
  nameWithType: IValueProviderFactory
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ValueProviderFactoryContext
  nameWithType: ValueProviderFactoryContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IValueProvider>
  nameWithType: IList<IValueProvider>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider>
  nameWithType.vb: IList(Of IValueProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  name.vb: IList(Of IValueProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    nameWithType: IValueProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
    name: IValueProvider
    nameWithType: IValueProvider
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
