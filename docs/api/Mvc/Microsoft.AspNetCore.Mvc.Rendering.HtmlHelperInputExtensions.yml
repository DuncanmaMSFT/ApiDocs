### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  id: HtmlHelperInputExtensions
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  langs:
  - csharp
  - vb
  name: HtmlHelperInputExtensions
  nameWithType: HtmlHelperInputExtensions
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlHelperInputExtensions
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nInput-related extensions for <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HtmlHelperInputExtensions
    content.vb: Public Module HtmlHelperInputExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: CheckBox(IHtmlHelper, String)
  nameWithType: HtmlHelperInputExtensions.CheckBox(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CheckBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"checkbox\" with value \"true\" and an &lt;input&gt; element of type\n\"hidden\" with value \"false\".\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\ncheckbox element's \"name\" attribute. Sanitizes <em>expression</em> to set checkbox element's \"id\"\nattribute.\n</p>\n<p>Determines checkbox element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> values is <code>true</code>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent CheckBox(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckBox(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; elements.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Boolean)
  id: CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: CheckBox(IHtmlHelper, String, Boolean)
  nameWithType: HtmlHelperInputExtensions.CheckBox(IHtmlHelper, String, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CheckBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"checkbox\" with value \"true\" and an &lt;input&gt; element of type\n\"hidden\" with value \"false\".\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\ncheckbox element's \"name\" attribute. Sanitizes <em>expression</em> to set checkbox element's \"id\"\nattribute.\n</p>\n<p>Determines checkbox element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> values is <code>true</code>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent CheckBox(this IHtmlHelper htmlHelper, string expression, bool isChecked)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckBox(htmlHelper As IHtmlHelper, expression As String, isChecked As Boolean) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: isChecked
      type: System.Boolean
      description: If <code>true</code>, checkbox is initially checked.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; elements.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: CheckBox(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.CheckBox(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CheckBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"checkbox\" with value \"true\" and an &lt;input&gt; element of type\n\"hidden\" with value \"false\".\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\ncheckbox element's \"name\" attribute. Sanitizes <em>expression</em> to set checkbox element's \"id\"\nattribute.\n</p>\n<p>Determines checkbox element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the <em>htmlAttributes</em> and default cases, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> values is <code>true</code>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent CheckBox(this IHtmlHelper htmlHelper, string expression, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckBox(htmlHelper As IHtmlHelper, expression As String, htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the checkbox element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; elements.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: CheckBoxFor``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: CheckBoxFor<TModel>(IHtmlHelper<TModel>, Expression<Func<TModel, Boolean>>)
  nameWithType: HtmlHelperInputExtensions.CheckBoxFor<TModel>(IHtmlHelper<TModel>, Expression<Func<TModel, Boolean>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor<TModel>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CheckBoxFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 196
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"checkbox\" with value \"true\" and an &lt;input&gt; element of type\n\"hidden\" with value \"false\".\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set checkbox element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set checkbox element's \"id\" attribute.\n</p>\n<p>Determines checkbox element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> values is <code>true</code>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent CheckBoxFor<TModel>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, bool>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckBoxFor(Of TModel)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, Boolean))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; elements.
  nameWithType.vb: HtmlHelperInputExtensions.CheckBoxFor(Of TModel)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, Boolean)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor(Of TModel)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Boolean)))
  name.vb: CheckBoxFor(Of TModel)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, Boolean)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: Hidden(IHtmlHelper, String)
  nameWithType: HtmlHelperInputExtensions.Hidden(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Hidden
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 244
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"hidden\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent Hidden(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hidden(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: Hidden(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.Hidden(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Hidden
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 287
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"hidden\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent Hidden(this IHtmlHelper htmlHelper, string expression, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hidden(htmlHelper As IHtmlHelper, expression As String, value As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: If non-<code>null</code>, value to include in the element.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: HiddenFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: HiddenFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperInputExtensions.HiddenFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HiddenFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 327
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"hidden\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;input&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent HiddenFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HiddenFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.HiddenFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: HiddenFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: Password(IHtmlHelper, String)
  nameWithType: HtmlHelperInputExtensions.Password(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Password
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 355
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"password\" for the specified <em>expression</em>.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute. Sets &lt;input&gt; element's \"value\" attribute to <code>string.Empty</code>.\n"
  example: []
  syntax:
    content: public static IHtmlContent Password(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Password(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: Password(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.Password(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Password
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 384
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"password\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent Password(this IHtmlHelper htmlHelper, string expression, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Password(htmlHelper As IHtmlHelper, expression As String, value As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: If non-<code>null</code>, value to include in the element.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: PasswordFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: PasswordFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperInputExtensions.PasswordFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PasswordFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 420
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"password\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;input&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent PasswordFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PasswordFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.PasswordFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: PasswordFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: RadioButton(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.RadioButton(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RadioButton
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 474
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"radio\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute. Sets &lt;input&gt; element's \"value\" attribute to <em>value</em>.\n</p>\n<p>Determines &lt;input&gt; element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values is equal to a converted <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> for\n<em>value</em>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent RadioButton(this IHtmlHelper htmlHelper, string expression, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RadioButton(htmlHelper As IHtmlHelper, expression As String, value As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: Value to include in the element. Must not be <code>null</code>.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  id: RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: RadioButton(IHtmlHelper, String, Object, Object)
  nameWithType: HtmlHelperInputExtensions.RadioButton(IHtmlHelper, String, Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RadioButton
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 539
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"radio\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n<p>Determines &lt;input&gt; element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the <em>htmlAttributes</em> and default cases, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values is equal to a converted <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> for\n<em>value</em>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent RadioButton(this IHtmlHelper htmlHelper, string expression, object value, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RadioButton(htmlHelper As IHtmlHelper, expression As String, value As Object, htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: "\nIf non-<code>null</code>, value to include in the element. Must not be <code>null</code> if no \"checked\" entry exists\nin <em>htmlAttributes</em>.\n"
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Boolean)
  id: RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: RadioButton(IHtmlHelper, String, Object, Boolean)
  nameWithType: HtmlHelperInputExtensions.RadioButton(IHtmlHelper, String, Object, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RadioButton
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 604
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"radio\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li></ol>\n<p>Determines &lt;input&gt; element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values is equal to a converted <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> for\n<em>value</em> or <em>isChecked</em> is <code>true</code> (for that case); does not include\nthe attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent RadioButton(this IHtmlHelper htmlHelper, string expression, object value, bool isChecked)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RadioButton(htmlHelper As IHtmlHelper, expression As String, value As Object, isChecked As Boolean) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: "\nIf non-<code>null</code>, value to include in the element. Must not be <code>null</code> if\n<em>isChecked</em> is also <code>null</code>.\n"
    - id: isChecked
      type: System.Boolean
      description: "\nIf <code>true</code>, radio button is initially selected. Must not be <code>null</code> if\n<em>value</em> is also <code>null</code>.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  id: RadioButtonFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: RadioButtonFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  nameWithType: HtmlHelperInputExtensions.RadioButtonFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RadioButtonFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 651
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"radio\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;select&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute. Converts the\n<em>value</em> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to set element's \"value\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"checked\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n<p>\nIn all but the default case, includes a \"checked\" attribute with\nvalue \"checked\" if the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values is equal to a converted <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> for\n<em>value</em>; does not include the attribute otherwise.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent RadioButtonFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RadioButtonFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), value As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: value
      type: System.Object
      description: Value to include in the element. Must not be <code>null</code>.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.RadioButtonFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Object)
  name.vb: RadioButtonFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBox(IHtmlHelper, String)
  nameWithType: HtmlHelperInputExtensions.TextBox(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 705
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBox(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBox(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBox(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.TextBox(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 750
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBox(this IHtmlHelper htmlHelper, string expression, object value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBox(htmlHelper As IHtmlHelper, expression As String, value As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: If non-<code>null</code>, value to include in the element.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  id: TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBox(IHtmlHelper, String, Object, String)
  nameWithType: HtmlHelperInputExtensions.TextBox(IHtmlHelper, String, Object, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 806
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBox(this IHtmlHelper htmlHelper, string expression, object value, string format)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBox(htmlHelper As IHtmlHelper, expression As String, value As Object, format As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: If non-<code>null</code>, value to include in the element.
    - id: format
      type: System.String
      description: "\nThe composite format <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  id: TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBox(IHtmlHelper, String, Object, Object)
  nameWithType: HtmlHelperInputExtensions.TextBox(IHtmlHelper, String, Object, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 861
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;input&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBox(this IHtmlHelper htmlHelper, string expression, object value, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBox(htmlHelper As IHtmlHelper, expression As String, value As Object, htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.Object
      description: If non-<code>null</code>, value to include in the element.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBoxFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 901
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;input&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBoxFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBoxFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  id: TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  nameWithType: HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBoxFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 949
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;input&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBoxFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string format)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBoxFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), format As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: format
      type: System.String
      description: "\nThe composite format <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (see http://msdn.microsoft.com/en-us/library/txafckwd.aspx).\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String)
  name.vb: TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  id: TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  nameWithType: HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextBoxFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 999
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns an &lt;input&gt; element of type \"text\" for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;input&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;input&gt; element's \"value\" attribute based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextBoxFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextBoxFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;input&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Object)
  name.vb: TextBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextArea(IHtmlHelper, String)
  nameWithType: HtmlHelperInputExtensions.TextArea(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextArea
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1048
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;textarea&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextArea(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextArea(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextArea(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperInputExtensions.TextArea(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextArea
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1096
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;textarea&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextArea(this IHtmlHelper htmlHelper, string expression, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextArea(htmlHelper As IHtmlHelper, expression As String, htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextArea(IHtmlHelper, String, String)
  nameWithType: HtmlHelperInputExtensions.TextArea(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextArea
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1142
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;textarea&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextArea(this IHtmlHelper htmlHelper, string expression, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextArea(htmlHelper As IHtmlHelper, expression As String, value As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.String
      description: If non-<code>null</code>, value to include in the element.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  id: TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextArea(IHtmlHelper, String, String, Object)
  nameWithType: HtmlHelperInputExtensions.TextArea(IHtmlHelper, String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextArea
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1193
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;textarea&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextArea(this IHtmlHelper htmlHelper, string expression, string value, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextArea(htmlHelper As IHtmlHelper, expression As String, value As String, htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: value
      type: System.String
      description: If non-<code>null</code>, value to include in the element.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextAreaFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperInputExtensions.TextAreaFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextAreaFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1233
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;textarea&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextAreaFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextAreaFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.TextAreaFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: TextAreaFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  id: TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions
  langs:
  - csharp
  - vb
  name: TextAreaFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  nameWithType: HtmlHelperInputExtensions.TextAreaFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextAreaFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperInputExtensions.cs
    startLine: 1281
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a &lt;textarea&gt; element for the specified <em>expression</em>.\n"
  remarks: "\n<p>\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;textarea&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n</p>\n<p>Determines &lt;textarea&gt; element's content based on the following precedence:</p>\n<ol><li></li><li></li><li></li></ol>\n"
  example: []
  syntax:
    content: public static IHtmlContent TextAreaFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TextAreaFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML\nattributes.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;textarea&gt; element.
  nameWithType.vb: HtmlHelperInputExtensions.TextAreaFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Object)
  name.vb: TextAreaFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: IHtmlHelper
  nameWithType: IHtmlHelper
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  isExternal: false
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{`0}
  parent: Microsoft.AspNetCore.Mvc.Rendering
  definition: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, Boolean>>
  nameWithType: Expression<Func<TModel, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TModel, Boolean))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Boolean))
  name.vb: Expression(Of Func(Of TModel, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, TResult>>
  nameWithType: Expression<Func<TModel, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, TResult>>
  nameWithType.vb: Expression(Of Func(Of TModel, TResult))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult))
  name.vb: Expression(Of Func(Of TModel, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
