### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  id: SerializableErrorWrapper
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor(Microsoft.AspNetCore.Mvc.SerializableError)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.GetSchema
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.ReadXml(System.Xml.XmlReader)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.Unwrap(System.Type)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SerializableErrorWrapper
  nameWithType: SerializableErrorWrapper
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializableErrorWrapper
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nWrapper class for <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError\" data-throw-if-not-resolved=\"false\"></xref> to enable it to be serialized by the xml formatters.\n"
  example: []
  syntax:
    content: 'public sealed class SerializableErrorWrapper : IXmlSerializable, IUnwrappable'
    content.vb: >-
      Public NotInheritable Class SerializableErrorWrapper
          Implements IXmlSerializable, IUnwrappable
  inheritance:
  - System.Object
  implements:
  - System.Xml.Serialization.IXmlSerializable
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: SerializableErrorWrapper()
  nameWithType: SerializableErrorWrapper.SerializableErrorWrapper()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableErrorWrapper()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  syntax:
    content: public SerializableErrorWrapper()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor(Microsoft.AspNetCore.Mvc.SerializableError)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.#ctor(Microsoft.AspNetCore.Mvc.SerializableError)
  id: '#ctor(Microsoft.AspNetCore.Mvc.SerializableError)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: SerializableErrorWrapper(SerializableError)
  nameWithType: SerializableErrorWrapper.SerializableErrorWrapper(SerializableError)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableErrorWrapper(Microsoft.AspNetCore.Mvc.SerializableError)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SerializableErrorWrapper(SerializableError error)
    content.vb: Public Sub New(error As SerializableError)
    parameters:
    - id: error
      type: Microsoft.AspNetCore.Mvc.SerializableError
      description: The <xref href="Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError" data-throw-if-not-resolved="false"></xref> object that needs to be wrapped.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
  id: SerializableError
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: SerializableError
  nameWithType: SerializableErrorWrapper.SerializableError
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializableError
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nGets the wrapped object which is serialized/deserialized into XML\nrepresentation.\n"
  example: []
  syntax:
    content: public SerializableError SerializableError { get; }
    content.vb: Public ReadOnly Property SerializableError As SerializableError
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.SerializableError
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.GetSchema
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.GetSchema
  id: GetSchema
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: SerializableErrorWrapper.GetSchema()
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.GetSchema()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetSchema
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    content.vb: Public Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: SerializableErrorWrapper.ReadXml(XmlReader)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadXml
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nGenerates a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError\" data-throw-if-not-resolved=\"false\"></xref> object from its XML representation.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the object is deserialized.
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: SerializableErrorWrapper.WriteXml(XmlWriter)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WriteXml
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nConverts the wrapped <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError\" data-throw-if-not-resolved=\"false\"></xref> object into its XML representation.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the object is serialized.
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.Unwrap(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.Unwrap(System.Type)
  id: Unwrap(System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  langs:
  - csharp
  - vb
  name: Unwrap(Type)
  nameWithType: SerializableErrorWrapper.Unwrap(Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.Unwrap(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Unwrap
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/SerializableErrorWrapper.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  example: []
  syntax:
    content: public object Unwrap(Type declaredType)
    content.vb: Public Function Unwrap(declaredType As Type) As Object
    parameters:
    - id: declaredType
      type: System.Type
    return:
      type: System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.SerializableError
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Xml
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Xml
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IUnwrappable
  nameWithType: IUnwrappable
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
  isExternal: false
  name: SerializableErrorWrapper
  nameWithType: SerializableErrorWrapper
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper
- uid: Microsoft.AspNetCore.Mvc.SerializableError
  commentId: T:Microsoft.AspNetCore.Mvc.SerializableError
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: SerializableError
  nameWithType: SerializableError
  fullName: Microsoft.AspNetCore.Mvc.SerializableError
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable
  isExternal: true
  name: Unwrap(Type)
  nameWithType: IUnwrappable.Unwrap(Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
    name: Unwrap
    nameWithType: IUnwrappable.Unwrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap(System.Type)
    name: Unwrap
    nameWithType: IUnwrappable.Unwrap
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IUnwrappable.Unwrap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
