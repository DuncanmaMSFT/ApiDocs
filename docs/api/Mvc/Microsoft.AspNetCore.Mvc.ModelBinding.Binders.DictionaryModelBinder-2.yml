### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  id: DictionaryModelBinder`2
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  children:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CanCreateInstance(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CreateEmptyCollection(System.Type)
  langs:
  - csharp
  - vb
  name: DictionaryModelBinder<TKey, TValue>
  nameWithType: DictionaryModelBinder<TKey, TValue>
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DictionaryModelBinder
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  summary: "\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder\" data-throw-if-not-resolved=\"false\"></xref> implementation for binding dictionary values.\n"
  example: []
  syntax:
    content: 'public class DictionaryModelBinder<TKey, TValue> : CollectionModelBinder<KeyValuePair<TKey, TValue>>, ICollectionModelBinder, IModelBinder'
    content.vb: >-
      Public Class DictionaryModelBinder(Of TKey, TValue)
          Inherits CollectionModelBinder(Of KeyValuePair(Of TKey, TValue))
          Implements ICollectionModelBinder, IModelBinder
    typeParameters:
    - id: TKey
      description: Type of keys in the dictionary.
    - id: TValue
      description: Type of values in the dictionary.
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  implements:
  - Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder
  - Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.ElementBinder
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CanCreateInstance(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CreateEmptyCollection(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CreateInstance(System.Type)
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue)
  name.vb: DictionaryModelBinder(Of TKey, TValue)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)'
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  langs:
  - csharp
  - vb
  name: DictionaryModelBinder(IModelBinder, IModelBinder)
  nameWithType: DictionaryModelBinder<TKey, TValue>.DictionaryModelBinder(IModelBinder, IModelBinder)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>.DictionaryModelBinder(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DictionaryModelBinder(IModelBinder keyBinder, IModelBinder valueBinder)
    content.vb: Public Sub New(keyBinder As IModelBinder, valueBinder As IModelBinder)
    parameters:
    - id: keyBinder
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" data-throw-if-not-resolved="false"></xref> for <em>TKey</em>.
    - id: valueBinder
      type: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
      description: The <xref href="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" data-throw-if-not-resolved="false"></xref> for <em>TValue</em>.
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue).DictionaryModelBinder(IModelBinder, IModelBinder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue).DictionaryModelBinder(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  id: BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  langs:
  - csharp
  - vb
  name: BindModelAsync(ModelBindingContext)
  nameWithType: DictionaryModelBinder<TKey, TValue>.BindModelAsync(ModelBindingContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BindModelAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  example: []
  syntax:
    content: public override Task BindModelAsync(ModelBindingContext bindingContext)
    content.vb: Public Overrides Function BindModelAsync(bindingContext As ModelBindingContext) As Task
    parameters:
    - id: bindingContext
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue).BindModelAsync(ModelBindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue).BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  langs:
  - csharp
  - vb
  name: ConvertToCollectionType(Type, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: DictionaryModelBinder<TKey, TValue>.ConvertToCollectionType(Type, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>.ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ConvertToCollectionType
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  example: []
  syntax:
    content: protected override object ConvertToCollectionType(Type targetType, IEnumerable<KeyValuePair<TKey, TValue>> collection)
    content.vb: Protected Overrides Function ConvertToCollectionType(targetType As Type, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As Object
    parameters:
    - id: targetType
      type: System.Type
    - id: collection
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    return:
      type: System.Object
  overridden: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue).ConvertToCollectionType(Type, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue).ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: ConvertToCollectionType(Type, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CreateEmptyCollection(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CreateEmptyCollection(System.Type)
  id: CreateEmptyCollection(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  langs:
  - csharp
  - vb
  name: CreateEmptyCollection(Type)
  nameWithType: DictionaryModelBinder<TKey, TValue>.CreateEmptyCollection(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>.CreateEmptyCollection(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateEmptyCollection
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  example: []
  syntax:
    content: protected override object CreateEmptyCollection(Type targetType)
    content.vb: Protected Overrides Function CreateEmptyCollection(targetType As Type) As Object
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Object
  overridden: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CreateEmptyCollection(System.Type)
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue).CreateEmptyCollection(Type)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue).CreateEmptyCollection(System.Type)
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CanCreateInstance(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CanCreateInstance(System.Type)
  id: CanCreateInstance(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  langs:
  - csharp
  - vb
  name: CanCreateInstance(Type)
  nameWithType: DictionaryModelBinder<TKey, TValue>.CanCreateInstance(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>.CanCreateInstance(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CanCreateInstance
    path: src/Microsoft.AspNetCore.Mvc.Core/ModelBinding/Binders/DictionaryModelBinder.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  syntax:
    content: public override bool CanCreateInstance(Type targetType)
    content.vb: Public Overrides Function CanCreateInstance(targetType As Type) As Boolean
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CanCreateInstance(System.Type)
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue).CanCreateInstance(Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue).CanCreateInstance(System.Type)
references:
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: IModelBinder
  nameWithType: IModelBinder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
  name: CollectionModelBinder<KeyValuePair<TKey, TValue>>
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
    name: CollectionModelBinder
    nameWithType: CollectionModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
    name: CollectionModelBinder
    nameWithType: CollectionModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ICollectionModelBinder
  nameWithType: ICollectionModelBinder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.ElementBinder
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.ElementBinder
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ElementBinder
  name: ElementBinder
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.ElementBinder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.ElementBinder
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).ElementBinder
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).ElementBinder
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  name: BindModelAsync(ModelBindingContext)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.BindModelAsync(ModelBindingContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).BindModelAsync(ModelBindingContext)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
    name: BindModelAsync
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.BindModelAsync
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.BindModelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
    name: ModelBindingContext
    nameWithType: ModelBindingContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
    name: BindModelAsync
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).BindModelAsync
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).BindModelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
    name: ModelBindingContext
    nameWithType: ModelBindingContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CanCreateInstance(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.CanCreateInstance(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
  name: CanCreateInstance(Type)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CanCreateInstance(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CanCreateInstance(System.Type)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CanCreateInstance(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CanCreateInstance(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
    name: CanCreateInstance
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CanCreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CanCreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
    name: CanCreateInstance
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CanCreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CanCreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CreateEmptyCollection(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.CreateEmptyCollection(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
  name: CreateEmptyCollection(Type)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CreateEmptyCollection(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CreateEmptyCollection(System.Type)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CreateEmptyCollection(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CreateEmptyCollection(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
    name: CreateEmptyCollection
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CreateEmptyCollection
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CreateEmptyCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
    name: CreateEmptyCollection
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CreateEmptyCollection
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CreateEmptyCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CreateInstance(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.CreateInstance(System.Type)
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
  name: CreateInstance(Type)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CreateInstance(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CreateInstance(System.Type)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CreateInstance(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CreateInstance(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
  name: ConvertToCollectionType(Type, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.ConvertToCollectionType(Type, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).ConvertToCollectionType(Type, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: ConvertToCollectionType(Type, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
    name: ConvertToCollectionType
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.ConvertToCollectionType
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.ConvertToCollectionType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
    name: ConvertToCollectionType
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).ConvertToCollectionType
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).ConvertToCollectionType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
  name: CopyToModel(Object, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CopyToModel(Object, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyToModel(System.Object, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  nameWithType.vb: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CopyToModel(Object, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyToModel(System.Object, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CopyToModel(Object, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
    name: CopyToModel
    nameWithType: CollectionModelBinder<KeyValuePair<TKey, TValue>>.CopyToModel
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyToModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
    name: CopyToModel
    nameWithType: CollectionModelBinder(Of KeyValuePair(Of TKey, TValue)).CopyToModel
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyToModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
  isExternal: false
  name: CollectionModelBinder<TElement>
  nameWithType: CollectionModelBinder<TElement>
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>
  nameWithType.vb: CollectionModelBinder(Of TElement)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement)
  name.vb: CollectionModelBinder(Of TElement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
    name: CollectionModelBinder
    nameWithType: CollectionModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1
    name: CollectionModelBinder
    nameWithType: CollectionModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ElementBinder
  commentId: P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ElementBinder
  isExternal: false
  name: ElementBinder
  nameWithType: CollectionModelBinder<TElement>.ElementBinder
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.ElementBinder
  nameWithType.vb: CollectionModelBinder(Of TElement).ElementBinder
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).ElementBinder
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  isExternal: false
  name: BindModelAsync(ModelBindingContext)
  nameWithType: CollectionModelBinder<TElement>.BindModelAsync(ModelBindingContext)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  nameWithType.vb: CollectionModelBinder(Of TElement).BindModelAsync(ModelBindingContext)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
    name: BindModelAsync
    nameWithType: CollectionModelBinder<TElement>.BindModelAsync
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.BindModelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
    name: ModelBindingContext
    nameWithType: ModelBindingContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)
    name: BindModelAsync
    nameWithType: CollectionModelBinder(Of TElement).BindModelAsync
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).BindModelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
    name: ModelBindingContext
    nameWithType: ModelBindingContext
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
  isExternal: true
  name: CanCreateInstance(Type)
  nameWithType: CollectionModelBinder<TElement>.CanCreateInstance(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CanCreateInstance(System.Type)
  nameWithType.vb: CollectionModelBinder(Of TElement).CanCreateInstance(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CanCreateInstance(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
    name: CanCreateInstance
    nameWithType: CollectionModelBinder<TElement>.CanCreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CanCreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)
    name: CanCreateInstance
    nameWithType: CollectionModelBinder(Of TElement).CanCreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CanCreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
  isExternal: true
  name: CreateEmptyCollection(Type)
  nameWithType: CollectionModelBinder<TElement>.CreateEmptyCollection(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CreateEmptyCollection(System.Type)
  nameWithType.vb: CollectionModelBinder(Of TElement).CreateEmptyCollection(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CreateEmptyCollection(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
    name: CreateEmptyCollection
    nameWithType: CollectionModelBinder<TElement>.CreateEmptyCollection
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CreateEmptyCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)
    name: CreateEmptyCollection
    nameWithType: CollectionModelBinder(Of TElement).CreateEmptyCollection
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CreateEmptyCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
  isExternal: true
  name: CreateInstance(Type)
  nameWithType: CollectionModelBinder<TElement>.CreateInstance(Type)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CreateInstance(System.Type)
  nameWithType.vb: CollectionModelBinder(Of TElement).CreateInstance(Type)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CreateInstance(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionModelBinder<TElement>.CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionModelBinder(Of TElement).CreateInstance
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: ConvertToCollectionType(Type, IEnumerable<TElement>)
  nameWithType: CollectionModelBinder<TElement>.ConvertToCollectionType(Type, IEnumerable<TElement>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable<TElement>)
  nameWithType.vb: CollectionModelBinder(Of TElement).ConvertToCollectionType(Type, IEnumerable(Of TElement))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).ConvertToCollectionType(System.Type, System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: ConvertToCollectionType(Type, IEnumerable(Of TElement))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
    name: ConvertToCollectionType
    nameWithType: CollectionModelBinder<TElement>.ConvertToCollectionType
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.ConvertToCollectionType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})
    name: ConvertToCollectionType
    nameWithType: CollectionModelBinder(Of TElement).ConvertToCollectionType
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).ConvertToCollectionType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: CopyToModel(Object, IEnumerable<TElement>)
  nameWithType: CollectionModelBinder<TElement>.CopyToModel(Object, IEnumerable<TElement>)
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CopyToModel(System.Object, System.Collections.Generic.IEnumerable<TElement>)
  nameWithType.vb: CollectionModelBinder(Of TElement).CopyToModel(Object, IEnumerable(Of TElement))
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CopyToModel(System.Object, System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: CopyToModel(Object, IEnumerable(Of TElement))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
    name: CopyToModel
    nameWithType: CollectionModelBinder<TElement>.CopyToModel
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder<TElement>.CopyToModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})
    name: CopyToModel
    nameWithType: CollectionModelBinder(Of TElement).CopyToModel
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder(Of TElement).CopyToModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
  isExternal: false
  name: DictionaryModelBinder<TKey, TValue>
  nameWithType: DictionaryModelBinder<TKey, TValue>
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder<TKey, TValue>
  nameWithType.vb: DictionaryModelBinder(Of TKey, TValue)
  fullname.vb: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder(Of TKey, TValue)
  name.vb: DictionaryModelBinder(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
    name: DictionaryModelBinder
    nameWithType: DictionaryModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2
    name: DictionaryModelBinder
    nameWithType: DictionaryModelBinder
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelBindingContext
  nameWithType: ModelBindingContext
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
