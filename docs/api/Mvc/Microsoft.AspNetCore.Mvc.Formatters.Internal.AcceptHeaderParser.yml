### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser
  id: AcceptHeaderParser
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String})
  - Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  langs:
  - csharp
  - vb
  name: AcceptHeaderParser
  nameWithType: AcceptHeaderParser
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AcceptHeaderParser
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  syntax:
    content: public static class AcceptHeaderParser
    content.vb: Public Module AcceptHeaderParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String})
  id: ParseAcceptHeader(System.Collections.Generic.IList{System.String})
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser
  langs:
  - csharp
  - vb
  name: ParseAcceptHeader(IList<String>)
  nameWithType: AcceptHeaderParser.ParseAcceptHeader(IList<String>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ParseAcceptHeader
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  syntax:
    content: public static IList<MediaTypeSegmentWithQuality> ParseAcceptHeader(IList<string> acceptHeaders)
    content.vb: Public Shared Function ParseAcceptHeader(acceptHeaders As IList(Of String)) As IList(Of MediaTypeSegmentWithQuality)
    parameters:
    - id: acceptHeaders
      type: System.Collections.Generic.IList{System.String}
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  nameWithType.vb: AcceptHeaderParser.ParseAcceptHeader(IList(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList(Of System.String))
  name.vb: ParseAcceptHeader(IList(Of String))
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  id: ParseAcceptHeader(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality})
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser
  langs:
  - csharp
  - vb
  name: ParseAcceptHeader(IList<String>, IList<MediaTypeSegmentWithQuality>)
  nameWithType: AcceptHeaderParser.ParseAcceptHeader(IList<String>, IList<MediaTypeSegmentWithQuality>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ParseAcceptHeader
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/AcceptHeaderParser.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Internal
  syntax:
    content: public static void ParseAcceptHeader(IList<string> acceptHeaders, IList<MediaTypeSegmentWithQuality> parsedValues)
    content.vb: Public Shared Sub ParseAcceptHeader(acceptHeaders As IList(Of String), parsedValues As IList(Of MediaTypeSegmentWithQuality))
    parameters:
    - id: acceptHeaders
      type: System.Collections.Generic.IList{System.String}
    - id: parsedValues
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  nameWithType.vb: AcceptHeaderParser.ParseAcceptHeader(IList(Of String), IList(Of MediaTypeSegmentWithQuality))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.Internal.AcceptHeaderParser.ParseAcceptHeader(System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality))
  name.vb: ParseAcceptHeader(IList(Of String), IList(Of MediaTypeSegmentWithQuality))
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Internal
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MediaTypeSegmentWithQuality>
  nameWithType: IList<MediaTypeSegmentWithQuality>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality>
  nameWithType.vb: IList(Of MediaTypeSegmentWithQuality)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality)
  name.vb: IList(Of MediaTypeSegmentWithQuality)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
    name: MediaTypeSegmentWithQuality
    nameWithType: MediaTypeSegmentWithQuality
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
    name: MediaTypeSegmentWithQuality
    nameWithType: MediaTypeSegmentWithQuality
    fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
