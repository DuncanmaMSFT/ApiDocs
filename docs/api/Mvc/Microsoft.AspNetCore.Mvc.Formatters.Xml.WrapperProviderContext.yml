### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  id: WrapperProviderContext
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.#ctor(System.Type,System.Boolean)
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.DeclaredType
  - Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.IsSerialization
  langs:
  - csharp
  - vb
  name: WrapperProviderContext
  nameWithType: WrapperProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WrapperProviderContext
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nThe context used by an <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider\" data-throw-if-not-resolved=\"false\"></xref> to wrap or un-wrap types.\n"
  example: []
  syntax:
    content: public class WrapperProviderContext
    content.vb: Public Class WrapperProviderContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.#ctor(System.Type,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.#ctor(System.Type,System.Boolean)
  id: '#ctor(System.Type,System.Boolean)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  langs:
  - csharp
  - vb
  name: WrapperProviderContext(Type, Boolean)
  nameWithType: WrapperProviderContext.WrapperProviderContext(Type, Boolean)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.WrapperProviderContext(System.Type, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nInitializes a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public WrapperProviderContext(Type declaredType, bool isSerialization)
    content.vb: Public Sub New(declaredType As Type, isSerialization As Boolean)
    parameters:
    - id: declaredType
      type: System.Type
      description: The declared type of the object that needs to be wrapped.
    - id: isSerialization
      type: System.Boolean
      description: >-
        <xref uid="langword_csharp_true" name="true" href=""></xref> if the wrapper provider is invoked during
            serialization, otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.DeclaredType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.DeclaredType
  id: DeclaredType
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  langs:
  - csharp
  - vb
  name: DeclaredType
  nameWithType: WrapperProviderContext.DeclaredType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.DeclaredType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DeclaredType
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\nThe declared type which could be wrapped/un-wrapped by a different type \nduring serialization or de-serializatoin.\n"
  example: []
  syntax:
    content: public Type DeclaredType { get; }
    content.vb: Public ReadOnly Property DeclaredType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.IsSerialization
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.IsSerialization
  id: IsSerialization
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  langs:
  - csharp
  - vb
  name: IsSerialization
  nameWithType: WrapperProviderContext.IsSerialization
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext.IsSerialization
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsSerialization
    path: src/Microsoft.AspNetCore.Mvc.Formatters.Xml/WrapperProviderContext.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Formatters.Xml
  namespace: Microsoft.AspNetCore.Mvc.Formatters.Xml
  summary: "\n<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a wrapper provider is invoked during serialization,\n<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n"
  example: []
  syntax:
    content: public bool IsSerialization { get; }
    content.vb: Public ReadOnly Property IsSerialization As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: IWrapperProvider
  nameWithType: IWrapperProvider
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProvider
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Xml
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Xml
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
  parent: Microsoft.AspNetCore.Mvc.Formatters.Xml
  isExternal: false
  name: WrapperProviderContext
  nameWithType: WrapperProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Xml.WrapperProviderContext
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
