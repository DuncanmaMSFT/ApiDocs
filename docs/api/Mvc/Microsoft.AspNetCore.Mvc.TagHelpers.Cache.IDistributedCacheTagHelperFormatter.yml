### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter
  id: IDistributedCacheTagHelperFormatter
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.DeserializeAsync(System.Byte[])
  - Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.SerializeAsync(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext)
  langs:
  - csharp
  - vb
  name: IDistributedCacheTagHelperFormatter
  nameWithType: IDistributedCacheTagHelperFormatter
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IDistributedCacheTagHelperFormatter
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nAn implementation of this interface provides a service to\nserialize html fragments for being store by <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperStorage\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public interface IDistributedCacheTagHelperFormatter
    content.vb: Public Interface IDistributedCacheTagHelperFormatter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.SerializeAsync(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.SerializeAsync(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext)
  id: SerializeAsync(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext)
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter
  langs:
  - csharp
  - vb
  name: SerializeAsync(DistributedCacheTagHelperFormattingContext)
  nameWithType: IDistributedCacheTagHelperFormatter.SerializeAsync(DistributedCacheTagHelperFormattingContext)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.SerializeAsync(Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SerializeAsync
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nSerializes some html content.\n"
  example: []
  syntax:
    content: Task<byte[]> SerializeAsync(DistributedCacheTagHelperFormattingContext context)
    content.vb: Function SerializeAsync(context As DistributedCacheTagHelperFormattingContext) As Task(Of Byte())
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext" data-throw-if-not-resolved="false"></xref> to serialize.
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The serialized result.
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.DeserializeAsync(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.DeserializeAsync(System.Byte[])
  id: DeserializeAsync(System.Byte[])
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter
  langs:
  - csharp
  - vb
  name: DeserializeAsync(Byte[])
  nameWithType: IDistributedCacheTagHelperFormatter.DeserializeAsync(Byte[])
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.DeserializeAsync(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DeserializeAsync
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Cache/IDistributedCacheTagHelperFormatter.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  summary: "\nDeserialize some html content.\n"
  example: []
  syntax:
    content: Task<HtmlString> DeserializeAsync(byte[] value)
    content.vb: Function DeserializeAsync(value As Byte()) As Task(Of HtmlString)
    parameters:
    - id: value
      type: System.Byte[]
      description: The value to deserialize.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Html.HtmlString}
      description: The deserialized content, <returns>null</returns> otherwise.
  nameWithType.vb: IDistributedCacheTagHelperFormatter.DeserializeAsync(Byte())
  fullName.vb: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperFormatter.DeserializeAsync(System.Byte())
  name.vb: DeserializeAsync(Byte())
references:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperStorage
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperStorage
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  isExternal: false
  name: IDistributedCacheTagHelperStorage
  nameWithType: IDistributedCacheTagHelperStorage
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.IDistributedCacheTagHelperStorage
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Cache
  isExternal: false
  name: DistributedCacheTagHelperFormattingContext
  nameWithType: DistributedCacheTagHelperFormattingContext
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Cache.DistributedCacheTagHelperFormattingContext
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullname.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Html.HtmlString}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Html.HtmlString}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HtmlString>
  nameWithType: Task<HtmlString>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Html.HtmlString>
  nameWithType.vb: Task(Of HtmlString)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Html.HtmlString)
  name.vb: Task(Of HtmlString)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Html.HtmlString
    name: HtmlString
    nameWithType: HtmlString
    fullName: Microsoft.AspNetCore.Html.HtmlString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Html.HtmlString
    name: HtmlString
    nameWithType: HtmlString
    fullName: Microsoft.AspNetCore.Html.HtmlString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
