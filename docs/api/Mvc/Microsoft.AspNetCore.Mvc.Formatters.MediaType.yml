### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.MediaType
  id: MediaType
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(Microsoft.Extensions.Primitives.StringSegment)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String,System.Int32,System.Nullable{System.Int32})
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String,System.Int32)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType
  - Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: MediaType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MediaType
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nA media type value.\n"
  example: []
  syntax:
    content: public struct MediaType
    content.vb: Public Structure MediaType
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: MediaType(String)
  nameWithType: MediaType.MediaType(String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaType(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nInitializes a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public MediaType(string mediaType)
    content.vb: Public Sub New(mediaType As String)
    parameters:
    - id: mediaType
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> with the media type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(Microsoft.Extensions.Primitives.StringSegment)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(Microsoft.Extensions.Primitives.StringSegment)
  id: '#ctor(Microsoft.Extensions.Primitives.StringSegment)'
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: MediaType(StringSegment)
  nameWithType: MediaType.MediaType(StringSegment)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaType(Microsoft.Extensions.Primitives.StringSegment)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nInitializes a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public MediaType(StringSegment mediaType)
    content.vb: Public Sub New(mediaType As StringSegment)
    parameters:
    - id: mediaType
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The <xref href="Microsoft.Extensions.Primitives.StringSegment" data-throw-if-not-resolved="false"></xref> with the media type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String,System.Int32,System.Nullable{System.Int32})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String,System.Int32,System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Int32,System.Nullable{System.Int32})'
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: MediaType(String, Int32, Nullable<Int32>)
  nameWithType: MediaType.MediaType(String, Int32, Nullable<Int32>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaType(System.String, System.Int32, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nInitializes a <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaTypeParameterParser\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public MediaType(string mediaType, int offset, int ? length)
    content.vb: Public Sub New(mediaType As String, offset As Integer, length As Integer?)
    parameters:
    - id: mediaType
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> with the media type.
    - id: offset
      type: System.Int32
      description: The offset in the <em>mediaType</em> where the parsing starts.
    - id: length
      type: System.Nullable{System.Int32}
      description: The of the media type to parse if provided.
  nameWithType.vb: MediaType.MediaType(String, Int32, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaType(System.String, System.Int32, System.Nullable(Of System.Int32))
  name.vb: MediaType(String, Int32, Nullable(Of Int32))
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type
  id: Type
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MediaType.Type
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Type
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 154
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the type of the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StringSegment Type { get; }
    content.vb: Public ReadOnly Property Type As StringSegment
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes
  id: MatchesAllTypes
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: MatchesAllTypes
  nameWithType: MediaType.MatchesAllTypes
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MatchesAllTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 159
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets whether this <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> matches all types.\n"
  example: []
  syntax:
    content: public bool MatchesAllTypes { get; }
    content.vb: Public ReadOnly Property MatchesAllTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType
  id: SubType
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: SubType
  nameWithType: MediaType.SubType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SubType
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the subtype of the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StringSegment SubType { get; }
    content.vb: Public ReadOnly Property SubType As StringSegment
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes
  id: MatchesAllSubTypes
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: MatchesAllSubTypes
  nameWithType: MediaType.MatchesAllSubTypes
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MatchesAllSubTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 169
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets whether this <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> matches all subtypes.\n"
  example: []
  syntax:
    content: public bool MatchesAllSubTypes { get; }
    content.vb: Public ReadOnly Property MatchesAllSubTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding
  id: Encoding
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: MediaType.Encoding
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Encoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 174
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> if it has one.\n"
  example: []
  syntax:
    content: public Encoding Encoding { get; }
    content.vb: Public ReadOnly Property Encoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset
  id: Charset
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: Charset
  nameWithType: MediaType.Charset
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Charset
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the charset parameter of the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> if it has one.\n"
  example: []
  syntax:
    content: public StringSegment Charset { get; }
    content.vb: Public ReadOnly Property Charset As StringSegment
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)
  id: IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: IsSubsetOf(MediaType)
  nameWithType: MediaType.IsSubsetOf(MediaType)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsSubsetOf
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 188
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nDetermines whether the current <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> is a subset of the <em>set</em> <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsSubsetOf(MediaType set)
    content.vb: Public Function IsSubsetOf(set As MediaType) As Boolean
    parameters:
    - id: set
      type: Microsoft.AspNetCore.Mvc.Formatters.MediaType
      description: The set <xref href="Microsoft.AspNetCore.Mvc.Formatters.MediaType" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: "\n<pre><code>true</code></pre> if this <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.MediaType\" data-throw-if-not-resolved=\"false\"></xref> is a subset of <em>set</em>; otherwise<pre><code>false</code></pre>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)
  id: GetParameter(System.String)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: GetParameter(String)
  nameWithType: MediaType.GetParameter(String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetParameter
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the parameter <em>parameterName</em> of the media type.\n"
  example: []
  syntax:
    content: public StringSegment GetParameter(string parameterName)
    content.vb: Public Function GetParameter(parameterName As String) As StringSegment
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to retrieve.
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The <xref href="Microsoft.Extensions.Primitives.StringSegment" data-throw-if-not-resolved="false"></xref>for the given <em>parameterName</em> if found; otherwise<pre><code>null</code></pre>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)
  id: GetParameter(Microsoft.Extensions.Primitives.StringSegment)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: GetParameter(StringSegment)
  nameWithType: MediaType.GetParameter(StringSegment)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetParameter
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 210
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the parameter <em>parameterName</em> of the media type.\n"
  example: []
  syntax:
    content: public StringSegment GetParameter(StringSegment parameterName)
    content.vb: Public Function GetParameter(parameterName As StringSegment) As StringSegment
    parameters:
    - id: parameterName
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The name of the parameter to retrieve.
    return:
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The <xref href="Microsoft.Extensions.Primitives.StringSegment" data-throw-if-not-resolved="false"></xref>for the given <em>parameterName</em> if found; otherwise<pre><code>null</code></pre>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String,System.Text.Encoding)
  id: ReplaceEncoding(System.String,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: ReplaceEncoding(String, Encoding)
  nameWithType: MediaType.ReplaceEncoding(String, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReplaceEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 233
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReplaces the encoding of the given <em>mediaType</em> with the provided\n<em>encoding</em>.\n"
  example: []
  syntax:
    content: public static string ReplaceEncoding(string mediaType, Encoding encoding)
    content.vb: Public Shared Function ReplaceEncoding(mediaType As String, encoding As Encoding) As String
    parameters:
    - id: mediaType
      type: System.String
      description: The media type whose encoding will be replaced.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding that will replace the encoding in the <em>mediaType</em>
    return:
      type: System.String
      description: A media type with the replaced encoding.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)
  id: ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: ReplaceEncoding(StringSegment, Encoding)
  nameWithType: MediaType.ReplaceEncoding(StringSegment, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReplaceEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 245
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReplaces the encoding of the given <em>mediaType</em> with the provided\n<em>encoding</em>.\n"
  example: []
  syntax:
    content: public static string ReplaceEncoding(StringSegment mediaType, Encoding encoding)
    content.vb: Public Shared Function ReplaceEncoding(mediaType As StringSegment, encoding As Encoding) As String
    parameters:
    - id: mediaType
      type: Microsoft.Extensions.Primitives.StringSegment
      description: The media type whose encoding will be replaced.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding that will replace the encoding in the <em>mediaType</em>
    return:
      type: System.String
      description: A media type with the replaced encoding.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)
  id: GetEncoding(System.String)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: GetEncoding(String)
  nameWithType: MediaType.GetEncoding(String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 273
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  syntax:
    content: public static Encoding GetEncoding(string mediaType)
    content.vb: Public Shared Function GetEncoding(mediaType As String) As Encoding
    parameters:
    - id: mediaType
      type: System.String
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)
  id: GetEncoding(Microsoft.Extensions.Primitives.StringSegment)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: GetEncoding(StringSegment)
  nameWithType: MediaType.GetEncoding(StringSegment)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 278
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  syntax:
    content: public static Encoding GetEncoding(StringSegment mediaType)
    content.vb: Public Shared Function GetEncoding(mediaType As StringSegment) As Encoding
    parameters:
    - id: mediaType
      type: Microsoft.Extensions.Primitives.StringSegment
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String,System.Int32)
  id: CreateMediaTypeSegmentWithQuality(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  langs:
  - csharp
  - vb
  name: CreateMediaTypeSegmentWithQuality(String, Int32)
  nameWithType: MediaType.CreateMediaTypeSegmentWithQuality(String, Int32)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: CreateMediaTypeSegmentWithQuality
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/MediaType.cs
    startLine: 291
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality\" data-throw-if-not-resolved=\"false\"></xref> containing the media type in <em>mediaType</em>\nand its associated quality.\n"
  example: []
  syntax:
    content: public static MediaTypeSegmentWithQuality CreateMediaTypeSegmentWithQuality(string mediaType, int start)
    content.vb: Public Shared Function CreateMediaTypeSegmentWithQuality(mediaType As String, start As Integer) As MediaTypeSegmentWithQuality
    parameters:
    - id: mediaType
      type: System.String
      description: The media type to parse.
    - id: start
      type: System.Int32
      description: The position at which the parsing starts.
    return:
      type: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
      description: The parsed media type with its associated quality.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.MediaType
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: MediaType
  nameWithType: MediaType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.MediaType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Primitives.StringSegment
  commentId: T:Microsoft.Extensions.Primitives.StringSegment
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringSegment
  nameWithType: StringSegment
  fullName: Microsoft.Extensions.Primitives.StringSegment
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaTypeParameterParser
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaTypeParameterParser
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
  parent: Microsoft.AspNetCore.Mvc.Formatters.Internal
  isExternal: false
  name: MediaTypeSegmentWithQuality
  nameWithType: MediaTypeSegmentWithQuality
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality
- uid: Microsoft.AspNetCore.Mvc.Formatters.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters.Internal
  fullName: Microsoft.AspNetCore.Mvc.Formatters.Internal
