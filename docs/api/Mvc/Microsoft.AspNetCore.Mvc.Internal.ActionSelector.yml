### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  id: ActionSelector
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ActionSelector.#ctor(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider,Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)
  - Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  - Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  - Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  langs:
  - csharp
  - vb
  name: ActionSelector
  nameWithType: ActionSelector
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionSelector
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nA default <xref href=\"Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector\" data-throw-if-not-resolved=\"false\"></xref> implementation.\n"
  example: []
  syntax:
    content: 'public class ActionSelector : IActionSelector'
    content.vb: >-
      Public Class ActionSelector
          Implements IActionSelector
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.#ctor(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider,Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.#ctor(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider,Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider,Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  langs:
  - csharp
  - vb
  name: ActionSelector(IActionSelectorDecisionTreeProvider, ActionConstraintCache, ILoggerFactory)
  nameWithType: ActionSelector.ActionSelector(IActionSelectorDecisionTreeProvider, ActionConstraintCache, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.ActionSelector(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider, Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Internal.ActionSelector\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionSelector(IActionSelectorDecisionTreeProvider decisionTreeProvider, ActionConstraintCache actionConstraintCache, ILoggerFactory loggerFactory)
    content.vb: Public Sub New(decisionTreeProvider As IActionSelectorDecisionTreeProvider, actionConstraintCache As ActionConstraintCache, loggerFactory As ILoggerFactory)
    parameters:
    - id: decisionTreeProvider
      type: Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider
      description: The <xref href="Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider" data-throw-if-not-resolved="false"></xref>.
    - id: actionConstraintCache
      type: Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache" data-throw-if-not-resolved="false"></xref> that

        providers a set of <xref href="Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" data-throw-if-not-resolved="false"></xref> instances.
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  id: SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  langs:
  - csharp
  - vb
  name: SelectCandidates(RouteContext)
  nameWithType: ActionSelector.SelectCandidates(RouteContext)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectCandidates
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public IReadOnlyList<ActionDescriptor> SelectCandidates(RouteContext context)
    content.vb: Public Function SelectCandidates(context As RouteContext) As IReadOnlyList(Of ActionDescriptor)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.RouteContext
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  implements:
  - Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  id: SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  parent: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  langs:
  - csharp
  - vb
  name: SelectBestCandidate(RouteContext, IReadOnlyList<ActionDescriptor>)
  nameWithType: ActionSelector.SelectBestCandidate(RouteContext, IReadOnlyList<ActionDescriptor>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectBestCandidate
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public ActionDescriptor SelectBestCandidate(RouteContext context, IReadOnlyList<ActionDescriptor> candidates)
    content.vb: Public Function SelectBestCandidate(context As RouteContext, candidates As IReadOnlyList(Of ActionDescriptor)) As ActionDescriptor
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.RouteContext
    - id: candidates
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
    return:
      type: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  implements:
  - Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  nameWithType.vb: ActionSelector.SelectBestCandidate(RouteContext, IReadOnlyList(Of ActionDescriptor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor))
  name.vb: SelectBestCandidate(RouteContext, IReadOnlyList(Of ActionDescriptor))
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  id: SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  parent: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  langs:
  - csharp
  - vb
  name: SelectBestActions(IReadOnlyList<ActionDescriptor>)
  nameWithType: ActionSelector.SelectBestActions(IReadOnlyList<ActionDescriptor>)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectBestActions
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ActionSelector.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nReturns the set of best matching actions.\n"
  example: []
  syntax:
    content: protected virtual IReadOnlyList<ActionDescriptor> SelectBestActions(IReadOnlyList<ActionDescriptor> actions)
    content.vb: Protected Overridable Function SelectBestActions(actions As IReadOnlyList(Of ActionDescriptor)) As IReadOnlyList(Of ActionDescriptor)
    parameters:
    - id: actions
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
      description: The set of actions that satisfy all constraints.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
      description: A list of the best matching actions.
  nameWithType.vb: ActionSelector.SelectBestActions(IReadOnlyList(Of ActionDescriptor))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor))
  name.vb: SelectBestActions(IReadOnlyList(Of ActionDescriptor))
references:
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
  commentId: T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
  parent: Microsoft.AspNetCore.Mvc.Infrastructure
  isExternal: false
  name: IActionSelector
  nameWithType: IActionSelector
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Infrastructure
  commentId: N:Microsoft.AspNetCore.Mvc.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Infrastructure
  nameWithType: Microsoft.AspNetCore.Mvc.Infrastructure
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ActionSelector
  isExternal: false
  name: ActionSelector
  nameWithType: ActionSelector
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionSelector
- uid: Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IActionSelectorDecisionTreeProvider
  nameWithType: IActionSelectorDecisionTreeProvider
  fullName: Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider
- uid: Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: ActionConstraintCache
  nameWithType: ActionConstraintCache
  fullName: Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  commentId: T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
  parent: Microsoft.AspNetCore.Mvc.ActionConstraints
  isExternal: false
  name: IActionConstraint
  nameWithType: IActionConstraint
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.AspNetCore.Mvc.ActionConstraints
  commentId: N:Microsoft.AspNetCore.Mvc.ActionConstraints
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ActionConstraints
  nameWithType: Microsoft.AspNetCore.Mvc.ActionConstraints
  fullName: Microsoft.AspNetCore.Mvc.ActionConstraints
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
  isExternal: true
  name: SelectCandidates(RouteContext)
  nameWithType: IActionSelector.SelectCandidates(RouteContext)
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
    name: SelectCandidates
    nameWithType: IActionSelector.SelectCandidates
    fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)
    name: SelectCandidates
    nameWithType: IActionSelector.SelectCandidates
    fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.RouteContext
  commentId: T:Microsoft.AspNetCore.Routing.RouteContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: RouteContext
  nameWithType: RouteContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ActionDescriptor>
  nameWithType: IReadOnlyList<ActionDescriptor>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>
  nameWithType.vb: IReadOnlyList(Of ActionDescriptor)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  name.vb: IReadOnlyList(Of ActionDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  commentId: M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
  parent: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector
  isExternal: true
  name: SelectBestCandidate(RouteContext, IReadOnlyList<ActionDescriptor>)
  nameWithType: IActionSelector.SelectBestCandidate(RouteContext, IReadOnlyList<ActionDescriptor>)
  fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor>)
  nameWithType.vb: IActionSelector.SelectBestCandidate(RouteContext, IReadOnlyList(Of ActionDescriptor))
  fullname.vb: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor))
  name.vb: SelectBestCandidate(RouteContext, IReadOnlyList(Of ActionDescriptor))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
    name: SelectBestCandidate
    nameWithType: IActionSelector.SelectBestCandidate
    fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})
    name: SelectBestCandidate
    nameWithType: IActionSelector.SelectBestCandidate
    fullName: Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
