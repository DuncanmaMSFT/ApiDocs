### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  id: HtmlHelperDisplayExtensions
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: HtmlHelperDisplayExtensions
  nameWithType: HtmlHelperDisplayExtensions
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlHelperDisplayExtensions
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nDisplay-related extensions for <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HtmlHelperDisplayExtensions
    content.vb: Public Module HtmlHelperDisplayExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: Display(IHtmlHelper, String)
  nameWithType: HtmlHelperDisplayExtensions.Display(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Display
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template. The template is found\nusing the <em>expression</em>'s <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em>'s value.\n</p>\n<p>\nExample <em>expression</em>s include <code>string.Empty</code> which identifies the current model and\n<code>\"prop\"</code> which identifies the current model's \"prop\" property.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent Display(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Display(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: "\nExpression name, relative to the current model. May identify a single property or an\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the properties to display.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: Display(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperDisplayExtensions.Display(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Display
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified\nadditional view data. The template is found using the <em>expression</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em>'s value.\n</p>\n<p>\nExample <em>expression</em>s include <code>string.Empty</code> which identifies the current model and\n<code>\"prop\"</code> which identifies the current model's \"prop\" property.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent Display(this IHtmlHelper htmlHelper, string expression, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Display(htmlHelper As IHtmlHelper, expression As String, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: "\nExpression name, relative to the current model. May identify a single property or an\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the properties to display.\n"
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: Display(IHtmlHelper, String, String)
  nameWithType: HtmlHelperDisplayExtensions.Display(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Display
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template. The template is found\nusing the <em>templateName</em> or the <em>expression</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em>'s value.\n</p>\n<p>\nExample <em>expression</em>s include <code>string.Empty</code> which identifies the current model and\n<code>\"prop\"</code> which identifies the current model's \"prop\" property.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent Display(this IHtmlHelper htmlHelper, string expression, string templateName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Display(htmlHelper As IHtmlHelper, expression As String, templateName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: "\nExpression name, relative to the current model. May identify a single property or an\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the properties to display.\n"
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  id: Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: Display(IHtmlHelper, String, String, Object)
  nameWithType: HtmlHelperDisplayExtensions.Display(IHtmlHelper, String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Display
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified\nadditional view data. The template is found using the <em>templateName</em> or the\n<em>expression</em>'s <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em>'s value.\n</p>\n<p>\nExample <em>expression</em>s include <code>string.Empty</code> which identifies the current model and\n<code>\"prop\"</code> which identifies the current model's \"prop\" property.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent Display(this IHtmlHelper htmlHelper, string expression, string templateName, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Display(htmlHelper As IHtmlHelper, expression As String, templateName As String, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: "\nExpression name, relative to the current model. May identify a single property or an\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the properties to display.\n"
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  id: Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: Display(IHtmlHelper, String, String, String)
  nameWithType: HtmlHelperDisplayExtensions.Display(IHtmlHelper, String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Display
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified HTML\nfield name. The template is found using the <em>templateName</em> or the\n<em>expression</em>'s<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em>'s value.\n</p>\n<p>\nExample <em>expression</em>s include <code>string.Empty</code> which identifies the current model and\n<code>\"prop\"</code> which identifies the current model's \"prop\" property.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent Display(this IHtmlHelper htmlHelper, string expression, string templateName, string htmlFieldName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Display(htmlHelper As IHtmlHelper, expression As String, templateName As String, htmlFieldName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: "\nExpression name, relative to the current model. May identify a single property or an\n<xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the properties to display.\n"
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: htmlFieldName
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> used to disambiguate the names of HTML elements that are created for\nproperties that have the same name.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  nameWithType: HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 246
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template. The template is found\nusing the <em>expression</em>'s <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em> result.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult))) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  nameWithType.vb: HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)))
  name.vb: DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  id: DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  nameWithType: HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 292
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified\nadditional view data. The template is found using the <em>expression</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em> result.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  nameWithType.vb: HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Object)
  name.vb: DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  id: DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  nameWithType: HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 335
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template. The template is found\nusing the <em>templateName</em> or the <em>expression</em>'s\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em> result.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string templateName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), templateName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  nameWithType.vb: HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String)
  name.vb: DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  id: DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, Object)
  nameWithType: HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 383
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified\nadditional view data. The template is found using the <em>templateName</em> or the\n<em>expression</em>'s <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em> result.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string templateName, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), templateName As String, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  nameWithType.vb: HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String, System.Object)
  name.vb: DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  id: DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, String)
  nameWithType: HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 431
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the <em>expression</em>, using a display template and specified HTML\nfield name. The template is found using the <em>templateName</em> or the\n<em>expression</em>'s <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\n<em>expression</em> result.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, string templateName, string htmlFieldName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), templateName As String, htmlFieldName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: htmlFieldName
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> used to disambiguate the names of HTML elements that are created for properties\nthat have the same name.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  nameWithType.vb: HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.String, System.String)
  name.vb: DisplayFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), String, String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 470
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template. The template is found using the\nmodel's <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper, Object)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 505
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template and specified additional view data. The\ntemplate is found using the model's <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper, String)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 536
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template. The template is found using the\n<em>templateName</em> or the model's <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper, string templateName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper, templateName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper, String, Object)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 573
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template and specified additional view data. The\ntemplate is found using the <em>templateName</em> or the model's\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper, string templateName, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper, templateName As String, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper, String, String)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 612
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template and specified HTML field name. The\ntemplate is found using the <em>templateName</em> or the model's\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper, string templateName, string htmlFieldName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper, templateName As String, htmlFieldName As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: htmlFieldName
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> used to disambiguate the names of HTML elements that are created for\nproperties that have the same name.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  id: DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions
  langs:
  - csharp
  - vb
  name: DisplayForModel(IHtmlHelper, String, String, Object)
  nameWithType: HtmlHelperDisplayExtensions.DisplayForModel(IHtmlHelper, String, String, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayForModel
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperDisplayExtensions.cs
    startLine: 656
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns HTML markup for the current model, using a display template, specified HTML field name, and\nadditional view data. The template is found using the <em>templateName</em> or the model's\n<xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nFor example the default <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> display template includes markup for each property in the\ncurrent model.\n</p>\n<p>\nCustom templates are found under a <code>DisplayTemplates</code> folder. The folder name is case-sensitive on\ncase-sensitive file systems.\n</p>\n"
  example: []
  syntax:
    content: public static IHtmlContent DisplayForModel(this IHtmlHelper htmlHelper, string templateName, string htmlFieldName, object additionalViewData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisplayForModel(htmlHelper As IHtmlHelper, templateName As String, htmlFieldName As String, additionalViewData As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: templateName
      type: System.String
      description: The name of the template used to create the HTML markup.
    - id: htmlFieldName
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> used to disambiguate the names of HTML elements that are created for\nproperties that have the same name.\n"
    - id: additionalViewData
      type: System.Object
      description: "\nAn anonymous <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>\nthat can contain additional view data that will be merged into the\n<xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary%601\" data-throw-if-not-resolved=\"false\"></xref> instance created for the template.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the created HTML.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: IHtmlHelper
  nameWithType: IHtmlHelper
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  isExternal: false
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
  commentId: T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
  isExternal: false
  name: ViewDataDictionary<TModel>
  nameWithType: ViewDataDictionary<TModel>
  fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TModel>
  nameWithType.vb: ViewDataDictionary(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(Of TModel)
  name.vb: ViewDataDictionary(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1
    name: ViewDataDictionary
    nameWithType: ViewDataDictionary
    fullName: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{`0}
  parent: Microsoft.AspNetCore.Mvc.Rendering
  definition: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, TResult>>
  nameWithType: Expression<Func<TModel, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, TResult>>
  nameWithType.vb: Expression(Of Func(Of TModel, TResult))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult))
  name.vb: Expression(Of Func(Of TModel, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
