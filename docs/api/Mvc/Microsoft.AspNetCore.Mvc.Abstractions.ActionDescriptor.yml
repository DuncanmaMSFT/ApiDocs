### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  id: ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  children:
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.#ctor
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Id
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  langs:
  - csharp
  - vb
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionDescriptor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  syntax:
    content: public class ActionDescriptor
    content.vb: Public Class ActionDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1
  - Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1({T})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.#ctor
  commentId: M:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: ActionDescriptor()
  nameWithType: ActionDescriptor.ActionDescriptor()
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionDescriptor()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  syntax:
    content: public ActionDescriptor()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Id
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Id
  id: Id
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ActionDescriptor.Id
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Id
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nGets an id which uniquely identifies the action.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  id: RouteValues
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: RouteValues
  nameWithType: ActionDescriptor.RouteValues
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RouteValues
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nGets or sets the collection of route values that must be provided by routing\nfor the action to be selected.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> RouteValues { get; set; }
    content.vb: Public Property RouteValues As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo
  id: AttributeRouteInfo
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: AttributeRouteInfo
  nameWithType: ActionDescriptor.AttributeRouteInfo
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: AttributeRouteInfo
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  syntax:
    content: public AttributeRouteInfo AttributeRouteInfo { get; set; }
    content.vb: Public Property AttributeRouteInfo As AttributeRouteInfo
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints
  id: ActionConstraints
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: ActionConstraints
  nameWithType: ActionDescriptor.ActionConstraints
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionConstraints
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nThe set of constraints for this action. Must all be satisfied for the action to be selected.\n"
  example: []
  syntax:
    content: public IList<IActionConstraintMetadata> ActionConstraints { get; set; }
    content.vb: Public Property ActionConstraints As IList(Of IActionConstraintMetadata)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters
  id: Parameters
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: ActionDescriptor.Parameters
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Parameters
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  syntax:
    content: public IList<ParameterDescriptor> Parameters { get; set; }
    content.vb: Public Property Parameters As IList(Of ParameterDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties
  id: BoundProperties
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: BoundProperties
  nameWithType: ActionDescriptor.BoundProperties
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BoundProperties
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nThe set of properties which are model bound.\n"
  example: []
  syntax:
    content: public IList<ParameterDescriptor> BoundProperties { get; set; }
    content.vb: Public Property BoundProperties As IList(Of ParameterDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors
  id: FilterDescriptors
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: FilterDescriptors
  nameWithType: ActionDescriptor.FilterDescriptors
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FilterDescriptors
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  syntax:
    content: public IList<FilterDescriptor> FilterDescriptors { get; set; }
    content.vb: Public Property FilterDescriptors As IList(Of FilterDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName
  id: DisplayName
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ActionDescriptor.DisplayName
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DisplayName
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nA friendly name for this action.\n"
  example: []
  syntax:
    content: public virtual string DisplayName { get; set; }
    content.vb: Public Overridable Property DisplayName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  commentId: P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  id: Properties
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ActionDescriptor.Properties
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Properties
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Abstractions/ActionDescriptor.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Abstractions
  summary: "\nStores arbitrary metadata properties associated with the <xref href=\"Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IDictionary<object, object> Properties { get; set; }
    content.vb: Public Property Properties As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Abstractions
  commentId: N:Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Abstractions
  nameWithType: Microsoft.AspNetCore.Mvc.Abstractions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1
  commentId: M:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
  definition: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  name: GetProperty<T>()
  nameWithType: ActionDescriptorExtensions.GetProperty<T>()
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty<T>()
  nameWithType.vb: ActionDescriptorExtensions.GetProperty(Of T)()
  fullname.vb: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1
    name: GetProperty<T>
    nameWithType: ActionDescriptorExtensions.GetProperty<T>
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: ActionDescriptorExtensions.GetProperty(Of T)
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1({T})
  commentId: M:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
  parent: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
  definition: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
  name: SetProperty<T>(T)
  nameWithType: ActionDescriptorExtensions.SetProperty<T>(T)
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty<T>(T)
  nameWithType.vb: ActionDescriptorExtensions.SetProperty(Of T)(T)
  fullname.vb: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty(Of T)(T)
  name.vb: SetProperty(Of T)(T)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(``0)
    name: SetProperty<T>
    nameWithType: ActionDescriptorExtensions.SetProperty<T>
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(``0)
    name: SetProperty(Of T)
    nameWithType: ActionDescriptorExtensions.SetProperty(Of T)
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  commentId: M:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  isExternal: false
  name: GetProperty<T>(ActionDescriptor)
  nameWithType: ActionDescriptorExtensions.GetProperty<T>(ActionDescriptor)
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty<T>(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  nameWithType.vb: ActionDescriptorExtensions.GetProperty(Of T)(ActionDescriptor)
  fullname.vb: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty(Of T)(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
  name.vb: GetProperty(Of T)(ActionDescriptor)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
    name: GetProperty<T>
    nameWithType: ActionDescriptorExtensions.GetProperty<T>
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)
    name: GetProperty(Of T)
    nameWithType: ActionDescriptorExtensions.GetProperty(Of T)
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptorExtensions
  nameWithType: ActionDescriptorExtensions
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
  commentId: M:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
  isExternal: false
  name: SetProperty<T>(ActionDescriptor, T)
  nameWithType: ActionDescriptorExtensions.SetProperty<T>(ActionDescriptor, T)
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty<T>(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, T)
  nameWithType.vb: ActionDescriptorExtensions.SetProperty(Of T)(ActionDescriptor, T)
  fullname.vb: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty(Of T)(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor, T)
  name.vb: SetProperty(Of T)(ActionDescriptor, T)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
    name: SetProperty<T>
    nameWithType: ActionDescriptorExtensions.SetProperty<T>
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty``1(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,``0)
    name: SetProperty(Of T)
    nameWithType: ActionDescriptorExtensions.SetProperty(Of T)
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
    name: ActionDescriptor
    nameWithType: ActionDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo
  commentId: T:Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo
  parent: Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: AttributeRouteInfo
  nameWithType: AttributeRouteInfo
  fullName: Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo
- uid: Microsoft.AspNetCore.Mvc.Routing
  commentId: N:Microsoft.AspNetCore.Mvc.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Routing
  nameWithType: Microsoft.AspNetCore.Mvc.Routing
  fullName: Microsoft.AspNetCore.Mvc.Routing
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IActionConstraintMetadata>
  nameWithType: IList<IActionConstraintMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata>
  nameWithType.vb: IList(Of IActionConstraintMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata)
  name.vb: IList(Of IActionConstraintMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata
    name: IActionConstraintMetadata
    nameWithType: IActionConstraintMetadata
    fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata
    name: IActionConstraintMetadata
    nameWithType: IActionConstraintMetadata
    fullName: Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ParameterDescriptor>
  nameWithType: IList<ParameterDescriptor>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor>
  nameWithType.vb: IList(Of ParameterDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor)
  name.vb: IList(Of ParameterDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor
    name: ParameterDescriptor
    nameWithType: ParameterDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor
    name: ParameterDescriptor
    nameWithType: ParameterDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FilterDescriptor>
  nameWithType: IList<FilterDescriptor>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor>
  nameWithType.vb: IList(Of FilterDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor)
  name.vb: IList(Of FilterDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
    name: FilterDescriptor
    nameWithType: FilterDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
    name: FilterDescriptor
    nameWithType: FilterDescriptor
    fullName: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.Abstractions
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
