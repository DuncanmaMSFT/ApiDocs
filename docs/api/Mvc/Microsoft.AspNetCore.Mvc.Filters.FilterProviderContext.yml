### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  id: FilterProviderContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem})
  - Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
  - Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
  langs:
  - csharp
  - vb
  name: FilterProviderContext
  nameWithType: FilterProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FilterProviderContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA context for filter providers i.e. <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterProvider\" data-throw-if-not-resolved=\"false\"></xref> implementations.\n"
  example: []
  syntax:
    content: public class FilterProviderContext
    content.vb: Public Class FilterProviderContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem})
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem})'
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  langs:
  - csharp
  - vb
  name: FilterProviderContext(ActionContext, IList<FilterItem>)
  nameWithType: FilterProviderContext.FilterProviderContext(ActionContext, IList<FilterItem>)
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.FilterProviderContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterItem>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public FilterProviderContext(ActionContext actionContext, IList<FilterItem> items)
    content.vb: Public Sub New(actionContext As ActionContext, items As IList(Of FilterItem))
    parameters:
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: items
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem}
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem\" data-throw-if-not-resolved=\"false\"></xref>s, initially created from <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s or a cache entry.\n"
  nameWithType.vb: FilterProviderContext.FilterProviderContext(ActionContext, IList(Of FilterItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.FilterProviderContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.FilterItem))
  name.vb: FilterProviderContext(ActionContext, IList(Of FilterItem))
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
  id: ActionContext
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  langs:
  - csharp
  - vb
  name: ActionContext
  nameWithType: FilterProviderContext.ActionContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionContext ActionContext { get; set; }
    content.vb: Public Property ActionContext As ActionContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ActionContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
  id: Results
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: FilterProviderContext.Results
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Results
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/FilterProviderContext.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem\" data-throw-if-not-resolved=\"false\"></xref>s, initially created from <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s or a\ncache entry. <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IFilterProvider\" data-throw-if-not-resolved=\"false\"></xref>s should set <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter\" data-throw-if-not-resolved=\"false\"></xref> on existing items or\nadd new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.FilterItem\" data-throw-if-not-resolved=\"false\"></xref>s to make executable filters available.\n"
  example: []
  syntax:
    content: public IList<FilterItem> Results { get; set; }
    content.vb: Public Property Results As IList(Of FilterItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterProvider
  nameWithType: IFilterProvider
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterProviderContext
  nameWithType: FilterProviderContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterItem
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterItem
  nameWithType: FilterItem
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterDescriptor
  nameWithType: FilterDescriptor
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.FilterItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FilterItem>
  nameWithType: IList<FilterItem>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterItem>
  nameWithType.vb: IList(Of FilterItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.FilterItem)
  name.vb: IList(Of FilterItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem
    name: FilterItem
    nameWithType: FilterItem
    fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem
    name: FilterItem
    nameWithType: FilterItem
    fullName: Microsoft.AspNetCore.Mvc.Filters.FilterItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter
