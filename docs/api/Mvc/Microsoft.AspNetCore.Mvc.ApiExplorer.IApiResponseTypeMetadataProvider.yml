### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  id: IApiResponseTypeMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  children:
  - Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  langs:
  - csharp
  - vb
  name: IApiResponseTypeMetadataProvider
  nameWithType: IApiResponseTypeMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApiExplorer/IApiResponseTypeMetadataProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IApiResponseTypeMetadataProvider
    path: src/Microsoft.AspNetCore.Mvc.Core/ApiExplorer/IApiResponseTypeMetadataProvider.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nProvides metadata information about the response format to an <code>IApiDescriptionProvider</code>.\n"
  remarks: "\nAn <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter\" data-throw-if-not-resolved=\"false\"></xref> should implement this interface to expose metadata information\nto an <code>IApiDescriptionProvider</code>.\n"
  example: []
  syntax:
    content: public interface IApiResponseTypeMetadataProvider
    content.vb: Public Interface IApiResponseTypeMetadataProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)
  id: GetSupportedContentTypes(System.String,System.Type)
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider
  langs:
  - csharp
  - vb
  name: GetSupportedContentTypes(String, Type)
  nameWithType: IApiResponseTypeMetadataProvider.GetSupportedContentTypes(String, Type)
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/ApiExplorer/IApiResponseTypeMetadataProvider.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetSupportedContentTypes
    path: src/Microsoft.AspNetCore.Mvc.Core/ApiExplorer/IApiResponseTypeMetadataProvider.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.ApiExplorer
  summary: "\nGets a filtered list of content types which are supported by the <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter\" data-throw-if-not-resolved=\"false\"></xref>\nfor the <em>objectType</em> and <em>contentType</em>.\n"
  example: []
  syntax:
    content: IReadOnlyList<string> GetSupportedContentTypes(string contentType, Type objectType)
    content.vb: Function GetSupportedContentTypes(contentType As String, objectType As Type) As IReadOnlyList(Of String)
    parameters:
    - id: contentType
      type: System.String
      description: "\nThe content type for which the supported content types are desired, or <code>null</code> if any content\ntype can be used.\n"
    - id: objectType
      type: System.Type
      description: "\nThe <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> for which the supported content types are desired.\n"
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
      description: Content types which are supported by the <xref href="Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" data-throw-if-not-resolved="false"></xref>.
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: IOutputFormatter
  nameWithType: IOutputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
