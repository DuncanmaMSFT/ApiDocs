### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  id: FeatureTagHelperTypeResolver
  parent: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  children:
  - Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)
  - Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  - Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  langs:
  - csharp
  - vb
  name: FeatureTagHelperTypeResolver
  nameWithType: FeatureTagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FeatureTagHelperTypeResolver
    path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  summary: "\nResolves tag helper types from the <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts\" data-throw-if-not-resolved=\"false\"></xref>\nof the application.\n"
  example: []
  syntax:
    content: 'public class FeatureTagHelperTypeResolver : TagHelperTypeResolver, ITagHelperTypeResolver'
    content.vb: >-
      Public Class FeatureTagHelperTypeResolver
          Inherits TagHelperTypeResolver
          Implements ITagHelperTypeResolver
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  implements:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)
  id: '#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)'
  parent: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: FeatureTagHelperTypeResolver(ApplicationPartManager)
  nameWithType: FeatureTagHelperTypeResolver.FeatureTagHelperTypeResolver(ApplicationPartManager)
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.FeatureTagHelperTypeResolver(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public FeatureTagHelperTypeResolver(ApplicationPartManager manager)
    content.vb: Public Sub New(manager As ApplicationPartManager)
    parameters:
    - id: manager
      type: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
      description: The <xref href="Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager" data-throw-if-not-resolved="false"></xref> of the application.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  id: GetExportedTypes(System.Reflection.AssemblyName)
  parent: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: GetExportedTypes(AssemblyName)
  nameWithType: FeatureTagHelperTypeResolver.GetExportedTypes(AssemblyName)
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetExportedTypes
    path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  example: []
  syntax:
    content: protected override IEnumerable<TypeInfo> GetExportedTypes(AssemblyName assemblyName)
    content.vb: Protected Overrides Function GetExportedTypes(assemblyName As AssemblyName) As IEnumerable(Of TypeInfo)
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  overridden: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  id: IsTagHelper(System.Reflection.TypeInfo)
  parent: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: IsTagHelper(TypeInfo)
  nameWithType: FeatureTagHelperTypeResolver.IsTagHelper(TypeInfo)
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IsTagHelper
    path: src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/FeatureTagHelperTypeResolver.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  example: []
  syntax:
    content: protected override sealed bool IsTagHelper(TypeInfo typeInfo)
    content.vb: Protected NotOverridable Overrides Function IsTagHelper(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
    return:
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
references:
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts
  commentId: P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: true
  name: TagHelperTypeResolver
  nameWithType: TagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: true
  name: ITagHelperTypeResolver
  nameWithType: ITagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  isExternal: true
  name: Resolve(String, SourceLocation, ErrorSink)
  nameWithType: TagHelperTypeResolver.Resolve(String, SourceLocation, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String, Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.ErrorSink)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
    name: Resolve
    nameWithType: TagHelperTypeResolver.Resolve
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
    name: Resolve
    nameWithType: TagHelperTypeResolver.Resolve
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
- uid: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
  isExternal: false
  name: FeatureTagHelperTypeResolver
  nameWithType: FeatureTagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
  parent: Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: ApplicationPartManager
  nameWithType: ApplicationPartManager
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager
- uid: Microsoft.AspNetCore.Mvc.ApplicationParts
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationParts
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationParts
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationParts
  fullName: Microsoft.AspNetCore.Mvc.ApplicationParts
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  isExternal: true
  name: GetExportedTypes(AssemblyName)
  nameWithType: TagHelperTypeResolver.GetExportedTypes(AssemblyName)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
    name: GetExportedTypes
    nameWithType: TagHelperTypeResolver.GetExportedTypes
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
    name: GetExportedTypes
    nameWithType: TagHelperTypeResolver.GetExportedTypes
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypeInfo>
  nameWithType: IEnumerable<TypeInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  nameWithType.vb: IEnumerable(Of TypeInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  name.vb: IEnumerable(Of TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  isExternal: true
  name: IsTagHelper(TypeInfo)
  nameWithType: TagHelperTypeResolver.IsTagHelper(TypeInfo)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
    name: IsTagHelper
    nameWithType: TagHelperTypeResolver.IsTagHelper
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
    name: IsTagHelper
    nameWithType: TagHelperTypeResolver.IsTagHelper
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
