### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  id: ResponseCacheFilter
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.#ctor(Microsoft.AspNetCore.Mvc.CacheProfile)
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Duration
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Location
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.NoStore
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.VaryByHeader
  langs:
  - csharp
  - vb
  name: ResponseCacheFilter
  nameWithType: ResponseCacheFilter
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResponseCacheFilter
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IActionFilter\" data-throw-if-not-resolved=\"false\"></xref> which sets the appropriate headers related to response caching.\n"
  example: []
  syntax:
    content: 'public class ResponseCacheFilter : IResponseCacheFilter, IActionFilter, IFilterMetadata'
    content.vb: >-
      Public Class ResponseCacheFilter
          Implements IResponseCacheFilter, IActionFilter, IFilterMetadata
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Mvc.Internal.IResponseCacheFilter
  - Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  - Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.#ctor(Microsoft.AspNetCore.Mvc.CacheProfile)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.#ctor(Microsoft.AspNetCore.Mvc.CacheProfile)
  id: '#ctor(Microsoft.AspNetCore.Mvc.CacheProfile)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: ResponseCacheFilter(CacheProfile)
  nameWithType: ResponseCacheFilter.ResponseCacheFilter(CacheProfile)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.ResponseCacheFilter(Microsoft.AspNetCore.Mvc.CacheProfile)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public ResponseCacheFilter(CacheProfile cacheProfile)
    content.vb: Public Sub New(cacheProfile As CacheProfile)
    parameters:
    - id: cacheProfile
      type: Microsoft.AspNetCore.Mvc.CacheProfile
      description: >-
        The profile which contains the settings for

        <xref href="Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Duration
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Duration
  id: Duration
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: ResponseCacheFilter.Duration
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Duration
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Duration
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets or sets the duration in seconds for which the response is cached.\nThis is a required parameter.\nThis sets \"max-age\" in \"Cache-control\" header.\n"
  example: []
  syntax:
    content: public int Duration { get; set; }
    content.vb: Public Property Duration As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Location
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Location
  id: Location
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ResponseCacheFilter.Location
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Location
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets or sets the location where the data from a particular URL must be cached.\n"
  example: []
  syntax:
    content: public ResponseCacheLocation Location { get; set; }
    content.vb: Public Property Location As ResponseCacheLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.NoStore
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.NoStore
  id: NoStore
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: NoStore
  nameWithType: ResponseCacheFilter.NoStore
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.NoStore
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: NoStore
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets or sets the value which determines whether the data should be stored or not.\nWhen set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, it sets \"Cache-control\" header to \"no-store\".\nIgnores the \"Location\" parameter for values other than \"None\".\nIgnores the \"duration\" parameter.\n"
  example: []
  syntax:
    content: public bool NoStore { get; set; }
    content.vb: Public Property NoStore As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.VaryByHeader
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.VaryByHeader
  id: VaryByHeader
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: VaryByHeader
  nameWithType: ResponseCacheFilter.VaryByHeader
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.VaryByHeader
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: VaryByHeader
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  summary: "\nGets or sets the value for the Vary response header.\n"
  example: []
  syntax:
    content: public string VaryByHeader { get; set; }
    content.vb: Public Property VaryByHeader As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  id: OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: ResponseCacheFilter.OnActionExecuting(ActionExecutingContext)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnActionExecuting
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public void OnActionExecuting(ActionExecutingContext context)
    content.vb: Public Sub OnActionExecuting(context As ActionExecutingContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  id: OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  parent: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  langs:
  - csharp
  - vb
  name: OnActionExecuted(ActionExecutedContext)
  nameWithType: ResponseCacheFilter.OnActionExecuted(ActionExecutedContext)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: OnActionExecuted
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ResponseCacheFilter.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  example: []
  syntax:
    content: public void OnActionExecuted(ActionExecutedContext context)
    content.vb: Public Sub OnActionExecuted(context As ActionExecutedContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  implements:
  - Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IActionFilter
  nameWithType: IActionFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Internal.IResponseCacheFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.IResponseCacheFilter
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: IResponseCacheFilter
  nameWithType: IResponseCacheFilter
  fullName: Microsoft.AspNetCore.Mvc.Internal.IResponseCacheFilter
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
  isExternal: false
  name: ResponseCacheFilter
  nameWithType: ResponseCacheFilter
  fullName: Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter
- uid: Microsoft.AspNetCore.Mvc.CacheProfile
  commentId: T:Microsoft.AspNetCore.Mvc.CacheProfile
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: CacheProfile
  nameWithType: CacheProfile
  fullName: Microsoft.AspNetCore.Mvc.CacheProfile
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  commentId: T:Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ResponseCacheLocation
  nameWithType: ResponseCacheLocation
  fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  isExternal: false
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: IActionFilter.OnActionExecuting(ActionExecutingContext)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: IActionFilter.OnActionExecuting
    fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: IActionFilter.OnActionExecuting
    fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ActionExecutingContext
  nameWithType: ActionExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  parent: Microsoft.AspNetCore.Mvc.Filters.IActionFilter
  isExternal: false
  name: OnActionExecuted(ActionExecutedContext)
  nameWithType: IActionFilter.OnActionExecuted(ActionExecutedContext)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
    name: OnActionExecuted
    nameWithType: IActionFilter.OnActionExecuted
    fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    name: ActionExecutedContext
    nameWithType: ActionExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)
    name: OnActionExecuted
    nameWithType: IActionFilter.OnActionExecuted
    fullName: Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
    name: ActionExecutedContext
    nameWithType: ActionExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ActionExecutedContext
  nameWithType: ActionExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
