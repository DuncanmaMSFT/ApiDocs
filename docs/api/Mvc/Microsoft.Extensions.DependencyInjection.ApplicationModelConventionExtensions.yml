### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions
  id: ApplicationModelConventionExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  - Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  langs:
  - csharp
  - vb
  name: ApplicationModelConventionExtensions
  nameWithType: ApplicationModelConventionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ApplicationModelConventionExtensions
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nContains the extension methods for <xref href=\"Microsoft.AspNetCore.Mvc.MvcOptions.Conventions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ApplicationModelConventionExtensions
    content.vb: Public Module ApplicationModelConventionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  commentId: M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  id: Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions
  langs:
  - csharp
  - vb
  name: Add(IList<IApplicationModelConvention>, IControllerModelConvention)
  nameWithType: ApplicationModelConventionExtensions.Add(IList<IApplicationModelConvention>, IControllerModelConvention)
  fullName: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention>, Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Add
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention\" data-throw-if-not-resolved=\"false\"></xref> to all the controllers in the application.\n"
  example: []
  syntax:
    content: public static void Add(this IList<IApplicationModelConvention> conventions, IControllerModelConvention controllerModelConvention)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Add(conventions As IList(Of IApplicationModelConvention), controllerModelConvention As IControllerModelConvention)
    parameters:
    - id: conventions
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
      description: >-
        The list of <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention" data-throw-if-not-resolved="false"></xref>

        in <xref href="Microsoft.AspNetCore.Mvc.MvcOptions" data-throw-if-not-resolved="false"></xref>.
    - id: controllerModelConvention
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention" data-throw-if-not-resolved="false"></xref> which needs to be

        added.
  nameWithType.vb: ApplicationModelConventionExtensions.Add(IList(Of IApplicationModelConvention), IControllerModelConvention)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention), Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)
  name.vb: Add(IList(Of IApplicationModelConvention), IControllerModelConvention)
- uid: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  commentId: M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  id: Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions
  langs:
  - csharp
  - vb
  name: Add(IList<IApplicationModelConvention>, IActionModelConvention)
  nameWithType: ApplicationModelConventionExtensions.Add(IList<IApplicationModelConvention>, IActionModelConvention)
  fullName: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention>, Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Add
    path: src/Microsoft.AspNetCore.Mvc.Core/DependencyInjection/ApplicationModelConventionExtensions.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention\" data-throw-if-not-resolved=\"false\"></xref> to all the actions in the application.\n"
  example: []
  syntax:
    content: public static void Add(this IList<IApplicationModelConvention> conventions, IActionModelConvention actionModelConvention)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Add(conventions As IList(Of IApplicationModelConvention), actionModelConvention As IActionModelConvention)
    parameters:
    - id: conventions
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
      description: >-
        The list of <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention" data-throw-if-not-resolved="false"></xref>

        in <xref href="Microsoft.AspNetCore.Mvc.MvcOptions" data-throw-if-not-resolved="false"></xref>.
    - id: actionModelConvention
      type: Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention" data-throw-if-not-resolved="false"></xref> which needs to be

        added.
  nameWithType.vb: ApplicationModelConventionExtensions.Add(IList(Of IApplicationModelConvention), IActionModelConvention)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention), Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)
  name.vb: Add(IList(Of IApplicationModelConvention), IActionModelConvention)
references:
- uid: Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
  commentId: P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IControllerModelConvention
  nameWithType: IControllerModelConvention
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  isExternal: false
  name: IApplicationModelConvention
  nameWithType: IApplicationModelConvention
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
- uid: Microsoft.AspNetCore.Mvc.MvcOptions
  commentId: T:Microsoft.AspNetCore.Mvc.MvcOptions
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: MvcOptions
  nameWithType: MvcOptions
  fullName: Microsoft.AspNetCore.Mvc.MvcOptions
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IApplicationModelConvention>
  nameWithType: IList<IApplicationModelConvention>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention>
  nameWithType.vb: IList(Of IApplicationModelConvention)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention)
  name.vb: IList(Of IApplicationModelConvention)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
    name: IApplicationModelConvention
    nameWithType: IApplicationModelConvention
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
    name: IApplicationModelConvention
    nameWithType: IApplicationModelConvention
    fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels
  commentId: N:Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApplicationModels
  nameWithType: Microsoft.AspNetCore.Mvc.ApplicationModels
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention
  commentId: T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention
  parent: Microsoft.AspNetCore.Mvc.ApplicationModels
  isExternal: false
  name: IActionModelConvention
  nameWithType: IActionModelConvention
  fullName: Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention
