### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  id: TextInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SupportedEncodings
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF16EncodingLittleEndian
  - Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF8EncodingWithoutBOM
  langs:
  - csharp
  - vb
  name: TextInputFormatter
  nameWithType: TextInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: TextInputFormatter
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReads an object from a request body with a text format.\n"
  example: []
  syntax:
    content: 'public abstract class TextInputFormatter : InputFormatter, IInputFormatter, IApiRequestFormatMetadataProvider'
    content.vb: >-
      Public MustInherit Class TextInputFormatter
          Inherits InputFormatter
          Implements IInputFormatter, IApiRequestFormatMetadataProvider
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  implements:
  - Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  - Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.SupportedMediaTypes
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF8EncodingWithoutBOM
  commentId: F:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF8EncodingWithoutBOM
  id: UTF8EncodingWithoutBOM
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: UTF8EncodingWithoutBOM
  nameWithType: TextInputFormatter.UTF8EncodingWithoutBOM
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF8EncodingWithoutBOM
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: UTF8EncodingWithoutBOM
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns UTF8 Encoding without BOM and throws on invalid bytes.\n"
  example: []
  syntax:
    content: protected static readonly Encoding UTF8EncodingWithoutBOM
    content.vb: Protected Shared ReadOnly UTF8EncodingWithoutBOM As Encoding
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF16EncodingLittleEndian
  commentId: F:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF16EncodingLittleEndian
  id: UTF16EncodingLittleEndian
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: UTF16EncodingLittleEndian
  nameWithType: TextInputFormatter.UTF16EncodingLittleEndian
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF16EncodingLittleEndian
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: UTF16EncodingLittleEndian
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns UTF16 Encoding which uses littleEndian byte order with BOM and throws on invalid bytes.\n"
  example: []
  syntax:
    content: protected static readonly Encoding UTF16EncodingLittleEndian
    content.vb: Protected Shared ReadOnly UTF16EncodingLittleEndian As Encoding
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SupportedEncodings
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SupportedEncodings
  id: SupportedEncodings
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: SupportedEncodings
  nameWithType: TextInputFormatter.SupportedEncodings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SupportedEncodings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SupportedEncodings
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the mutable collection of character encodings supported by\nthis <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter\" data-throw-if-not-resolved=\"false\"></xref>. The encodings are\nused when reading the data.\n"
  example: []
  syntax:
    content: public IList<Encoding> SupportedEncodings { get; }
    content.vb: Public ReadOnly Property SupportedEncodings As IList(Of Encoding)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Text.Encoding}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  id: ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: ReadRequestBodyAsync(InputFormatterContext)
  nameWithType: TextInputFormatter.ReadRequestBodyAsync(InputFormatterContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadRequestBodyAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  example: []
  syntax:
    content: public override Task<InputFormatterResult> ReadRequestBodyAsync(InputFormatterContext context)
    content.vb: Public Overrides Function ReadRequestBodyAsync(context As InputFormatterContext) As Task(Of InputFormatterResult)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
  overridden: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)
  id: ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: ReadRequestBodyAsync(InputFormatterContext, Encoding)
  nameWithType: TextInputFormatter.ReadRequestBodyAsync(InputFormatterContext, Encoding)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReadRequestBodyAsync
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReads an object from the request body.\n"
  example: []
  syntax:
    content: public abstract Task<InputFormatterResult> ReadRequestBodyAsync(InputFormatterContext context, Encoding encoding)
    content.vb: Public MustOverride Function ReadRequestBodyAsync(context As InputFormatterContext, encoding As Encoding) As Task(Of InputFormatterResult)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext" data-throw-if-not-resolved="false"></xref>.
    - id: encoding
      type: System.Text.Encoding
      description: The <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> used to read the request body.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that on completion deserializes the request body.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  id: SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  langs:
  - csharp
  - vb
  name: SelectCharacterEncoding(InputFormatterContext)
  nameWithType: TextInputFormatter.SelectCharacterEncoding(InputFormatterContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SelectCharacterEncoding
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/TextInputFormatter.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nReturns an <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> based on <em>context</em>'s\ncharacter set.\n"
  example: []
  syntax:
    content: protected Encoding SelectCharacterEncoding(InputFormatterContext context)
    content.vb: Protected Function SelectCharacterEncoding(context As InputFormatterContext) As Encoding
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Text.Encoding
      description: "\nAn <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> based on <em>context</em>'s\ncharacter set. <code>null</code> if no supported encoding was found.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: InputFormatter
  nameWithType: InputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
- uid: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: IInputFormatter
  nameWithType: IInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider
  commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider
  parent: Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: IApiRequestFormatMetadataProvider
  nameWithType: IApiRequestFormatMetadataProvider
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.SupportedMediaTypes
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.SupportedMediaTypes
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: false
  name: SupportedMediaTypes
  nameWithType: InputFormatter.SupportedMediaTypes
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.SupportedMediaTypes
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: true
  name: GetDefaultValueForType(Type)
  nameWithType: InputFormatter.GetDefaultValueForType(Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
    name: GetDefaultValueForType
    nameWithType: InputFormatter.GetDefaultValueForType
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)
    name: GetDefaultValueForType
    nameWithType: InputFormatter.GetDefaultValueForType
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: false
  name: CanRead(InputFormatterContext)
  nameWithType: InputFormatter.CanRead(InputFormatterContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: CanRead
    nameWithType: InputFormatter.CanRead
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: CanRead
    nameWithType: InputFormatter.CanRead
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: true
  name: CanReadType(Type)
  nameWithType: InputFormatter.CanReadType(Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
    name: CanReadType
    nameWithType: InputFormatter.CanReadType
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)
    name: CanReadType
    nameWithType: InputFormatter.CanReadType
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: false
  name: ReadAsync(InputFormatterContext)
  nameWithType: InputFormatter.ReadAsync(InputFormatterContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: ReadAsync
    nameWithType: InputFormatter.ReadAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: ReadAsync
    nameWithType: InputFormatter.ReadAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: true
  name: GetSupportedContentTypes(String, Type)
  nameWithType: InputFormatter.GetSupportedContentTypes(String, Type)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String, System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)
    name: GetSupportedContentTypes
    nameWithType: InputFormatter.GetSupportedContentTypes
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)
    name: GetSupportedContentTypes
    nameWithType: InputFormatter.GetSupportedContentTypes
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.ApiExplorer
  commentId: N:Microsoft.AspNetCore.Mvc.ApiExplorer
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ApiExplorer
  nameWithType: Microsoft.AspNetCore.Mvc.ApiExplorer
  fullName: Microsoft.AspNetCore.Mvc.ApiExplorer
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: TextInputFormatter
  nameWithType: TextInputFormatter
  fullName: Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter
- uid: System.Collections.Generic.IList{System.Text.Encoding}
  commentId: T:System.Collections.Generic.IList{System.Text.Encoding}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Encoding>
  nameWithType: IList<Encoding>
  fullName: System.Collections.Generic.IList<System.Text.Encoding>
  nameWithType.vb: IList(Of Encoding)
  fullname.vb: System.Collections.Generic.IList(Of System.Text.Encoding)
  name.vb: IList(Of Encoding)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter
  isExternal: false
  name: ReadRequestBodyAsync(InputFormatterContext)
  nameWithType: InputFormatter.ReadRequestBodyAsync(InputFormatterContext)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: ReadRequestBodyAsync
    nameWithType: InputFormatter.ReadRequestBodyAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)
    name: ReadRequestBodyAsync
    nameWithType: InputFormatter.ReadRequestBodyAsync
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
    name: InputFormatterContext
    nameWithType: InputFormatterContext
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: InputFormatterContext
  nameWithType: InputFormatterContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<InputFormatterResult>
  nameWithType: Task<InputFormatterResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult>
  nameWithType.vb: Task(Of InputFormatterResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult)
  name.vb: Task(Of InputFormatterResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
    name: InputFormatterResult
    nameWithType: InputFormatterResult
    fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
