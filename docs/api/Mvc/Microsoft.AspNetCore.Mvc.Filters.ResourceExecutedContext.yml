### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  id: ResourceExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  children:
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
  - Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
  langs:
  - csharp
  - vb
  name: ResourceExecutedContext
  nameWithType: ResourceExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ResourceExecutedContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nA context for resource filters, specifically <xref href=\"Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)\" data-throw-if-not-resolved=\"false\"></xref> calls.\n"
  example: []
  syntax:
    content: 'public class ResourceExecutedContext : FilterContext'
    content.vb: >-
      Public Class ResourceExecutedContext
          Inherits FilterContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Mvc.ActionContext
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext
  inheritedMembers:
  - Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  - Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  - Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  - Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  - Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})
  id: '#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata})'
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: ResourceExecutedContext(ActionContext, IList<IFilterMetadata>)
  nameWithType: ResourceExecutedContext.ResourceExecutedContext(ActionContext, IList<IFilterMetadata>)
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ResourceExecutedContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResourceExecutedContext(ActionContext actionContext, IList<IFilterMetadata> filters)
    content.vb: Public Sub New(actionContext As ActionContext, filters As IList(Of IFilterMetadata))
    parameters:
    - id: actionContext
      type: Microsoft.AspNetCore.Mvc.ActionContext
      description: The <xref href="Microsoft.AspNetCore.Mvc.ActionContext" data-throw-if-not-resolved="false"></xref>.
    - id: filters
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
      description: The list of <xref href="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" data-throw-if-not-resolved="false"></xref> instances.
  nameWithType.vb: ResourceExecutedContext.ResourceExecutedContext(ActionContext, IList(Of IFilterMetadata))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ResourceExecutedContext(Microsoft.AspNetCore.Mvc.ActionContext, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata))
  name.vb: ResourceExecutedContext(ActionContext, IList(Of IFilterMetadata))
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled
  id: Canceled
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: Canceled
  nameWithType: ResourceExecutedContext.Canceled
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Canceled
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets a value which indicates whether or not execution was canceled by a resource filter.\nIf true, then a resource filter short-circuted execution by setting\n<xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual bool Canceled { get; set; }
    content.vb: Public Overridable Property Canceled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
  id: Exception
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: ResourceExecutedContext.Exception
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Exception
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or set the current <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nSetting <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo\" data-throw-if-not-resolved=\"false\"></xref> to <code>null</code> will treat\nthe exception as handled, and it will not be rethrown by the runtime.\n</p>\n<p>\nSetting <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled\" data-throw-if-not-resolved=\"false\"></xref> to <code>true</code> will also mark the exception as handled.\n</p>\n"
  example: []
  syntax:
    content: public virtual Exception Exception { get; set; }
    content.vb: Public Overridable Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
  id: ExceptionDispatchInfo
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: ExceptionDispatchInfo
  nameWithType: ResourceExecutedContext.ExceptionDispatchInfo
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExceptionDispatchInfo
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or set the current <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nSetting <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo\" data-throw-if-not-resolved=\"false\"></xref> to <code>null</code> will treat\nthe exception as handled, and it will not be rethrown by the runtime.\n</p>\n<p>\nSetting <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled\" data-throw-if-not-resolved=\"false\"></xref> to <code>true</code> will also mark the exception as handled.\n</p>\n"
  example: []
  syntax:
    content: public virtual ExceptionDispatchInfo ExceptionDispatchInfo { get; set; }
    content.vb: Public Overridable Property ExceptionDispatchInfo As ExceptionDispatchInfo
    parameters: []
    return:
      type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
  id: ExceptionHandled
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: ExceptionHandled
  nameWithType: ResourceExecutedContext.ExceptionHandled
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExceptionHandled
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 102
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\n<p>\nGets or sets a value indicating whether or not the current <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref> has been handled.\n</p>\n<p>\nIf <code>false</code> the <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception\" data-throw-if-not-resolved=\"false\"></xref> will be rethrown by the runtime after resource filters\nhave executed.\n</p>\n"
  example: []
  syntax:
    content: public virtual bool ExceptionHandled { get; set; }
    content.vb: Public Overridable Property ExceptionHandled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
  id: Result
  parent: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ResourceExecutedContext.Result
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Result
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Filters/ResourceExecutedContext.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Filters
  summary: "\nGets or sets the result.\n"
  remarks: "\n<p>\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result\" data-throw-if-not-resolved=\"false\"></xref> may be provided by execution of the action itself or by another\nfilter.\n</p>\n<p>\nThe <xref href=\"Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result\" data-throw-if-not-resolved=\"false\"></xref> has already been written to the response before being made available\nto resource filters.\n</p>\n"
  example: []
  syntax:
    content: public virtual IActionResult Result { get; set; }
    content.vb: Public Overridable Property Result As IActionResult
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
  parent: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  isExternal: false
  name: OnResourceExecuted(ResourceExecutedContext)
  nameWithType: IResourceFilter.OnResourceExecuted(ResourceExecutedContext)
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
    name: OnResourceExecuted
    nameWithType: IResourceFilter.OnResourceExecuted
    fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    name: ResourceExecutedContext
    nameWithType: ResourceExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)
    name: OnResourceExecuted
    nameWithType: IResourceFilter.OnResourceExecuted
    fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
    name: ResourceExecutedContext
    nameWithType: ResourceExecutedContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters
  commentId: N:Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Filters
  nameWithType: Microsoft.AspNetCore.Mvc.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Mvc.ActionContext
  commentId: T:Microsoft.AspNetCore.Mvc.ActionContext
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: ActionContext
  nameWithType: ActionContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.FilterContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: FilterContext
  nameWithType: FilterContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext
- uid: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
  parent: Microsoft.AspNetCore.Mvc.Filters.FilterContext
  isExternal: false
  name: Filters
  nameWithType: FilterContext.Filters
  fullName: Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ActionDescriptor
  nameWithType: ActionContext.ActionDescriptor
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor
- uid: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: HttpContext
  nameWithType: ActionContext.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: ModelState
  nameWithType: ActionContext.ModelState
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.ModelState
- uid: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  commentId: P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData
  parent: Microsoft.AspNetCore.Mvc.ActionContext
  isExternal: false
  name: RouteData
  nameWithType: ActionContext.RouteData
  fullName: Microsoft.AspNetCore.Mvc.ActionContext.RouteData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IResourceFilter
  nameWithType: IResourceFilter
  fullName: Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: false
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: ResourceExecutedContext
  nameWithType: ResourceExecutedContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  parent: Microsoft.AspNetCore.Mvc.Filters
  isExternal: false
  name: IFilterMetadata
  nameWithType: IFilterMetadata
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFilterMetadata>
  nameWithType: IList<IFilterMetadata>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata>
  nameWithType.vb: IList(Of IFilterMetadata)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)
  name.vb: IList(Of IFilterMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo
  parent: System.Runtime.ExceptionServices
  isExternal: true
  name: ExceptionDispatchInfo
  nameWithType: ExceptionDispatchInfo
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo
- uid: System.Runtime.ExceptionServices
  commentId: N:System.Runtime.ExceptionServices
  isExternal: false
  name: System.Runtime.ExceptionServices
  nameWithType: System.Runtime.ExceptionServices
  fullName: System.Runtime.ExceptionServices
- uid: Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
  commentId: P:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: false
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
