### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  id: WebApiCompatShimRouteBuilderExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  - Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  - Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  - Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: WebApiCompatShimRouteBuilderExtensions
  nameWithType: WebApiCompatShimRouteBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: WebApiCompatShimRouteBuilderExtensions
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static class WebApiCompatShimRouteBuilderExtensions
    content.vb: Public Module WebApiCompatShimRouteBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  id: MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapWebApiRoute(IRouteBuilder, String, String)
  nameWithType: WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(IRouteBuilder, String, String)
  fullName: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MapWebApiRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IRouteBuilder MapWebApiRoute(this IRouteBuilder routeCollectionBuilder, string name, string template)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapWebApiRoute(routeCollectionBuilder As IRouteBuilder, name As String, template As String) As IRouteBuilder
    parameters:
    - id: routeCollectionBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: name
      type: System.String
    - id: template
      type: System.String
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  id: MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapWebApiRoute(IRouteBuilder, String, String, Object)
  nameWithType: WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(IRouteBuilder, String, String, Object)
  fullName: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MapWebApiRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IRouteBuilder MapWebApiRoute(this IRouteBuilder routeCollectionBuilder, string name, string template, object defaults)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapWebApiRoute(routeCollectionBuilder As IRouteBuilder, name As String, template As String, defaults As Object) As IRouteBuilder
    parameters:
    - id: routeCollectionBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: name
      type: System.String
    - id: template
      type: System.String
    - id: defaults
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  id: MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapWebApiRoute(IRouteBuilder, String, String, Object, Object)
  nameWithType: WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(IRouteBuilder, String, String, Object, Object)
  fullName: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MapWebApiRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IRouteBuilder MapWebApiRoute(this IRouteBuilder routeCollectionBuilder, string name, string template, object defaults, object constraints)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapWebApiRoute(routeCollectionBuilder As IRouteBuilder, name As String, template As String, defaults As Object, constraints As Object) As IRouteBuilder
    parameters:
    - id: routeCollectionBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: name
      type: System.String
    - id: template
      type: System.String
    - id: defaults
      type: System.Object
    - id: constraints
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  commentId: M:Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  id: MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions
  langs:
  - csharp
  - vb
  name: MapWebApiRoute(IRouteBuilder, String, String, Object, Object, Object)
  nameWithType: WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(IRouteBuilder, String, String, Object, Object, Object)
  fullName: Microsoft.AspNetCore.Builder.WebApiCompatShimRouteBuilderExtensions.MapWebApiRoute(Microsoft.AspNetCore.Routing.IRouteBuilder, System.String, System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: MapWebApiRoute
    path: src/Microsoft.AspNetCore.Mvc.WebApiCompatShim/Routing/WebApiCompatShimRouteBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Mvc.WebApiCompatShim
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IRouteBuilder MapWebApiRoute(this IRouteBuilder routeCollectionBuilder, string name, string template, object defaults, object constraints, object dataTokens)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapWebApiRoute(routeCollectionBuilder As IRouteBuilder, name As String, template As String, defaults As Object, constraints As Object, dataTokens As Object) As IRouteBuilder
    parameters:
    - id: routeCollectionBuilder
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
    - id: name
      type: System.String
    - id: template
      type: System.String
    - id: defaults
      type: System.Object
    - id: constraints
      type: System.Object
    - id: dataTokens
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Routing.IRouteBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.IRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.IRouteBuilder
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: IRouteBuilder
  nameWithType: IRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.IRouteBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
