### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  id: ControllerActionInvokerCache.ControllerActionInvokerState
  parent: Microsoft.AspNetCore.Mvc.Internal
  children:
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.#ctor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[],Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor
  - Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters
  langs:
  - csharp
  - vb
  name: ControllerActionInvokerCache.ControllerActionInvokerState
  nameWithType: ControllerActionInvokerCache.ControllerActionInvokerState
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ControllerActionInvokerState
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
    startLine: 181
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public struct ControllerActionInvokerState
    content.vb: Public Structure ControllerActionInvokerState
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.#ctor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[],Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)
  commentId: M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.#ctor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[],Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)
  id: '#ctor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[],Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)'
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  langs:
  - csharp
  - vb
  name: ControllerActionInvokerState(IFilterMetadata[], ObjectMethodExecutor)
  nameWithType: ControllerActionInvokerCache.ControllerActionInvokerState.ControllerActionInvokerState(IFilterMetadata[], ObjectMethodExecutor)
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ControllerActionInvokerState(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[], Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
    startLine: 183
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public ControllerActionInvokerState(IFilterMetadata[] filters, ObjectMethodExecutor actionMethodExecutor)
    content.vb: Public Sub New(filters As IFilterMetadata(), actionMethodExecutor As ObjectMethodExecutor)
    parameters:
    - id: filters
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]
    - id: actionMethodExecutor
      type: Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor
  nameWithType.vb: ControllerActionInvokerCache.ControllerActionInvokerState.ControllerActionInvokerState(IFilterMetadata(), ObjectMethodExecutor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ControllerActionInvokerState(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata(), Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)
  name.vb: ControllerActionInvokerState(IFilterMetadata(), ObjectMethodExecutor)
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters
  id: Filters
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  langs:
  - csharp
  - vb
  name: Filters
  nameWithType: ControllerActionInvokerCache.ControllerActionInvokerState.Filters
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Filters
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
    startLine: 191
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public IFilterMetadata[] Filters { get; }
    content.vb: Public ReadOnly Property Filters As IFilterMetadata()
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor
  commentId: P:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor
  id: ActionMethodExecutor
  parent: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState
  langs:
  - csharp
  - vb
  name: ActionMethodExecutor
  nameWithType: ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor
  fullName: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ActionMethodExecutor
    path: src/Microsoft.AspNetCore.Mvc.Core/Internal/ControllerActionInvokerCache.cs
    startLine: 193
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Internal
  syntax:
    content: public ObjectMethodExecutor ActionMethodExecutor { get; set; }
    content.vb: Public Property ActionMethodExecutor As ObjectMethodExecutor
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.Internal
  fullName: Microsoft.AspNetCore.Mvc.Internal
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]
  name: IFilterMetadata[]
  nameWithType: IFilterMetadata[]
  fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]
  nameWithType.vb: IFilterMetadata()
  fullname.vb: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata()
  name.vb: IFilterMetadata()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
    name: IFilterMetadata
    nameWithType: IFilterMetadata
    fullName: Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor
  commentId: T:Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor
  parent: Microsoft.AspNetCore.Mvc.Internal
  isExternal: false
  name: ObjectMethodExecutor
  nameWithType: ObjectMethodExecutor
  fullName: Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor
