### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  id: IViewLocationExpander
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  langs:
  - csharp
  - vb
  name: IViewLocationExpander
  nameWithType: IViewLocationExpander
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: IViewLocationExpander
    path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nSpecifies the contracts for a view location expander that is used by <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> instances to\ndetermine search paths for a view.\n"
  remarks: "\nIndividual <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander\" data-throw-if-not-resolved=\"false\"></xref>s are invoked in two steps:\n(1) <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)\" data-throw-if-not-resolved=\"false\"></xref> is invoked and each expander\nadds values that it would later consume as part of\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext%2cSystem.Collections.Generic.IEnumerable%7bSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\nThe populated values are used to determine a cache key - if all values are identical to the last time\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)\" data-throw-if-not-resolved=\"false\"></xref> was invoked, the cached result\nis used as the view location.\n(2) If no result was found in the cache or if a view was not found at the cached location,\n<xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext%2cSystem.Collections.Generic.IEnumerable%7bSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref> is invoked to determine\nall potential paths for a view.\n"
  example: []
  syntax:
    content: public interface IViewLocationExpander
    content.vb: Public Interface IViewLocationExpander
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  id: PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  parent: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  langs:
  - csharp
  - vb
  name: PopulateValues(ViewLocationExpanderContext)
  nameWithType: IViewLocationExpander.PopulateValues(ViewLocationExpanderContext)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: PopulateValues
    path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInvoked by a <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> to determine the values that would be consumed by this instance\nof <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander\" data-throw-if-not-resolved=\"false\"></xref>. The calculated values are used to determine if the view location\nhas changed since the last time it was located.\n"
  example: []
  syntax:
    content: void PopulateValues(ViewLocationExpanderContext context)
    content.vb: Sub PopulateValues(context As ViewLocationExpanderContext)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext" data-throw-if-not-resolved="false"></xref> for the current view location

        expansion operation.
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  id: ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  langs:
  - csharp
  - vb
  name: ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<String>)
  nameWithType: IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ExpandViewLocations
    path: src/Microsoft.AspNetCore.Mvc.Razor/IViewLocationExpander.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInvoked by a <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine\" data-throw-if-not-resolved=\"false\"></xref> to determine potential locations for a view.\n"
  example: []
  syntax:
    content: IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations)
    content.vb: Function ExpandViewLocations(context As ViewLocationExpanderContext, viewLocations As IEnumerable(Of String)) As IEnumerable(Of String)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
      description: >-
        The <xref href="Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext" data-throw-if-not-resolved="false"></xref> for the current view location

        expansion operation.
    - id: viewLocations
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The sequence of view locations to expand.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A list of expanded view locations.
  nameWithType.vb: IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ExpandViewLocations(ViewLocationExpanderContext, IEnumerable(Of String))
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
  isExternal: false
  name: RazorViewEngine
  nameWithType: RazorViewEngine
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IViewLocationExpander
  nameWithType: IViewLocationExpander
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  parent: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  isExternal: false
  name: PopulateValues(ViewLocationExpanderContext)
  nameWithType: IViewLocationExpander.PopulateValues(ViewLocationExpanderContext)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
    name: PopulateValues
    nameWithType: IViewLocationExpander.PopulateValues
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
    name: ViewLocationExpanderContext
    nameWithType: ViewLocationExpanderContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)
    name: PopulateValues
    nameWithType: IViewLocationExpander.PopulateValues
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.PopulateValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
    name: ViewLocationExpanderContext
    nameWithType: ViewLocationExpanderContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander
  isExternal: true
  name: ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<String>)
  nameWithType: IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ExpandViewLocations(ViewLocationExpanderContext, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
    name: ExpandViewLocations
    nameWithType: IViewLocationExpander.ExpandViewLocations
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
    name: ViewLocationExpanderContext
    nameWithType: ViewLocationExpanderContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})
    name: ExpandViewLocations
    nameWithType: IViewLocationExpander.ExpandViewLocations
    fullName: Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander.ExpandViewLocations
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
    name: ViewLocationExpanderContext
    nameWithType: ViewLocationExpanderContext
    fullName: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: ViewLocationExpanderContext
  nameWithType: ViewLocationExpanderContext
  fullName: Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
