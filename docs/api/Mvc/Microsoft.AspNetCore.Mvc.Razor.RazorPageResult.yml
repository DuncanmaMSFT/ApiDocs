### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  id: RazorPageResult
  parent: Microsoft.AspNetCore.Mvc.Razor
  children:
  - Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.IRazorPage)
  - Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Name
  - Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
  - Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.SearchedLocations
  langs:
  - csharp
  - vb
  name: RazorPageResult
  nameWithType: RazorPageResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RazorPageResult
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nResult of locating a <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IRazorPage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct RazorPageResult
    content.vb: Public Structure RazorPageResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.IRazorPage)
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.IRazorPage)
  id: '#ctor(System.String,Microsoft.AspNetCore.Mvc.Razor.IRazorPage)'
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  langs:
  - csharp
  - vb
  name: RazorPageResult(String, IRazorPage)
  nameWithType: RazorPageResult.RazorPageResult(String, IRazorPage)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.RazorPageResult(System.String, Microsoft.AspNetCore.Mvc.Razor.IRazorPage)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorPageResult\" data-throw-if-not-resolved=\"false\"></xref> for a successful discovery.\n"
  example: []
  syntax:
    content: public RazorPageResult(string name, IRazorPage page)
    content.vb: Public Sub New(name As String, page As IRazorPage)
    parameters:
    - id: name
      type: System.String
      description: The name of the page that was found.
    - id: page
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
      description: The located <xref href="Microsoft.AspNetCore.Mvc.Razor.IRazorPage" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  langs:
  - csharp
  - vb
  name: RazorPageResult(String, IEnumerable<String>)
  nameWithType: RazorPageResult.RazorPageResult(String, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.RazorPageResult(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorPageResult\" data-throw-if-not-resolved=\"false\"></xref> for an unsuccessful discovery.\n"
  example: []
  syntax:
    content: public RazorPageResult(string name, IEnumerable<string> searchedLocations)
    content.vb: Public Sub New(name As String, searchedLocations As IEnumerable(Of String))
    parameters:
    - id: name
      type: System.String
      description: The name of the page that was not found.
    - id: searchedLocations
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The locations that were searched.
  nameWithType.vb: RazorPageResult.RazorPageResult(String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.RazorPageResult(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RazorPageResult(String, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Name
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Name
  id: Name
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RazorPageResult.Name
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Name
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the name or the path of the page being located.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
  id: Page
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  langs:
  - csharp
  - vb
  name: Page
  nameWithType: RazorPageResult.Page
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Page
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.Razor.IRazorPage\" data-throw-if-not-resolved=\"false\"></xref> if found.\n"
  remarks: This property is <code>null</code> if the page was not found.
  example: []
  syntax:
    content: public IRazorPage Page { get; }
    content.vb: Public ReadOnly Property Page As IRazorPage
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.SearchedLocations
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.SearchedLocations
  id: SearchedLocations
  parent: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  langs:
  - csharp
  - vb
  name: SearchedLocations
  nameWithType: RazorPageResult.SearchedLocations
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.SearchedLocations
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SearchedLocations
    path: src/Microsoft.AspNetCore.Mvc.Razor/RazorPageResult.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.Razor
  namespace: Microsoft.AspNetCore.Mvc.Razor
  summary: "\nGets the locations that were searched when <xref href=\"Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page\" data-throw-if-not-resolved=\"false\"></xref> could not be found.\n"
  remarks: This property is <code>null</code> if the page was found.
  example: []
  syntax:
    content: public IEnumerable<string> SearchedLocations { get; }
    content.vb: Public ReadOnly Property SearchedLocations As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.IRazorPage
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: IRazorPage
  nameWithType: IRazorPage
  fullName: Microsoft.AspNetCore.Mvc.Razor.IRazorPage
- uid: Microsoft.AspNetCore.Mvc.Razor
  commentId: N:Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Razor
  nameWithType: Microsoft.AspNetCore.Mvc.Razor
  fullName: Microsoft.AspNetCore.Mvc.Razor
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  commentId: T:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
  parent: Microsoft.AspNetCore.Mvc.Razor
  isExternal: false
  name: RazorPageResult
  nameWithType: RazorPageResult
  fullName: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
  commentId: P:Microsoft.AspNetCore.Mvc.Razor.RazorPageResult.Page
