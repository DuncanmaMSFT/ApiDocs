### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  id: GlobbingUrlBuilder
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  children:
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.#ctor(Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.Http.PathString)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.BuildUrlList(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.Cache
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.FileProvider
  - Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.RequestPathBase
  langs:
  - csharp
  - vb
  name: GlobbingUrlBuilder
  nameWithType: GlobbingUrlBuilder
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GlobbingUrlBuilder
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nUtility methods for <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" data-throw-if-not-resolved=\"false\"></xref>'s that support\nattributes containing file globbing patterns.\n"
  example: []
  syntax:
    content: public class GlobbingUrlBuilder
    content.vb: Public Class GlobbingUrlBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.#ctor(Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.Http.PathString)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.#ctor(Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.Http.PathString)
  id: '#ctor(Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.Http.PathString)'
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  langs:
  - csharp
  - vb
  name: GlobbingUrlBuilder(IFileProvider, IMemoryCache, PathString)
  nameWithType: GlobbingUrlBuilder.GlobbingUrlBuilder(IFileProvider, IMemoryCache, PathString)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.GlobbingUrlBuilder(Microsoft.Extensions.FileProviders.IFileProvider, Microsoft.Extensions.Caching.Memory.IMemoryCache, Microsoft.AspNetCore.Http.PathString)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GlobbingUrlBuilder(IFileProvider fileProvider, IMemoryCache cache, PathString requestPathBase)
    content.vb: Public Sub New(fileProvider As IFileProvider, cache As IMemoryCache, requestPathBase As PathString)
    parameters:
    - id: fileProvider
      type: Microsoft.Extensions.FileProviders.IFileProvider
      description: The file provider.
    - id: cache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
      description: The cache.
    - id: requestPathBase
      type: Microsoft.AspNetCore.Http.PathString
      description: The request path base.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.Cache
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.Cache
  id: Cache
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  langs:
  - csharp
  - vb
  name: Cache
  nameWithType: GlobbingUrlBuilder.Cache
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.Cache
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Cache
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nThe <xref href=\"Microsoft.Extensions.Caching.Memory.IMemoryCache\" data-throw-if-not-resolved=\"false\"></xref> to cache globbing results in.\n"
  example: []
  syntax:
    content: public IMemoryCache Cache { get; }
    content.vb: Public ReadOnly Property Cache As IMemoryCache
    parameters: []
    return:
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.FileProvider
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.FileProvider
  id: FileProvider
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  langs:
  - csharp
  - vb
  name: FileProvider
  nameWithType: GlobbingUrlBuilder.FileProvider
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.FileProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FileProvider
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nThe <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> used to watch for changes to file globbing results.\n"
  example: []
  syntax:
    content: public IFileProvider FileProvider { get; }
    content.vb: Public ReadOnly Property FileProvider As IFileProvider
    parameters: []
    return:
      type: Microsoft.Extensions.FileProviders.IFileProvider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.RequestPathBase
  commentId: P:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.RequestPathBase
  id: RequestPathBase
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  langs:
  - csharp
  - vb
  name: RequestPathBase
  nameWithType: GlobbingUrlBuilder.RequestPathBase
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.RequestPathBase
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: RequestPathBase
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nThe base path of the current request (i.e. <xref href=\"Microsoft.AspNetCore.Http.HttpRequest.PathBase\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public PathString RequestPathBase { get; }
    content.vb: Public ReadOnly Property RequestPathBase As PathString
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.PathString
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.BuildUrlList(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.BuildUrlList(System.String,System.String,System.String)
  id: BuildUrlList(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  langs:
  - csharp
  - vb
  name: BuildUrlList(String, String, String)
  nameWithType: GlobbingUrlBuilder.BuildUrlList(String, String, String)
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder.BuildUrlList(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: BuildUrlList
    path: src/Microsoft.AspNetCore.Mvc.TagHelpers/Internal/GlobbingUrlBuilder.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Mvc.TagHelpers
  namespace: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  summary: "\nBuilds a list of URLs.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<string> BuildUrlList(string staticUrl, string includePattern, string excludePattern)
    content.vb: Public Overridable Function BuildUrlList(staticUrl As String, includePattern As String, excludePattern As String) As IReadOnlyList(Of String)
    parameters:
    - id: staticUrl
      type: System.String
      description: The statically declared URL. This will always be added to the result.
    - id: includePattern
      type: System.String
      description: The file globbing include pattern.
    - id: excludePattern
      type: System.String
      description: The file globbing exclude pattern.
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
      description: The list of URLs
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: true
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  commentId: N:Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  nameWithType: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  commentId: T:Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
  parent: Microsoft.AspNetCore.Mvc.TagHelpers.Internal
  isExternal: false
  name: GlobbingUrlBuilder
  nameWithType: GlobbingUrlBuilder
  fullName: Microsoft.AspNetCore.Mvc.TagHelpers.Internal.GlobbingUrlBuilder
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HttpRequest.PathBase
  commentId: P:Microsoft.AspNetCore.Http.HttpRequest.PathBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
