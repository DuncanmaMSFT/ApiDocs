### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  id: FormatterMappings
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)
  - Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)
  - Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  - Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,System.String)
  langs:
  - csharp
  - vb
  name: FormatterMappings
  nameWithType: FormatterMappings
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: FormatterMappings
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nUsed to specify mapping between the URL Format and corresponding media type.\n"
  example: []
  syntax:
    content: public class FormatterMappings
    content.vb: Public Class FormatterMappings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,System.String)
  id: SetMediaTypeMappingForFormat(System.String,System.String)
  parent: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  langs:
  - csharp
  - vb
  name: SetMediaTypeMappingForFormat(String, String)
  nameWithType: FormatterMappings.SetMediaTypeMappingForFormat(String, String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SetMediaTypeMappingForFormat
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nSets mapping for the format to specified media type. \nIf the format already exists, the media type will be overwritten with the new value.\n"
  example: []
  syntax:
    content: public void SetMediaTypeMappingForFormat(string format, string contentType)
    content.vb: Public Sub SetMediaTypeMappingForFormat(format As String, contentType As String)
    parameters:
    - id: format
      type: System.String
      description: The format value.
    - id: contentType
      type: System.String
      description: The media type for the format value.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  id: SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  parent: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  langs:
  - csharp
  - vb
  name: SetMediaTypeMappingForFormat(String, MediaTypeHeaderValue)
  nameWithType: FormatterMappings.SetMediaTypeMappingForFormat(String, MediaTypeHeaderValue)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: SetMediaTypeMappingForFormat
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nSets mapping for the format to specified media type. \nIf the format already exists, the media type will be overwritten with the new value.\n"
  example: []
  syntax:
    content: public void SetMediaTypeMappingForFormat(string format, MediaTypeHeaderValue contentType)
    content.vb: Public Sub SetMediaTypeMappingForFormat(format As String, contentType As MediaTypeHeaderValue)
    parameters:
    - id: format
      type: System.String
      description: The format value.
    - id: contentType
      type: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
      description: The media type for the format value.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)
  id: GetMediaTypeMappingForFormat(System.String)
  parent: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  langs:
  - csharp
  - vb
  name: GetMediaTypeMappingForFormat(String)
  nameWithType: FormatterMappings.GetMediaTypeMappingForFormat(String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: GetMediaTypeMappingForFormat
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the media type for the specified format.\n"
  example: []
  syntax:
    content: public string GetMediaTypeMappingForFormat(string format)
    content.vb: Public Function GetMediaTypeMappingForFormat(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: The format value.
    return:
      type: System.String
      description: The media type for input format.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)
  id: ClearMediaTypeMappingForFormat(System.String)
  parent: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings
  langs:
  - csharp
  - vb
  name: ClearMediaTypeMappingForFormat(String)
  nameWithType: FormatterMappings.ClearMediaTypeMappingForFormat(String)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ClearMediaTypeMappingForFormat
    path: src/Microsoft.AspNetCore.Mvc.Core/Formatters/FormatterMappings.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Mvc.Core
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nClears the media type mapping for the format.\n"
  example: []
  syntax:
    content: public bool ClearMediaTypeMappingForFormat(string format)
    content.vb: Public Function ClearMediaTypeMappingForFormat(format As String) As Boolean
    parameters:
    - id: format
      type: System.String
      description: The format value.
    return:
      type: System.Boolean
      description: <code>true</code> if the format is successfully found and cleared; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: true
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
