### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  id: HtmlHelperSelectExtensions
  parent: Microsoft.AspNetCore.Mvc.Rendering
  children:
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  - Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  langs:
  - csharp
  - vb
  name: HtmlHelperSelectExtensions
  nameWithType: HtmlHelperSelectExtensions
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HtmlHelperSelectExtensions
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nSelect-related extensions for <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class HtmlHelperSelectExtensions
    content.vb: Public Module HtmlHelperSelectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownList(IHtmlHelper, String)
  nameWithType: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownList
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownList(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownList(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  id: DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownList(IHtmlHelper, String, String)
  nameWithType: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownList
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\noption label.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownList(this IHtmlHelper htmlHelper, string expression, string optionLabel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownList(htmlHelper As IHtmlHelper, expression As String, optionLabel As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: optionLabel
      type: System.String
      description: "\nThe text for a default empty item. Does not include such an item if argument is <code>null</code>.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  id: DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>)
  nameWithType: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownList
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownList(this IHtmlHelper htmlHelper, string expression, IEnumerable<SelectListItem> selectList)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownList(htmlHelper As IHtmlHelper, expression As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem))
  name.vb: DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  id: DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>, Object)
  nameWithType: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownList
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items and HTML attributes.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownList(this IHtmlHelper htmlHelper, string expression, IEnumerable<SelectListItem> selectList, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownList(htmlHelper As IHtmlHelper, expression As String, selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML attributes.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem), System.Object)
  name.vb: DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem), Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  id: DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>, String)
  nameWithType: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable<SelectListItem>, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownList
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items and option label.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownList(this IHtmlHelper htmlHelper, string expression, IEnumerable<SelectListItem> selectList, string optionLabel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownList(htmlHelper As IHtmlHelper, expression As String, selectList As IEnumerable(Of SelectListItem), optionLabel As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    - id: optionLabel
      type: System.String
      description: "\nThe text for a default empty item. Does not include such an item if argument is <code>null</code>.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem), System.String)
  name.vb: DropDownList(IHtmlHelper, String, IEnumerable(Of SelectListItem), String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  id: DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>)
  nameWithType: HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownListFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 182
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;select&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownListFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownListFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), selectList As IEnumerable(Of SelectListItem)) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem))
  name.vb: DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  id: DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>, Object)
  nameWithType: HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>, Object)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownListFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 222
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items and HTML attributes.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;select&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownListFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList, object htmlAttributes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownListFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), selectList As IEnumerable(Of SelectListItem), htmlAttributes As Object) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    - id: htmlAttributes
      type: System.Object
      description: "\nAn <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an\n<xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> instance containing the HTML attributes.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem), System.Object)
  name.vb: DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem), Object)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  id: DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>, String)
  nameWithType: HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: DropDownListFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 266
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a single-selection HTML &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items and option label.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;select&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent DropDownListFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList, string optionLabel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropDownListFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), selectList As IEnumerable(Of SelectListItem), optionLabel As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    - id: optionLabel
      type: System.String
      description: "\nThe text for a default empty item. Does not include such an item if argument is <code>null</code>.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem), System.String)
  name.vb: DropDownListFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem), String)
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  id: ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: ListBox(IHtmlHelper, String)
  nameWithType: HtmlHelperSelectExtensions.ListBox(IHtmlHelper, String)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ListBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 296
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a multi-selection &lt;select&gt; element for the <em>expression</em>.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent ListBox(this IHtmlHelper htmlHelper, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListBox(htmlHelper As IHtmlHelper, expression As String) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  id: ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: ListBox(IHtmlHelper, String, IEnumerable<SelectListItem>)
  nameWithType: HtmlHelperSelectExtensions.ListBox(IHtmlHelper, String, IEnumerable<SelectListItem>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ListBox
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 322
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a multi-selection &lt;select&gt; element for the <em>expression</em>, using the\nspecified list items.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and <em>expression</em> to set\n&lt;select&gt; element's \"name\" attribute. Sanitizes <em>expression</em> to set element's \"id\"\nattribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent ListBox(this IHtmlHelper htmlHelper, string expression, IEnumerable<SelectListItem> selectList)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListBox(htmlHelper As IHtmlHelper, expression As String, selectList As IEnumerable(Of SelectListItem)) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.String
      description: Expression name, relative to the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.ListBox(IHtmlHelper, String, IEnumerable(Of SelectListItem))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper, System.String, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem))
  name.vb: ListBox(IHtmlHelper, String, IEnumerable(Of SelectListItem))
- uid: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  commentId: M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  id: ListBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions
  langs:
  - csharp
  - vb
  name: ListBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>)
  nameWithType: HtmlHelperSelectExtensions.ListBoxFor<TModel, TResult>(IHtmlHelper<TModel>, Expression<Func<TModel, TResult>>, IEnumerable<SelectListItem>)
  fullName: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor<TModel, TResult>(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>, System.Linq.Expressions.Expression<System.Func<TModel, TResult>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ListBoxFor
    path: src/Microsoft.AspNetCore.Mvc.ViewFeatures/Rendering/HtmlHelperSelectExtensions.cs
    startLine: 353
  assemblies:
  - Microsoft.AspNetCore.Mvc.ViewFeatures
  namespace: Microsoft.AspNetCore.Mvc.Rendering
  summary: "\nReturns a multi-selection &lt;select&gt; element for the  <em>expression</em>, using the\nspecified list items.\n"
  remarks: "\nCombines <xref href=\"Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix\" data-throw-if-not-resolved=\"false\"></xref> and the string representation of the\n<em>expression</em> to set &lt;select&gt; element's \"name\" attribute. Sanitizes the string\nrepresentation of the <em>expression</em> to set element's \"id\" attribute.\n"
  example: []
  syntax:
    content: public static IHtmlContent ListBoxFor<TModel, TResult>(this IHtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TResult>> expression, IEnumerable<SelectListItem> selectList)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListBoxFor(Of TModel, TResult)(htmlHelper As IHtmlHelper(Of TModel), expression As Expression(Of Func(Of TModel, TResult)), selectList As IEnumerable(Of SelectListItem)) As IHtmlContent
    parameters:
    - id: htmlHelper
      type: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
      description: The <xref href="Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper%601" data-throw-if-not-resolved="false"></xref> instance this method extends.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
      description: An expression to be evaluated against the current model.
    - id: selectList
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
      description: "\nA collection of <xref href=\"Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" data-throw-if-not-resolved=\"false\"></xref> objects used to populate the &lt;select&gt; element with\n&lt;optgroup&gt; and &lt;option&gt; elements.\n"
    typeParameters:
    - id: TModel
      description: The type of the model.
    - id: TResult
      description: The type of the <em>expression</em> result.
    return:
      type: Microsoft.AspNetCore.Html.IHtmlContent
      description: A new <xref href="Microsoft.AspNetCore.Html.IHtmlContent" data-throw-if-not-resolved="false"></xref> containing the &lt;select&gt; element.
  nameWithType.vb: HtmlHelperSelectExtensions.ListBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor(Of TModel, TResult)(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel), System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem))
  name.vb: ListBoxFor(Of TModel, TResult)(IHtmlHelper(Of TModel), Expression(Of Func(Of TModel, TResult)), IEnumerable(Of SelectListItem))
references:
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  parent: Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: IHtmlHelper
  nameWithType: IHtmlHelper
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  isExternal: false
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering
  commentId: N:Microsoft.AspNetCore.Mvc.Rendering
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Rendering
  nameWithType: Microsoft.AspNetCore.Mvc.Rendering
  fullName: Microsoft.AspNetCore.Mvc.Rendering
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix
  commentId: P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  isExternal: false
  name: SelectListItem
  nameWithType: SelectListItem
  fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SelectListItem>
  nameWithType: IEnumerable<SelectListItem>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>
  nameWithType.vb: IEnumerable(Of SelectListItem)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Mvc.Rendering.SelectListItem)
  name.vb: IEnumerable(Of SelectListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
    name: SelectListItem
    nameWithType: SelectListItem
    fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
    name: SelectListItem
    nameWithType: SelectListItem
    fullName: Microsoft.AspNetCore.Mvc.Rendering.SelectListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{{TModel}}
  commentId: T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{`0}
  parent: Microsoft.AspNetCore.Mvc.Rendering
  definition: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
  name: IHtmlHelper<TModel>
  nameWithType: IHtmlHelper<TModel>
  fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TModel>
  nameWithType.vb: IHtmlHelper(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper(Of TModel)
  name.vb: IHtmlHelper(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1
    name: IHtmlHelper
    nameWithType: IHtmlHelper
    fullName: Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, TResult>>
  nameWithType: Expression<Func<TModel, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, TResult>>
  nameWithType.vb: Expression(Of Func(Of TModel, TResult))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, TResult))
  name.vb: Expression(Of Func(Of TModel, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
