### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  id: InputFormatterContext
  parent: Microsoft.AspNetCore.Mvc.Formatters
  children:
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader})
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.HttpContext
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.Metadata
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelName
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelType
  - Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ReaderFactory
  langs:
  - csharp
  - vb
  name: InputFormatterContext
  nameWithType: InputFormatterContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: InputFormatterContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nA context object used by an input formatter for deserializing the request body into an object.\n"
  example: []
  syntax:
    content: public class InputFormatterContext
    content.vb: Public Class InputFormatterContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader})
  commentId: M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader})
  id: '#ctor(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader})'
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: InputFormatterContext(HttpContext, String, ModelStateDictionary, ModelMetadata, Func<Stream, Encoding, TextReader>)
  nameWithType: InputFormatterContext.InputFormatterContext(HttpContext, String, ModelStateDictionary, ModelMetadata, Func<Stream, Encoding, TextReader>)
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.InputFormatterContext(Microsoft.AspNetCore.Http.HttpContext, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Func<System.IO.Stream, System.Text.Encoding, System.IO.TextReader>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public InputFormatterContext(HttpContext httpContext, string modelName, ModelStateDictionary modelState, ModelMetadata metadata, Func<Stream, Encoding, TextReader> readerFactory)
    content.vb: Public Sub New(httpContext As HttpContext, modelName As String, modelState As ModelStateDictionary, metadata As ModelMetadata, readerFactory As Func(Of Stream, Encoding, TextReader))
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> for the current operation.\n"
    - id: modelName
      type: System.String
      description: The name of the model.
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> for recording errors.\n"
    - id: metadata
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref> of the model to deserialize.\n"
    - id: readerFactory
      type: System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader}
      description: "\nA delegate which can create a <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> for the request body.\n"
  nameWithType.vb: InputFormatterContext.InputFormatterContext(HttpContext, String, ModelStateDictionary, ModelMetadata, Func(Of Stream, Encoding, TextReader))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.InputFormatterContext(Microsoft.AspNetCore.Http.HttpContext, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Func(Of System.IO.Stream, System.Text.Encoding, System.IO.TextReader))
  name.vb: InputFormatterContext(HttpContext, String, ModelStateDictionary, ModelMetadata, Func(Of Stream, Encoding, TextReader))
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.HttpContext
  id: HttpContext
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: InputFormatterContext.HttpContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.HttpContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: HttpContext
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> associated with the current operation.\n"
  example: []
  syntax:
    content: public HttpContext HttpContext { get; }
    content.vb: Public ReadOnly Property HttpContext As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelName
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelName
  id: ModelName
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: ModelName
  nameWithType: InputFormatterContext.ModelName
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelName
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the name of the model. Used as the key or key prefix for errors added to <xref href=\"Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ModelName { get; }
    content.vb: Public ReadOnly Property ModelName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
  id: ModelState
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: ModelState
  nameWithType: InputFormatterContext.ModelState
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelState
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary\" data-throw-if-not-resolved=\"false\"></xref> associated with the current operation.\n"
  example: []
  syntax:
    content: public ModelStateDictionary ModelState { get; }
    content.vb: Public ReadOnly Property ModelState As ModelStateDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.Metadata
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.Metadata
  id: Metadata
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: InputFormatterContext.Metadata
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.Metadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: Metadata
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 90
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the requested <xref href=\"Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata\" data-throw-if-not-resolved=\"false\"></xref> of the request body deserialization.\n"
  example: []
  syntax:
    content: public ModelMetadata Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As ModelMetadata
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelType
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelType
  id: ModelType
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: ModelType
  nameWithType: InputFormatterContext.ModelType
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ModelType
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets the requested <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the request body deserialization.\n"
  example: []
  syntax:
    content: public Type ModelType { get; }
    content.vb: Public ReadOnly Property ModelType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ReaderFactory
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ReaderFactory
  id: ReaderFactory
  parent: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  langs:
  - csharp
  - vb
  name: ReaderFactory
  nameWithType: InputFormatterContext.ReaderFactory
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ReaderFactory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
      branch: master
      repo: https://github.com/aspnet/Mvc.git
    id: ReaderFactory
    path: src/Microsoft.AspNetCore.Mvc.Abstractions/Formatters/InputFormatterContext.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Mvc.Abstractions
  namespace: Microsoft.AspNetCore.Mvc.Formatters
  summary: "\nGets a delegate which can create a <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> for the request body.\n"
  example: []
  syntax:
    content: public Func<Stream, Encoding, TextReader> ReaderFactory { get; }
    content.vb: Public ReadOnly Property ReaderFactory As Func(Of Stream, Encoding, TextReader)
    parameters: []
    return:
      type: System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Mvc.Formatters
  commentId: N:Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.Formatters
  nameWithType: Microsoft.AspNetCore.Mvc.Formatters
  fullName: Microsoft.AspNetCore.Mvc.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  commentId: T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
  parent: Microsoft.AspNetCore.Mvc.Formatters
  isExternal: false
  name: InputFormatterContext
  nameWithType: InputFormatterContext
  fullName: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader}
  commentId: T:System.Func{System.IO.Stream,System.Text.Encoding,System.IO.TextReader}
  parent: System
  definition: System.Func`3
  name: Func<Stream, Encoding, TextReader>
  nameWithType: Func<Stream, Encoding, TextReader>
  fullName: System.Func<System.IO.Stream, System.Text.Encoding, System.IO.TextReader>
  nameWithType.vb: Func(Of Stream, Encoding, TextReader)
  fullname.vb: System.Func(Of System.IO.Stream, System.Text.Encoding, System.IO.TextReader)
  name.vb: Func(Of Stream, Encoding, TextReader)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: false
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
  commentId: P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
