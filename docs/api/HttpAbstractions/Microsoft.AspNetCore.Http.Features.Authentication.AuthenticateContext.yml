### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  id: AuthenticateContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  children:
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.#ctor(System.String)
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Accepted
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Authenticated(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.AuthenticationScheme
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Description
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Error
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Failed(System.Exception)
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.NotAuthenticated
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Principal
  - Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Properties
  langs:
  - csharp
  - vb
  name: AuthenticateContext
  nameWithType: AuthenticateContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AuthenticateContext
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public class AuthenticateContext
    content.vb: Public Class AuthenticateContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: AuthenticateContext(String)
  nameWithType: AuthenticateContext.AuthenticateContext(String)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.AuthenticateContext(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public AuthenticateContext(string authenticationScheme)
    content.vb: Public Sub New(authenticationScheme As String)
    parameters:
    - id: authenticationScheme
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.AuthenticationScheme
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.AuthenticationScheme
  id: AuthenticationScheme
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: AuthenticationScheme
  nameWithType: AuthenticateContext.AuthenticationScheme
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.AuthenticationScheme
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AuthenticationScheme
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public string AuthenticationScheme { get; }
    content.vb: Public ReadOnly Property AuthenticationScheme As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Accepted
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Accepted
  id: Accepted
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Accepted
  nameWithType: AuthenticateContext.Accepted
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Accepted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Accepted
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public bool Accepted { get; }
    content.vb: Public ReadOnly Property Accepted As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Principal
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Principal
  id: Principal
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Principal
  nameWithType: AuthenticateContext.Principal
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Principal
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Principal
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public ClaimsPrincipal Principal { get; }
    content.vb: Public ReadOnly Property Principal As ClaimsPrincipal
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Properties
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Properties
  id: Properties
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: AuthenticateContext.Properties
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Properties
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Properties
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Description
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Description
  id: Description
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: AuthenticateContext.Description
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Description
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Description
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public IDictionary<string, object> Description { get; }
    content.vb: Public ReadOnly Property Description As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Error
  commentId: P:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Error
  id: Error
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AuthenticateContext.Error
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Error
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Error
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public Exception Error { get; }
    content.vb: Public ReadOnly Property Error As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Authenticated(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Authenticated(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: Authenticated(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Authenticated(ClaimsPrincipal, IDictionary<String, String>, IDictionary<String, Object>)
  nameWithType: AuthenticateContext.Authenticated(ClaimsPrincipal, IDictionary<String, String>, IDictionary<String, Object>)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Authenticated(System.Security.Claims.ClaimsPrincipal, System.Collections.Generic.IDictionary<System.String, System.String>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Authenticated
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public virtual void Authenticated(ClaimsPrincipal principal, IDictionary<string, string> properties, IDictionary<string, object> description)
    content.vb: Public Overridable Sub Authenticated(principal As ClaimsPrincipal, properties As IDictionary(Of String, String), description As IDictionary(Of String, Object))
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: description
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  nameWithType.vb: AuthenticateContext.Authenticated(ClaimsPrincipal, IDictionary(Of String, String), IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Authenticated(System.Security.Claims.ClaimsPrincipal, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Authenticated(ClaimsPrincipal, IDictionary(Of String, String), IDictionary(Of String, Object))
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.NotAuthenticated
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.NotAuthenticated
  id: NotAuthenticated
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: NotAuthenticated()
  nameWithType: AuthenticateContext.NotAuthenticated()
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.NotAuthenticated()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: NotAuthenticated
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public virtual void NotAuthenticated()
    content.vb: Public Overridable Sub NotAuthenticated
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Failed(System.Exception)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Failed(System.Exception)
  id: Failed(System.Exception)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  langs:
  - csharp
  - vb
  name: Failed(Exception)
  nameWithType: AuthenticateContext.Failed(Exception)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext.Failed(System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Failed
    path: src/Microsoft.AspNetCore.Http.Features/Authentication/AuthenticateContext.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features.Authentication
  syntax:
    content: public virtual void Failed(Exception error)
    content.vb: Public Overridable Sub Failed(error As Exception)
    parameters:
    - id: error
      type: System.Exception
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Http.Features.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Features.Authentication
  fullName: Microsoft.AspNetCore.Http.Features.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
