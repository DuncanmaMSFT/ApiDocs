### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  id: HeaderDictionary
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  - Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Count
  - Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  - Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  - Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  - Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,Microsoft#Extensions#Primitives#StringValues}#Item(System.String)
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  - Microsoft.AspNetCore.Http.HeaderDictionary.Values
  langs:
  - csharp
  - vb
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HeaderDictionary
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRepresents a wrapper for RequestHeaders and ResponseHeaders.\n"
  example: []
  syntax:
    content: 'public class HeaderDictionary : IHeaderDictionary, IDictionary<string, StringValues>, ICollection<KeyValuePair<string, StringValues>>, IEnumerable<KeyValuePair<string, StringValues>>, IEnumerable'
    content.vb: >-
      Public Class HeaderDictionary
          Implements IHeaderDictionary, IDictionary(Of String, StringValues), ICollection(Of KeyValuePair(Of String, StringValues)), IEnumerable(Of KeyValuePair(Of String, StringValues)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Http.IHeaderDictionary
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(System.String,Microsoft.Extensions.Primitives.StringValues)
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String,System.String[])
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(System.String)
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String,System.String[])
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(System.String,System.Collections.Generic.IList{{T}})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary()
  nameWithType: HeaderDictionary.HeaderDictionary()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary(Dictionary<String, StringValues>)
  nameWithType: HeaderDictionary.HeaderDictionary(Dictionary<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary(Dictionary<string, StringValues> store)
    content.vb: Public Sub New(store As Dictionary(Of String, StringValues))
    parameters:
    - id: store
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  nameWithType.vb: HeaderDictionary.HeaderDictionary(Dictionary(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: HeaderDictionary(Dictionary(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: HeaderDictionary(Int32)
  nameWithType: HeaderDictionary.HeaderDictionary(Int32)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.HeaderDictionary(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public HeaderDictionary(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: HeaderDictionary.Item[String]
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGet or sets the associated value from the collection as a single string.\n"
  example: []
  syntax:
    content: public StringValues this[string key] { get; set; }
    content.vb: Public Property Item(key As String) As StringValues
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: Microsoft.Extensions.Primitives.StringValues
      description: the associated value from the collection as a StringValues or StringValues.Empty if the key is not present.
  implements:
  - Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
  nameWithType.vb: HeaderDictionary.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,Microsoft#Extensions#Primitives#StringValues}#Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,Microsoft#Extensions#Primitives#StringValues}#Item(System.String)
  id: System#Collections#Generic#IDictionary{System#String,Microsoft#Extensions#Primitives#StringValues}#Item(System.String)
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IDictionary<String, StringValues>.Item[String]
  nameWithType: HeaderDictionary.IDictionary<String, StringValues>.Item[String]
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.this[]
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nThrows KeyNotFoundException if the key is not present.\n"
  example: []
  syntax:
    content: StringValues IDictionary<string, StringValues>.this[string key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.Item(key As String) As StringValues Implements IDictionary(Of String, StringValues).this
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: Microsoft.Extensions.Primitives.StringValues
      description: ''
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Item(System.String)
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.Item(System.String)
  name.vb: System.Collections.Generic.IDictionary<System.String,Microsoft.Extensions.Primitives.StringValues>.Item(String)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Count
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Count
  id: Count
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HeaderDictionary.Count
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Count
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the number of elements contained in the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref>;.\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: HeaderDictionary.IsReadOnly
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsReadOnly
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets a value that indicates whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> is in read-only mode.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> is in read-only mode; otherwise, false.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: HeaderDictionary.Keys
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Keys
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public ICollection<string> Keys { get; }
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Values
  commentId: P:Microsoft.AspNetCore.Http.HeaderDictionary.Values
  id: Values
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: HeaderDictionary.Values
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Values
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public ICollection<StringValues> Values { get; }
    content.vb: Public ReadOnly Property Values As ICollection(Of StringValues)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Extensions.Primitives.StringValues}
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Add(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAdds a new list of items to the collection.\n"
  example: []
  syntax:
    content: public void Add(KeyValuePair<string, StringValues> item)
    content.vb: Public Sub Add(item As KeyValuePair(Of String, StringValues))
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}
      description: The item to add.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  nameWithType.vb: HeaderDictionary.Add(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Add(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  id: Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Add(String, StringValues)
  nameWithType: HeaderDictionary.Add(String, StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Add(System.String, Microsoft.Extensions.Primitives.StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 169
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAdds the given header and values to the collection.\n"
  example: []
  syntax:
    content: public void Add(string key, StringValues value)
    content.vb: Public Sub Add(key As String, value As StringValues)
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: Microsoft.Extensions.Primitives.StringValues
      description: The header values.
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HeaderDictionary.Clear()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Clear
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nClears the entire list of objects.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Contains(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Contains
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 196
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns a value indicating whether the specified object occurs within this collection.\n"
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<string, StringValues> item)
    content.vb: Public Function Contains(item As KeyValuePair(Of String, StringValues)) As Boolean
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}
      description: The item.
    return:
      type: System.Boolean
      description: true if the specified object occurs within this collection; otherwise, false.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  nameWithType.vb: HeaderDictionary.Contains(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Contains(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: HeaderDictionary.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContainsKey
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nDetermines whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    content.vb: Public Function ContainsKey(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains a specific key; otherwise, false.
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.ContainsKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<String, StringValues>[], Int32)
  nameWithType: HeaderDictionary.CopyTo(KeyValuePair<String, StringValues>[], Int32)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: CopyTo
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCopies the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> elements to a one-dimensional Array instance at the specified index.\n"
  example: []
  syntax:
    content: public void CopyTo(KeyValuePair<string, StringValues>[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of String, StringValues)(), arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[]
      description: The one-dimensional Array that is the destination of the specified objects copied from the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <em>array</em> at which copying begins.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  nameWithType.vb: HeaderDictionary.CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<String, StringValues>)
  nameWithType: HeaderDictionary.Remove(KeyValuePair<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Remove
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 246
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRemoves the given item from the the collection.\n"
  example: []
  syntax:
    content: public bool Remove(KeyValuePair<string, StringValues> item)
    content.vb: Public Function Remove(item As KeyValuePair(Of String, StringValues)) As Boolean
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}
      description: The item.
    return:
      type: System.Boolean
      description: true if the specified object was removed from the collection; otherwise, false.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  nameWithType.vb: HeaderDictionary.Remove(KeyValuePair(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Remove(KeyValuePair(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: HeaderDictionary.Remove(String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Remove
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 267
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRemoves the given header from the collection.\n"
  example: []
  syntax:
    content: public bool Remove(string key)
    content.vb: Public Function Remove(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: System.Boolean
      description: true if the specified object was removed from the collection; otherwise, false.
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  id: TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out StringValues)
  nameWithType: HeaderDictionary.TryGetValue(String, out StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String, out Microsoft.Extensions.Primitives.StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryGetValue
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 282
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRetrieves a value from the dictionary.\n"
  example: []
  syntax:
    content: public bool TryGetValue(string key, out StringValues value)
    content.vb: Public Function TryGetValue(key As String, ByRef value As StringValues) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: Microsoft.Extensions.Primitives.StringValues
      description: The value.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains the key; otherwise, false.
  implements:
  - System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  nameWithType.vb: HeaderDictionary.TryGetValue(String, ByRef StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.TryGetValue(System.String, ByRef Microsoft.Extensions.Primitives.StringValues)
  name.vb: TryGetValue(String, ByRef StringValues)
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: HeaderDictionary.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 296
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: public HeaderDictionary.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As HeaderDictionary.Enumerator
    return:
      type: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
      description: An <xref href="Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  nameWithType: HeaderDictionary.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 310
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, StringValues>> IEnumerable<KeyValuePair<string, StringValues>>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, StringValues)) Implements IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  nameWithType.vb: HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  fullName.vb: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.HeaderDictionary
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: HeaderDictionary.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Http/HeaderDictionary.cs
    startLine: 324
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.IHeaderDictionary
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: IHeaderDictionary
  nameWithType: IHeaderDictionary
  fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, StringValues>
  nameWithType: IDictionary<String, StringValues>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: IDictionary(Of String, StringValues)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: IDictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, StringValues>>
  nameWithType: ICollection<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: ICollection(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerable<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: IEnumerable(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(System.String,Microsoft.Extensions.Primitives.StringValues)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  definition: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
  name: Append(String, StringValues)
  nameWithType: HeaderDictionaryExtensions.Append(String, StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(System.String, Microsoft.Extensions.Primitives.StringValues)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(System.String,Microsoft.Extensions.Primitives.StringValues)
    name: Append
    nameWithType: HeaderDictionaryExtensions.Append
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(System.String,Microsoft.Extensions.Primitives.StringValues)
    name: Append
    nameWithType: HeaderDictionaryExtensions.Append
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  definition: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  name: AppendCommaSeparatedValues(String, String[])
  nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues(String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String, System.String[])
  nameWithType.vb: HeaderDictionaryExtensions.AppendCommaSeparatedValues(String, String())
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String, System.String())
  name.vb: AppendCommaSeparatedValues(String, String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String,System.String[])
    name: AppendCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(System.String,System.String[])
    name: AppendCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  definition: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
  name: GetCommaSeparatedValues(String)
  nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues(String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(System.String)
    name: GetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(System.String)
    name: GetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  definition: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  name: SetCommaSeparatedValues(String, String[])
  nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues(String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String, System.String[])
  nameWithType.vb: HeaderDictionaryExtensions.SetCommaSeparatedValues(String, String())
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String, System.String())
  name.vb: SetCommaSeparatedValues(String, String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String,System.String[])
    name: SetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(System.String,System.String[])
    name: SetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(System.String,System.Collections.Generic.IList{{T}})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
  parent: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions
  definition: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
  name: AppendList<T>(String, IList<T>)
  nameWithType: HeaderDictionaryTypeExtensions.AppendList<T>(String, IList<T>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList<T>(System.String, System.Collections.Generic.IList<T>)
  nameWithType.vb: HeaderDictionaryTypeExtensions.AppendList(Of T)(String, IList(Of T))
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList(Of T)(System.String, System.Collections.Generic.IList(Of T))
  name.vb: AppendList(Of T)(String, IList(Of T))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(System.String,System.Collections.Generic.IList{``0})
    name: AppendList<T>
    nameWithType: HeaderDictionaryTypeExtensions.AppendList<T>
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(System.String,System.Collections.Generic.IList{``0})
    name: AppendList(Of T)
    nameWithType: HeaderDictionaryTypeExtensions.AppendList(Of T)
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
  isExternal: true
  name: Append(IHeaderDictionary, String, StringValues)
  nameWithType: HeaderDictionaryExtensions.Append(IHeaderDictionary, String, StringValues)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, Microsoft.Extensions.Primitives.StringValues)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
    name: Append
    nameWithType: HeaderDictionaryExtensions.Append
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)
    name: Append
    nameWithType: HeaderDictionaryExtensions.Append
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.Append
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HeaderDictionaryExtensions
  nameWithType: HeaderDictionaryExtensions
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  isExternal: true
  name: AppendCommaSeparatedValues(IHeaderDictionary, String, String[])
  nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.String[])
  nameWithType.vb: HeaderDictionaryExtensions.AppendCommaSeparatedValues(IHeaderDictionary, String, String())
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.String())
  name.vb: AppendCommaSeparatedValues(IHeaderDictionary, String, String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
    name: AppendCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
    name: AppendCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.AppendCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
  isExternal: true
  name: GetCommaSeparatedValues(IHeaderDictionary, String)
  nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues(IHeaderDictionary, String)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
    name: GetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)
    name: GetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.GetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
  isExternal: true
  name: SetCommaSeparatedValues(IHeaderDictionary, String, String[])
  nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, String, String[])
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.String[])
  nameWithType.vb: HeaderDictionaryExtensions.SetCommaSeparatedValues(IHeaderDictionary, String, String())
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.String())
  name.vb: SetCommaSeparatedValues(IHeaderDictionary, String, String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
    name: SetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.String[])
    name: SetCommaSeparatedValues
    nameWithType: HeaderDictionaryExtensions.SetCommaSeparatedValues
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
  commentId: M:Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
  isExternal: true
  name: AppendList<T>(IHeaderDictionary, String, IList<T>)
  nameWithType: HeaderDictionaryTypeExtensions.AppendList<T>(IHeaderDictionary, String, IList<T>)
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList<T>(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.Collections.Generic.IList<T>)
  nameWithType.vb: HeaderDictionaryTypeExtensions.AppendList(Of T)(IHeaderDictionary, String, IList(Of T))
  fullname.vb: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList(Of T)(Microsoft.AspNetCore.Http.IHeaderDictionary, System.String, System.Collections.Generic.IList(Of T))
  name.vb: AppendList(Of T)(IHeaderDictionary, String, IList(Of T))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
    name: AppendList<T>
    nameWithType: HeaderDictionaryTypeExtensions.AppendList<T>
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList``1(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String,System.Collections.Generic.IList{``0})
    name: AppendList(Of T)
    nameWithType: HeaderDictionaryTypeExtensions.AppendList(Of T)
    fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions.AppendList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HeaderDictionaryTypeExtensions
  nameWithType: HeaderDictionaryTypeExtensions
  fullName: Microsoft.AspNetCore.Http.HeaderDictionaryTypeExtensions
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
  parent: Microsoft.AspNetCore.Http.IHeaderDictionary
  isExternal: true
  name: Item[String]
  nameWithType: IHeaderDictionary.Item[String]
  fullName: Microsoft.AspNetCore.Http.IHeaderDictionary.Item[System.String]
  nameWithType.vb: IHeaderDictionary.Item(String)
  fullname.vb: Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
    name: Item
    nameWithType: IHeaderDictionary.Item
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary.Item(System.String)
    name: Item
    nameWithType: IHeaderDictionary.Item
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Primitives.StringValues
  commentId: T:Microsoft.Extensions.Primitives.StringValues
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: Microsoft.Extensions.Primitives.StringValues
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IDictionary<String, StringValues>.Item[String]
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Item[System.String]
  nameWithType.vb: IDictionary(Of String, StringValues).Item(String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<String, StringValues>.Item
    fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of String, StringValues).Item
    fullName: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  isExternal: false
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).Count
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Keys
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<String, StringValues>.Keys
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Keys
  nameWithType.vb: IDictionary(Of String, StringValues).Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Values
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<String, StringValues>.Values
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Values
  nameWithType.vb: IDictionary(Of String, StringValues).Values
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Values
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<StringValues>
  nameWithType: ICollection<StringValues>
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: ICollection(Of StringValues)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.Primitives.StringValues)
  name.vb: ICollection(Of StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<String, StringValues>)
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.Add(KeyValuePair<String, StringValues>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).Add(KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Add(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Add(KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<String, StringValues>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of String, StringValues)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, StringValues>
  nameWithType: KeyValuePair<String, StringValues>
  fullName: System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: KeyValuePair(Of String, StringValues)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: KeyValuePair(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Add(System.String,Microsoft.Extensions.Primitives.StringValues)
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(String, StringValues)
  nameWithType: IDictionary<String, StringValues>.Add(String, StringValues)
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Add(System.String, Microsoft.Extensions.Primitives.StringValues)
  nameWithType.vb: IDictionary(Of String, StringValues).Add(String, StringValues)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Add(System.String, Microsoft.Extensions.Primitives.StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<String, StringValues>.Add
    fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of String, StringValues).Add
    fullName: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<KeyValuePair<String, StringValues>>.Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of KeyValuePair(Of String, StringValues)).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<String, StringValues>)
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.Contains(KeyValuePair<String, StringValues>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).Contains(KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Contains(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Contains(KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<String, StringValues>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of String, StringValues)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.ContainsKey(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IDictionary<String, StringValues>.ContainsKey(String)
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.ContainsKey(System.String)
  nameWithType.vb: IDictionary(Of String, StringValues).ContainsKey(String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<String, StringValues>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of String, StringValues).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<String, StringValues>[], Int32)
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.CopyTo(KeyValuePair<String, StringValues>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, StringValues)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<String, StringValues>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of String, StringValues)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}[]
  name: KeyValuePair<String, StringValues>[]
  nameWithType: KeyValuePair<String, StringValues>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>[]
  nameWithType.vb: KeyValuePair(Of String, StringValues)()
  fullname.vb: System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)()
  name.vb: KeyValuePair(Of String, StringValues)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.Remove(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<String, StringValues>)
  nameWithType: ICollection<KeyValuePair<String, StringValues>>.Remove(KeyValuePair<String, StringValues>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, StringValues)).Remove(KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Remove(System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Remove(KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<String, StringValues>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of String, StringValues)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: IDictionary<String, StringValues>.Remove(String)
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Remove(System.String)
  nameWithType.vb: IDictionary(Of String, StringValues).Remove(String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<String, StringValues>.Remove
    fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of String, StringValues).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  parent: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, StringValues)
  nameWithType: IDictionary<String, StringValues>.TryGetValue(String, StringValues)
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.TryGetValue(System.String, Microsoft.Extensions.Primitives.StringValues)
  nameWithType.vb: IDictionary(Of String, StringValues).TryGetValue(String, StringValues)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).TryGetValue(System.String, Microsoft.Extensions.Primitives.StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<String, StringValues>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Primitives.StringValues>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of String, StringValues).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HeaderDictionary.Enumerator
  nameWithType: HeaderDictionary.Enumerator
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary.Enumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerator<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
