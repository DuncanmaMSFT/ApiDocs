### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  commentId: T:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  id: StreamHelperExtensions
  parent: Microsoft.AspNetCore.WebUtilities
  children:
  - Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: StreamHelperExtensions
  nameWithType: StreamHelperExtensions
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: StreamHelperExtensions
    path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public static class StreamHelperExtensions
    content.vb: Public Module StreamHelperExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: DrainAsync(System.IO.Stream,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  langs:
  - csharp
  - vb
  name: DrainAsync(Stream, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DrainAsync
    path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public static Task DrainAsync(this Stream stream, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DrainAsync(stream As Stream, cancellationToken As CancellationToken) As Task
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: DrainAsync(System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  langs:
  - csharp
  - vb
  name: DrainAsync(Stream, Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DrainAsync
    path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public static Task DrainAsync(this Stream stream, long ? limit, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DrainAsync(stream As Stream, limit As Long?, cancellationToken As CancellationToken) As Task
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: limit
      type: System.Nullable{System.Int64}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: StreamHelperExtensions.DrainAsync(Stream, Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(Stream, Nullable(Of Int64), CancellationToken)
- uid: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: DrainAsync(System.IO.Stream,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions
  langs:
  - csharp
  - vb
  name: DrainAsync(Stream, ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  nameWithType: StreamHelperExtensions.DrainAsync(Stream, ArrayPool<Byte>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Buffers.ArrayPool<System.Byte>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DrainAsync
    path: src/Microsoft.AspNetCore.WebUtilities/StreamHelperExtensions.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public static Task DrainAsync(this Stream stream, ArrayPool<byte> bytePool, long ? limit, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DrainAsync(stream As Stream, bytePool As ArrayPool(Of Byte), limit As Long?, cancellationToken As CancellationToken) As Task
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: bytePool
      type: System.Buffers.ArrayPool{System.Byte}
    - id: limit
      type: System.Nullable{System.Int64}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: StreamHelperExtensions.DrainAsync(Stream, ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(System.IO.Stream, System.Buffers.ArrayPool(Of System.Byte), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DrainAsync(Stream, ArrayPool(Of Byte), Nullable(Of Int64), CancellationToken)
references:
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers.ArrayPool{System.Byte}
  commentId: T:System.Buffers.ArrayPool{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.ArrayPool`1
  name: ArrayPool<Byte>
  nameWithType: ArrayPool<Byte>
  fullName: System.Buffers.ArrayPool<System.Byte>
  nameWithType.vb: ArrayPool(Of Byte)
  fullname.vb: System.Buffers.ArrayPool(Of System.Byte)
  name.vb: ArrayPool(Of Byte)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers.ArrayPool`1
  commentId: T:System.Buffers.ArrayPool`1
  isExternal: true
  name: ArrayPool<T>
  nameWithType: ArrayPool<T>
  fullName: System.Buffers.ArrayPool<T>
  nameWithType.vb: ArrayPool(Of T)
  fullname.vb: System.Buffers.ArrayPool(Of T)
  name.vb: ArrayPool(Of T)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: false
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
