### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature
  commentId: T:Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature
  id: ITlsConnectionFeature
  parent: Microsoft.AspNetCore.Http.Features
  children:
  - Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.ClientCertificate
  - Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.GetClientCertificateAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ITlsConnectionFeature
  nameWithType: ITlsConnectionFeature
  fullName: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ITlsConnectionFeature
    path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public interface ITlsConnectionFeature
    content.vb: Public Interface ITlsConnectionFeature
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.ClientCertificate
  commentId: P:Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.ClientCertificate
  id: ClientCertificate
  parent: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature
  langs:
  - csharp
  - vb
  name: ClientCertificate
  nameWithType: ITlsConnectionFeature.ClientCertificate
  fullName: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.ClientCertificate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ClientCertificate
    path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  summary: "\nSynchronously retrieves the client certificate, if any.\n"
  example: []
  syntax:
    content: X509Certificate2 ClientCertificate { get; set; }
    content.vb: Property ClientCertificate As X509Certificate2
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.GetClientCertificateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.GetClientCertificateAsync(System.Threading.CancellationToken)
  id: GetClientCertificateAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature
  langs:
  - csharp
  - vb
  name: GetClientCertificateAsync(CancellationToken)
  nameWithType: ITlsConnectionFeature.GetClientCertificateAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.Http.Features.ITlsConnectionFeature.GetClientCertificateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetClientCertificateAsync
    path: src/Microsoft.AspNetCore.Http.Features/ITlsConnectionFeature.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  summary: "\nAsynchronously retrieves the client certificate, if any.\n"
  example: []
  syntax:
    content: Task<X509Certificate2> GetClientCertificateAsync(CancellationToken cancellationToken)
    content.vb: Function GetClientCertificateAsync(cancellationToken As CancellationToken) As Task(Of X509Certificate2)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: ''
references:
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  commentId: T:System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  nameWithType.vb: Task(Of X509Certificate2)
  fullname.vb: System.Threading.Tasks.Task(Of System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: Task(Of X509Certificate2)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
