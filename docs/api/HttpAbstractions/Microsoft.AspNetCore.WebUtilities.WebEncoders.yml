### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders
  commentId: T:Microsoft.AspNetCore.WebUtilities.WebEncoders
  id: WebEncoders
  parent: Microsoft.AspNetCore.WebUtilities
  children:
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Int32)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[])
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Int32)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToDecode(System.Int32)
  - Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToEncode(System.Int32)
  langs:
  - csharp
  - vb
  name: WebEncoders
  nameWithType: WebEncoders
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: WebEncoders
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nContains utility APIs to assist with common encoding and decoding operations.\n"
  example: []
  syntax:
    content: public static class WebEncoders
    content.vb: Public Module WebEncoders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String)
  id: Base64UrlDecode(System.String)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlDecode(String)
  nameWithType: WebEncoders.Base64UrlDecode(String)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlDecode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nDecodes a base64url-encoded string.\n"
  remarks: "\nThe input must not contain any whitespace or padding characters.\nThrows <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> if the input is malformed.\n"
  example: []
  syntax:
    content: public static byte[] Base64UrlDecode(string input)
    content.vb: Public Shared Function Base64UrlDecode(input As String) As Byte()
    parameters:
    - id: input
      type: System.String
      description: The base64url-encoded input to decode.
    return:
      type: System.Byte[]
      description: The base64url-decoded form of the input.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Int32)
  id: Base64UrlDecode(System.String,System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlDecode(String, Int32, Int32)
  nameWithType: WebEncoders.Base64UrlDecode(String, Int32, Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlDecode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nDecodes a base64url-encoded substring of a given string.\n"
  remarks: "\nThe input must not contain any whitespace or padding characters.\nThrows <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> if the input is malformed.\n"
  example: []
  syntax:
    content: public static byte[] Base64UrlDecode(string input, int offset, int count)
    content.vb: Public Shared Function Base64UrlDecode(input As String, offset As Integer, count As Integer) As Byte()
    parameters:
    - id: input
      type: System.String
      description: A string containing the base64url-encoded input to decode.
    - id: offset
      type: System.Int32
      description: The position in <em>input</em> at which decoding should begin.
    - id: count
      type: System.Int32
      description: The number of characters in <em>input</em> to decode.
    return:
      type: System.Byte[]
      description: The base64url-decoded form of the input.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
  id: Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlDecode(String, Int32, Char[], Int32, Int32)
  nameWithType: WebEncoders.Base64UrlDecode(String, Int32, Char[], Int32, Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String, System.Int32, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlDecode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nDecodes a base64url-encoded <em>input</em> into a <code>byte[]</code>.\n"
  remarks: "\nThe input must not contain any whitespace or padding characters.\nThrows <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> if the input is malformed.\n"
  example: []
  syntax:
    content: public static byte[] Base64UrlDecode(string input, int offset, char[] buffer, int bufferOffset, int count)
    content.vb: Public Shared Function Base64UrlDecode(input As String, offset As Integer, buffer As Char(), bufferOffset As Integer, count As Integer) As Byte()
    parameters:
    - id: input
      type: System.String
      description: A string containing the base64url-encoded input to decode.
    - id: offset
      type: System.Int32
      description: The position in <em>input</em> at which decoding should begin.
    - id: buffer
      type: System.Char[]
      description: "\nScratch buffer to hold the <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>s to decode. Array must be large enough to hold\n<em>bufferOffset</em> and <em>count</em> characters as well as Base64 padding\ncharacters. Content is not preserved.\n"
    - id: bufferOffset
      type: System.Int32
      description: "\nThe offset into <em>buffer</em> at which to begin writing the <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>s to decode.\n"
    - id: count
      type: System.Int32
      description: The number of characters in <em>input</em> to decode.
    return:
      type: System.Byte[]
      description: The base64url-decoded form of the <em>input</em>.
  nameWithType.vb: WebEncoders.Base64UrlDecode(String, Int32, Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String, System.Int32, System.Char(), System.Int32, System.Int32)
  name.vb: Base64UrlDecode(String, Int32, Char(), Int32, Int32)
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToDecode(System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToDecode(System.Int32)
  id: GetArraySizeRequiredToDecode(System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: GetArraySizeRequiredToDecode(Int32)
  nameWithType: WebEncoders.GetArraySizeRequiredToDecode(Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToDecode(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetArraySizeRequiredToDecode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nGets the minimum <code>char[]</code> size required for decoding of <em>count</em> characters\nwith the <xref href=\"Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String%2cSystem.Int32%2cSystem.Char%5b%5d%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public static int GetArraySizeRequiredToDecode(int count)
    content.vb: Public Shared Function GetArraySizeRequiredToDecode(count As Integer) As Integer
    parameters:
    - id: count
      type: System.Int32
      description: The number of characters to decode.
    return:
      type: System.Int32
      description: "\nThe minimum <code>char[]</code> size required for decoding  of <em>count</em> characters.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[])
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[])
  id: Base64UrlEncode(System.Byte[])
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlEncode(Byte[])
  nameWithType: WebEncoders.Base64UrlEncode(Byte[])
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlEncode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nEncodes <em>input</em> using base64url encoding.\n"
  example: []
  syntax:
    content: public static string Base64UrlEncode(byte[] input)
    content.vb: Public Shared Function Base64UrlEncode(input As Byte()) As String
    parameters:
    - id: input
      type: System.Byte[]
      description: The binary input to encode.
    return:
      type: System.String
      description: The base64url-encoded form of <em>input</em>.
  nameWithType.vb: WebEncoders.Base64UrlEncode(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte())
  name.vb: Base64UrlEncode(Byte())
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: Base64UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlEncode(Byte[], Int32, Int32)
  nameWithType: WebEncoders.Base64UrlEncode(Byte[], Int32, Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlEncode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nEncodes <em>input</em> using base64url encoding.\n"
  example: []
  syntax:
    content: public static string Base64UrlEncode(byte[] input, int offset, int count)
    content.vb: Public Shared Function Base64UrlEncode(input As Byte(), offset As Integer, count As Integer) As String
    parameters:
    - id: input
      type: System.Byte[]
      description: The binary input to encode.
    - id: offset
      type: System.Int32
      description: The offset into <em>input</em> at which to begin encoding.
    - id: count
      type: System.Int32
      description: The number of bytes from <em>input</em> to encode.
    return:
      type: System.String
      description: The base64url-encoded form of <em>input</em>.
  nameWithType.vb: WebEncoders.Base64UrlEncode(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte(), System.Int32, System.Int32)
  name.vb: Base64UrlEncode(Byte(), Int32, Int32)
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
  id: Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: Base64UrlEncode(Byte[], Int32, Char[], Int32, Int32)
  nameWithType: WebEncoders.Base64UrlEncode(Byte[], Int32, Char[], Int32, Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[], System.Int32, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Base64UrlEncode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 242
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nEncodes <em>input</em> using base64url encoding.\n"
  example: []
  syntax:
    content: public static int Base64UrlEncode(byte[] input, int offset, char[] output, int outputOffset, int count)
    content.vb: Public Shared Function Base64UrlEncode(input As Byte(), offset As Integer, output As Char(), outputOffset As Integer, count As Integer) As Integer
    parameters:
    - id: input
      type: System.Byte[]
      description: The binary input to encode.
    - id: offset
      type: System.Int32
      description: The offset into <em>input</em> at which to begin encoding.
    - id: output
      type: System.Char[]
      description: "\nBuffer to receive the base64url-encoded form of <em>input</em>. Array must be large enough to\nhold <em>outputOffset</em> characters and the full base64-encoded form of\n<em>input</em>, including padding characters.\n"
    - id: outputOffset
      type: System.Int32
      description: "\nThe offset into <em>output</em> at which to begin writing the base64url-encoded form of\n<em>input</em>.\n"
    - id: count
      type: System.Int32
      description: The number of <code>byte</code>s from <em>input</em> to encode.
    return:
      type: System.Int32
      description: "\nThe number of characters written to <em>output</em>, less any padding characters.\n"
  nameWithType.vb: WebEncoders.Base64UrlEncode(Byte(), Int32, Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte(), System.Int32, System.Char(), System.Int32, System.Int32)
  name.vb: Base64UrlEncode(Byte(), Int32, Char(), Int32, Int32)
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToEncode(System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToEncode(System.Int32)
  id: GetArraySizeRequiredToEncode(System.Int32)
  parent: Microsoft.AspNetCore.WebUtilities.WebEncoders
  langs:
  - csharp
  - vb
  name: GetArraySizeRequiredToEncode(Int32)
  nameWithType: WebEncoders.GetArraySizeRequiredToEncode(Int32)
  fullName: Microsoft.AspNetCore.WebUtilities.WebEncoders.GetArraySizeRequiredToEncode(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetArraySizeRequiredToEncode
    path: src/Microsoft.AspNetCore.WebUtilities/WebEncoders.cs
    startLine: 313
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nGet the minimum output <code>char[]</code> size required for encoding <em>count</em>\n<xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>s with the <xref href=\"Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Char%5b%5d%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public static int GetArraySizeRequiredToEncode(int count)
    content.vb: Public Shared Function GetArraySizeRequiredToEncode(count As Integer) As Integer
    parameters:
    - id: count
      type: System.Int32
      description: The number of characters to encode.
    return:
      type: System.Int32
      description: "\nThe minimum output <code>char[]</code> size required for encoding <em>count</em> <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.FormatException
  commentId: T:System.FormatException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlDecode(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
- uid: System.Byte
  commentId: T:System.Byte
- uid: Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebUtilities.WebEncoders.Base64UrlEncode(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)
