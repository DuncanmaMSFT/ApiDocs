### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  commentId: T:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  id: DefaultConnectionInfo
  parent: Microsoft.AspNetCore.Http.Internal
  children:
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.ClientCertificate
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Initialize(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalIpAddress
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalPort
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemoteIpAddress
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemotePort
  - Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Uninitialize
  langs:
  - csharp
  - vb
  name: DefaultConnectionInfo
  nameWithType: DefaultConnectionInfo
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DefaultConnectionInfo
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: 'public class DefaultConnectionInfo : ConnectionInfo'
    content.vb: >-
      Public Class DefaultConnectionInfo
          Inherits ConnectionInfo
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Http.ConnectionInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  id: '#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)'
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: DefaultConnectionInfo(IFeatureCollection)
  nameWithType: DefaultConnectionInfo.DefaultConnectionInfo(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.DefaultConnectionInfo(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public DefaultConnectionInfo(IFeatureCollection features)
    content.vb: Public Sub New(features As IFeatureCollection)
    parameters:
    - id: features
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Initialize(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Initialize(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  id: Initialize(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: Initialize(IFeatureCollection)
  nameWithType: DefaultConnectionInfo.Initialize(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Initialize(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Initialize
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public virtual void Initialize(IFeatureCollection features)
    content.vb: Public Overridable Sub Initialize(features As IFeatureCollection)
    parameters:
    - id: features
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Uninitialize
  commentId: M:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Uninitialize
  id: Uninitialize
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: Uninitialize()
  nameWithType: DefaultConnectionInfo.Uninitialize()
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.Uninitialize()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Uninitialize
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public virtual void Uninitialize()
    content.vb: Public Overridable Sub Uninitialize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemoteIpAddress
  commentId: P:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemoteIpAddress
  id: RemoteIpAddress
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: RemoteIpAddress
  nameWithType: DefaultConnectionInfo.RemoteIpAddress
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemoteIpAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RemoteIpAddress
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override IPAddress RemoteIpAddress { get; set; }
    content.vb: Public Overrides Property RemoteIpAddress As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.RemoteIpAddress
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemotePort
  commentId: P:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemotePort
  id: RemotePort
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: RemotePort
  nameWithType: DefaultConnectionInfo.RemotePort
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.RemotePort
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RemotePort
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override int RemotePort { get; set; }
    content.vb: Public Overrides Property RemotePort As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.RemotePort
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalIpAddress
  commentId: P:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalIpAddress
  id: LocalIpAddress
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: LocalIpAddress
  nameWithType: DefaultConnectionInfo.LocalIpAddress
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalIpAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: LocalIpAddress
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override IPAddress LocalIpAddress { get; set; }
    content.vb: Public Overrides Property LocalIpAddress As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.LocalIpAddress
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalPort
  commentId: P:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalPort
  id: LocalPort
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: LocalPort
  nameWithType: DefaultConnectionInfo.LocalPort
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.LocalPort
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: LocalPort
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override int LocalPort { get; set; }
    content.vb: Public Overrides Property LocalPort As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.LocalPort
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.ClientCertificate
  commentId: P:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.ClientCertificate
  id: ClientCertificate
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: ClientCertificate
  nameWithType: DefaultConnectionInfo.ClientCertificate
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.ClientCertificate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ClientCertificate
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override X509Certificate2 ClientCertificate { get; set; }
    content.vb: Public Overrides Property ClientCertificate As X509Certificate2
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.ClientCertificate
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  id: GetClientCertificateAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo
  langs:
  - csharp
  - vb
  name: GetClientCertificateAsync(CancellationToken)
  nameWithType: DefaultConnectionInfo.GetClientCertificateAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.Http.Internal.DefaultConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetClientCertificateAsync
    path: src/Microsoft.AspNetCore.Http/Internal/DefaultConnectionInfo.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public override Task<X509Certificate2> GetClientCertificateAsync(CancellationToken cancellationToken = null)
    content.vb: Public Overrides Function GetClientCertificateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of X509Certificate2)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  overridden: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Http.Internal
  commentId: N:Microsoft.AspNetCore.Http.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Http.Internal
  nameWithType: Microsoft.AspNetCore.Http.Internal
  fullName: Microsoft.AspNetCore.Http.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.ConnectionInfo
  commentId: T:Microsoft.AspNetCore.Http.ConnectionInfo
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: ConnectionInfo
  nameWithType: ConnectionInfo
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.IFeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.RemoteIpAddress
  commentId: P:Microsoft.AspNetCore.Http.ConnectionInfo.RemoteIpAddress
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: false
  name: RemoteIpAddress
  nameWithType: ConnectionInfo.RemoteIpAddress
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.RemoteIpAddress
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.RemotePort
  commentId: P:Microsoft.AspNetCore.Http.ConnectionInfo.RemotePort
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: false
  name: RemotePort
  nameWithType: ConnectionInfo.RemotePort
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.RemotePort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.LocalIpAddress
  commentId: P:Microsoft.AspNetCore.Http.ConnectionInfo.LocalIpAddress
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: false
  name: LocalIpAddress
  nameWithType: ConnectionInfo.LocalIpAddress
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.LocalIpAddress
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.LocalPort
  commentId: P:Microsoft.AspNetCore.Http.ConnectionInfo.LocalPort
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: false
  name: LocalPort
  nameWithType: ConnectionInfo.LocalPort
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.LocalPort
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.ClientCertificate
  commentId: P:Microsoft.AspNetCore.Http.ConnectionInfo.ClientCertificate
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: false
  name: ClientCertificate
  nameWithType: ConnectionInfo.ClientCertificate
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.ClientCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Http.ConnectionInfo
  isExternal: true
  name: GetClientCertificateAsync(CancellationToken)
  nameWithType: ConnectionInfo.GetClientCertificateAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
    name: GetClientCertificateAsync
    nameWithType: ConnectionInfo.GetClientCertificateAsync
    fullName: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync(System.Threading.CancellationToken)
    name: GetClientCertificateAsync
    nameWithType: ConnectionInfo.GetClientCertificateAsync
    fullName: Microsoft.AspNetCore.Http.ConnectionInfo.GetClientCertificateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  commentId: T:System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  nameWithType.vb: Task(Of X509Certificate2)
  fullname.vb: System.Threading.Tasks.Task(Of System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: Task(Of X509Certificate2)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
