### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.FeatureCollection
  id: FeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  children:
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.Get``1
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.GetEnumerator
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.IsReadOnly
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.Item(System.Type)
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.Revision
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.Set``1(``0)
  - Microsoft.AspNetCore.Http.Features.FeatureCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: FeatureCollection
  nameWithType: FeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FeatureCollection
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: 'public class FeatureCollection : IFeatureCollection, IEnumerable<KeyValuePair<Type, object>>, IEnumerable'
    content.vb: >-
      Public Class FeatureCollection
          Implements IFeatureCollection, IEnumerable(Of KeyValuePair(Of Type, Object)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: FeatureCollection()
  nameWithType: FeatureCollection.FeatureCollection()
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.FeatureCollection()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public FeatureCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  id: '#ctor(Microsoft.AspNetCore.Http.Features.IFeatureCollection)'
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: FeatureCollection(IFeatureCollection)
  nameWithType: FeatureCollection.FeatureCollection(IFeatureCollection)
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.FeatureCollection(Microsoft.AspNetCore.Http.Features.IFeatureCollection)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public FeatureCollection(IFeatureCollection defaults)
    content.vb: Public Sub New(defaults As IFeatureCollection)
    parameters:
    - id: defaults
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.Revision
  commentId: P:Microsoft.AspNetCore.Http.Features.FeatureCollection.Revision
  id: Revision
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: Revision
  nameWithType: FeatureCollection.Revision
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.Revision
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Revision
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public virtual int Revision { get; }
    content.vb: Public Overridable ReadOnly Property Revision As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection.Revision
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.IsReadOnly
  commentId: P:Microsoft.AspNetCore.Http.Features.FeatureCollection.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: FeatureCollection.IsReadOnly
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsReadOnly
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.Item(System.Type)
  commentId: P:Microsoft.AspNetCore.Http.Features.FeatureCollection.Item(System.Type)
  id: Item(System.Type)
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: Item[Type]
  nameWithType: FeatureCollection.Item[Type]
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.Item[System.Type]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public object this[Type key] { get; set; }
    content.vb: Public Property Item(key As Type) As Object
    parameters:
    - id: key
      type: System.Type
    return:
      type: System.Object
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
  nameWithType.vb: FeatureCollection.Item(Type)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Features.FeatureCollection.Item(System.Type)
  name.vb: Item(Type)
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: FeatureCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: FeatureCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: FeatureCollection.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public IEnumerator<KeyValuePair<Type, object>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of Type, Object))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.Get``1
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.Get``1
  id: Get``1
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: Get<TFeature>()
  nameWithType: FeatureCollection.Get<TFeature>()
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.Get<TFeature>()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Get
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public TFeature Get<TFeature>()
    content.vb: Public Function Get(Of TFeature) As TFeature
    typeParameters:
    - id: TFeature
    return:
      type: '{TFeature}'
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
  nameWithType.vb: FeatureCollection.Get(Of TFeature)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Features.FeatureCollection.Get(Of TFeature)()
  name.vb: Get(Of TFeature)()
- uid: Microsoft.AspNetCore.Http.Features.FeatureCollection.Set``1(``0)
  commentId: M:Microsoft.AspNetCore.Http.Features.FeatureCollection.Set``1(``0)
  id: Set``1(``0)
  parent: Microsoft.AspNetCore.Http.Features.FeatureCollection
  langs:
  - csharp
  - vb
  name: Set<TFeature>(TFeature)
  nameWithType: FeatureCollection.Set<TFeature>(TFeature)
  fullName: Microsoft.AspNetCore.Http.Features.FeatureCollection.Set<TFeature>(TFeature)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Set
    path: src/Microsoft.AspNetCore.Http.Features/FeatureCollection.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Http.Features
  namespace: Microsoft.AspNetCore.Http.Features
  syntax:
    content: public void Set<TFeature>(TFeature instance)
    content.vb: Public Sub Set(Of TFeature)(instance As TFeature)
    parameters:
    - id: instance
      type: '{TFeature}'
    typeParameters:
    - id: TFeature
  implements:
  - Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1({TFeature})
  nameWithType.vb: FeatureCollection.Set(Of TFeature)(TFeature)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Features.FeatureCollection.Set(Of TFeature)(TFeature)
  name.vb: Set(Of TFeature)(TFeature)
references:
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.IFeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Object>>
  nameWithType: IEnumerable<KeyValuePair<Type, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Object))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Revision
  commentId: P:Microsoft.AspNetCore.Http.Features.IFeatureCollection.Revision
  parent: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  isExternal: false
  name: Revision
  nameWithType: IFeatureCollection.Revision
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Revision
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.IsReadOnly
  commentId: P:Microsoft.AspNetCore.Http.Features.IFeatureCollection.IsReadOnly
  parent: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: IFeatureCollection.IsReadOnly
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
  commentId: P:Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
  parent: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  isExternal: true
  name: Item[Type]
  nameWithType: IFeatureCollection.Item[Type]
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item[System.Type]
  nameWithType.vb: IFeatureCollection.Item(Type)
  fullname.vb: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
  name.vb: Item(Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
    name: Item
    nameWithType: IFeatureCollection.Item
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item(System.Type)
    name: Item
    nameWithType: IFeatureCollection.Item
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Object>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Object>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Object)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Object)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Object>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Object>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Object)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Object)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<Type, Object>>
  nameWithType: IEnumerator<KeyValuePair<Type, Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type, System.Object>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Type, Object))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Object))
  name.vb: IEnumerator(Of KeyValuePair(Of Type, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
  commentId: M:Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
  parent: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  definition: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
  name: Get<TFeature>()
  nameWithType: IFeatureCollection.Get<TFeature>()
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get<TFeature>()
  nameWithType.vb: IFeatureCollection.Get(Of TFeature)()
  fullname.vb: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get(Of TFeature)()
  name.vb: Get(Of TFeature)()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
    name: Get<TFeature>
    nameWithType: IFeatureCollection.Get<TFeature>
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get<TFeature>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get``1
    name: Get(Of TFeature)
    nameWithType: IFeatureCollection.Get(Of TFeature)
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Get(Of TFeature)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TFeature}'
  commentId: '!:TFeature'
  definition: TFeature
  name: TFeature
  nameWithType: TFeature
  fullName: TFeature
- uid: TFeature
  isExternal: false
  name: TFeature
  nameWithType: TFeature
  fullName: TFeature
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1({TFeature})
  commentId: M:Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
  parent: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  definition: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
  name: Set<TFeature>(TFeature)
  nameWithType: IFeatureCollection.Set<TFeature>(TFeature)
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<TFeature>(TFeature)
  nameWithType.vb: IFeatureCollection.Set(Of TFeature)(TFeature)
  fullname.vb: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set(Of TFeature)(TFeature)
  name.vb: Set(Of TFeature)(TFeature)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
    name: Set<TFeature>
    nameWithType: IFeatureCollection.Set<TFeature>
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<TFeature>
  - name: (
    nameWithType: (
    fullName: (
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
    name: Set(Of TFeature)
    nameWithType: IFeatureCollection.Set(Of TFeature)
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set(Of TFeature)
  - name: (
    nameWithType: (
    fullName: (
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
  commentId: M:Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
  isExternal: false
  name: Set<TFeature>(TFeature)
  nameWithType: IFeatureCollection.Set<TFeature>(TFeature)
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<TFeature>(TFeature)
  nameWithType.vb: IFeatureCollection.Set(Of TFeature)(TFeature)
  fullname.vb: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set(Of TFeature)(TFeature)
  name.vb: Set(Of TFeature)(TFeature)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
    name: Set<TFeature>
    nameWithType: IFeatureCollection.Set<TFeature>
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set<TFeature>
  - name: (
    nameWithType: (
    fullName: (
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set``1(``0)
    name: Set(Of TFeature)
    nameWithType: IFeatureCollection.Set(Of TFeature)
    fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection.Set(Of TFeature)
  - name: (
    nameWithType: (
    fullName: (
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: )
    nameWithType: )
    fullName: )
