### YamlMime:ManagedReference
items:
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.RangeHeaderValue
  id: RangeHeaderValue
  parent: Microsoft.Net.Http.Headers
  children:
  - Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor
  - Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  - Microsoft.Net.Http.Headers.RangeHeaderValue.GetHashCode
  - Microsoft.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  - Microsoft.Net.Http.Headers.RangeHeaderValue.Ranges
  - Microsoft.Net.Http.Headers.RangeHeaderValue.ToString
  - Microsoft.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.RangeHeaderValue@)
  - Microsoft.Net.Http.Headers.RangeHeaderValue.Unit
  langs:
  - csharp
  - vb
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue
  type: Class
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RangeHeaderValue
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 10
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public class RangeHeaderValue
    content.vb: Public Class RangeHeaderValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor
  id: '#ctor'
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: RangeHeaderValue()
  nameWithType: RangeHeaderValue.RangeHeaderValue()
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 18
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public RangeHeaderValue()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: RangeHeaderValue(Nullable<Int64>, Nullable<Int64>)
  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 23
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public RangeHeaderValue(long ? from, long ? to)
    content.vb: Public Sub New(from As Long?, to As Long?)
    parameters:
    - id: from
      type: System.Nullable{System.Int64}
    - id: to
      type: System.Nullable{System.Int64}
  nameWithType.vb: RangeHeaderValue.RangeHeaderValue(Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: RangeHeaderValue(Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.Unit
  commentId: P:Microsoft.Net.Http.Headers.RangeHeaderValue.Unit
  id: Unit
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: RangeHeaderValue.Unit
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.Unit
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Unit
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 30
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public string Unit { get; set; }
    content.vb: Public Property Unit As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.Ranges
  commentId: P:Microsoft.Net.Http.Headers.RangeHeaderValue.Ranges
  id: Ranges
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.Ranges
  type: Property
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Ranges
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 40
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public ICollection<RangeItemHeaderValue> Ranges { get; }
    content.vb: Public ReadOnly Property Ranges As ICollection(Of RangeItemHeaderValue)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Net.Http.Headers.RangeItemHeaderValue}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.ToString
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.ToString
  id: ToString
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RangeHeaderValue.ToString()
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 52
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RangeHeaderValue.Equals(Object)
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 77
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.GetHashCode
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.GetHashCode
  id: GetHashCode
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RangeHeaderValue.GetHashCode()
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 90
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: RangeHeaderValue.Parse(String)
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Parse
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 102
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static RangeHeaderValue Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As RangeHeaderValue
    parameters:
    - id: input
      type: System.String
    return:
      type: Microsoft.Net.Http.Headers.RangeHeaderValue
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.RangeHeaderValue@)
  commentId: M:Microsoft.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,Microsoft.Net.Http.Headers.RangeHeaderValue@)
  id: TryParse(System.String,Microsoft.Net.Http.Headers.RangeHeaderValue@)
  parent: Microsoft.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out RangeHeaderValue)
  nameWithType: RangeHeaderValue.TryParse(String, out RangeHeaderValue)
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue.TryParse(System.String, out Microsoft.Net.Http.Headers.RangeHeaderValue)
  type: Method
  source:
    remote:
      path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryParse
    path: src/Microsoft.Net.Http.Headers/RangeHeaderValue.cs
    startLine: 108
  assemblies:
  - Microsoft.Net.Http.Headers
  namespace: Microsoft.Net.Http.Headers
  syntax:
    content: public static bool TryParse(string input, out RangeHeaderValue parsedValue)
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As RangeHeaderValue) As Boolean
    parameters:
    - id: input
      type: System.String
    - id: parsedValue
      type: Microsoft.Net.Http.Headers.RangeHeaderValue
    return:
      type: System.Boolean
  nameWithType.vb: RangeHeaderValue.TryParse(String, ByRef RangeHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Net.Http.Headers.RangeHeaderValue.TryParse(System.String, ByRef Microsoft.Net.Http.Headers.RangeHeaderValue)
  name.vb: TryParse(String, ByRef RangeHeaderValue)
references:
- uid: Microsoft.Net.Http.Headers
  commentId: N:Microsoft.Net.Http.Headers
  isExternal: false
  name: Microsoft.Net.Http.Headers
  nameWithType: Microsoft.Net.Http.Headers
  fullName: Microsoft.Net.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{Microsoft.Net.Http.Headers.RangeItemHeaderValue}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Net.Http.Headers.RangeItemHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<RangeItemHeaderValue>
  nameWithType: ICollection<RangeItemHeaderValue>
  fullName: System.Collections.Generic.ICollection<Microsoft.Net.Http.Headers.RangeItemHeaderValue>
  nameWithType.vb: ICollection(Of RangeItemHeaderValue)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Net.Http.Headers.RangeItemHeaderValue)
  name.vb: ICollection(Of RangeItemHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Net.Http.Headers.RangeItemHeaderValue
    name: RangeItemHeaderValue
    nameWithType: RangeItemHeaderValue
    fullName: Microsoft.Net.Http.Headers.RangeItemHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Net.Http.Headers.RangeItemHeaderValue
    name: RangeItemHeaderValue
    nameWithType: RangeItemHeaderValue
    fullName: Microsoft.Net.Http.Headers.RangeItemHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Net.Http.Headers.RangeHeaderValue
  commentId: T:Microsoft.Net.Http.Headers.RangeHeaderValue
  parent: Microsoft.Net.Http.Headers
  isExternal: false
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: Microsoft.Net.Http.Headers.RangeHeaderValue
