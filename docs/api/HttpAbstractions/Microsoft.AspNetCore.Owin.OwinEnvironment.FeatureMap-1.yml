### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  commentId: T:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  id: OwinEnvironment.FeatureMap`1
  parent: Microsoft.AspNetCore.Owin
  children:
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object})
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Action{`0,System.Object})
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object})
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object})
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object},System.Func{`0})
  langs:
  - csharp
  - vb
  name: OwinEnvironment.FeatureMap<TFeature>
  nameWithType: OwinEnvironment.FeatureMap<TFeature>
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FeatureMap
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 368
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: 'public class FeatureMap<TFeature> : OwinEnvironment.FeatureMap'
    content.vb: >-
      Public Class FeatureMap(Of TFeature)
          Inherits OwinEnvironment.FeatureMap
    typeParameters:
    - id: TFeature
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap
  inheritedMembers:
  - Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap.CanSet
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature)
  name.vb: OwinEnvironment.FeatureMap(Of TFeature)
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object})
  commentId: M:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object})
  id: '#ctor(System.Func{`0,System.Object})'
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  langs:
  - csharp
  - vb
  name: FeatureMap(Func<TFeature, Object>)
  nameWithType: OwinEnvironment.FeatureMap<TFeature>.FeatureMap(Func<TFeature, Object>)
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>.FeatureMap(System.Func<TFeature, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 370
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public FeatureMap(Func<TFeature, object> getter)
    content.vb: Public Sub New(getter As Func(Of TFeature, Object))
    parameters:
    - id: getter
      type: System.Func{{TFeature},System.Object}
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(Func(Of TFeature, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(System.Func(Of TFeature, System.Object))
  name.vb: FeatureMap(Func(Of TFeature, Object))
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object})
  commentId: M:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object})
  id: '#ctor(System.Func{`0,System.Object},System.Func{System.Object})'
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  langs:
  - csharp
  - vb
  name: FeatureMap(Func<TFeature, Object>, Func<Object>)
  nameWithType: OwinEnvironment.FeatureMap<TFeature>.FeatureMap(Func<TFeature, Object>, Func<Object>)
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>.FeatureMap(System.Func<TFeature, System.Object>, System.Func<System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 375
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public FeatureMap(Func<TFeature, object> getter, Func<object> defaultFactory)
    content.vb: Public Sub New(getter As Func(Of TFeature, Object), defaultFactory As Func(Of Object))
    parameters:
    - id: getter
      type: System.Func{{TFeature},System.Object}
    - id: defaultFactory
      type: System.Func{System.Object}
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(Func(Of TFeature, Object), Func(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(System.Func(Of TFeature, System.Object), System.Func(Of System.Object))
  name.vb: FeatureMap(Func(Of TFeature, Object), Func(Of Object))
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Action{`0,System.Object})
  commentId: M:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Action{`0,System.Object})
  id: '#ctor(System.Func{`0,System.Object},System.Action{`0,System.Object})'
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  langs:
  - csharp
  - vb
  name: FeatureMap(Func<TFeature, Object>, Action<TFeature, Object>)
  nameWithType: OwinEnvironment.FeatureMap<TFeature>.FeatureMap(Func<TFeature, Object>, Action<TFeature, Object>)
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>.FeatureMap(System.Func<TFeature, System.Object>, System.Action<TFeature, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 380
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public FeatureMap(Func<TFeature, object> getter, Action<TFeature, object> setter)
    content.vb: Public Sub New(getter As Func(Of TFeature, Object), setter As Action(Of TFeature, Object))
    parameters:
    - id: getter
      type: System.Func{{TFeature},System.Object}
    - id: setter
      type: System.Action{{TFeature},System.Object}
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(Func(Of TFeature, Object), Action(Of TFeature, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(System.Func(Of TFeature, System.Object), System.Action(Of TFeature, System.Object))
  name.vb: FeatureMap(Func(Of TFeature, Object), Action(Of TFeature, Object))
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object})
  commentId: M:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object})
  id: '#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object})'
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  langs:
  - csharp
  - vb
  name: FeatureMap(Func<TFeature, Object>, Func<Object>, Action<TFeature, Object>)
  nameWithType: OwinEnvironment.FeatureMap<TFeature>.FeatureMap(Func<TFeature, Object>, Func<Object>, Action<TFeature, Object>)
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>.FeatureMap(System.Func<TFeature, System.Object>, System.Func<System.Object>, System.Action<TFeature, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 385
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public FeatureMap(Func<TFeature, object> getter, Func<object> defaultFactory, Action<TFeature, object> setter)
    content.vb: Public Sub New(getter As Func(Of TFeature, Object), defaultFactory As Func(Of Object), setter As Action(Of TFeature, Object))
    parameters:
    - id: getter
      type: System.Func{{TFeature},System.Object}
    - id: defaultFactory
      type: System.Func{System.Object}
    - id: setter
      type: System.Action{{TFeature},System.Object}
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(Func(Of TFeature, Object), Func(Of Object), Action(Of TFeature, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(System.Func(Of TFeature, System.Object), System.Func(Of System.Object), System.Action(Of TFeature, System.Object))
  name.vb: FeatureMap(Func(Of TFeature, Object), Func(Of Object), Action(Of TFeature, Object))
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object},System.Func{`0})
  commentId: M:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1.#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object},System.Func{`0})
  id: '#ctor(System.Func{`0,System.Object},System.Func{System.Object},System.Action{`0,System.Object},System.Func{`0})'
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap`1
  langs:
  - csharp
  - vb
  name: FeatureMap(Func<TFeature, Object>, Func<Object>, Action<TFeature, Object>, Func<TFeature>)
  nameWithType: OwinEnvironment.FeatureMap<TFeature>.FeatureMap(Func<TFeature, Object>, Func<Object>, Action<TFeature, Object>, Func<TFeature>)
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap<TFeature>.FeatureMap(System.Func<TFeature, System.Object>, System.Func<System.Object>, System.Action<TFeature, System.Object>, System.Func<TFeature>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/OwinEnvironment.cs
    startLine: 390
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public FeatureMap(Func<TFeature, object> getter, Func<object> defaultFactory, Action<TFeature, object> setter, Func<TFeature> featureFactory)
    content.vb: Public Sub New(getter As Func(Of TFeature, Object), defaultFactory As Func(Of Object), setter As Action(Of TFeature, Object), featureFactory As Func(Of TFeature))
    parameters:
    - id: getter
      type: System.Func{{TFeature},System.Object}
    - id: defaultFactory
      type: System.Func{System.Object}
    - id: setter
      type: System.Action{{TFeature},System.Object}
    - id: featureFactory
      type: System.Func{{TFeature}}
  nameWithType.vb: OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(Func(Of TFeature, Object), Func(Of Object), Action(Of TFeature, Object), Func(Of TFeature))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap(Of TFeature).FeatureMap(System.Func(Of TFeature, System.Object), System.Func(Of System.Object), System.Action(Of TFeature, System.Object), System.Func(Of TFeature))
  name.vb: FeatureMap(Func(Of TFeature, Object), Func(Of Object), Action(Of TFeature, Object), Func(Of TFeature))
references:
- uid: Microsoft.AspNetCore.Owin
  commentId: N:Microsoft.AspNetCore.Owin
  isExternal: false
  name: Microsoft.AspNetCore.Owin
  nameWithType: Microsoft.AspNetCore.Owin
  fullName: Microsoft.AspNetCore.Owin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap
  commentId: T:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap
  parent: Microsoft.AspNetCore.Owin
  isExternal: false
  name: OwinEnvironment.FeatureMap
  nameWithType: OwinEnvironment.FeatureMap
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap
- uid: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap.CanSet
  commentId: P:Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap.CanSet
  parent: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap
  isExternal: false
  name: CanSet
  nameWithType: OwinEnvironment.FeatureMap.CanSet
  fullName: Microsoft.AspNetCore.Owin.OwinEnvironment.FeatureMap.CanSet
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{{TFeature},System.Object}
  commentId: T:System.Func{`0,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<TFeature, Object>
  nameWithType: Func<TFeature, Object>
  fullName: System.Func<TFeature, System.Object>
  nameWithType.vb: Func(Of TFeature, Object)
  fullname.vb: System.Func(Of TFeature, System.Object)
  name.vb: Func(Of TFeature, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  nameWithType.vb: Func(Of Object)
  fullname.vb: System.Func(Of System.Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{TFeature},System.Object}
  commentId: T:System.Action{`0,System.Object}
  parent: System
  definition: System.Action`2
  name: Action<TFeature, Object>
  nameWithType: Action<TFeature, Object>
  fullName: System.Action<TFeature, System.Object>
  nameWithType.vb: Action(Of TFeature, Object)
  fullname.vb: System.Action(Of TFeature, System.Object)
  name.vb: Action(Of TFeature, Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TFeature}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<TFeature>
  nameWithType: Func<TFeature>
  fullName: System.Func<TFeature>
  nameWithType.vb: Func(Of TFeature)
  fullname.vb: System.Func(Of TFeature)
  name.vb: Func(Of TFeature)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFeature
    nameWithType: TFeature
    fullName: TFeature
  - name: )
    nameWithType: )
    fullName: )
