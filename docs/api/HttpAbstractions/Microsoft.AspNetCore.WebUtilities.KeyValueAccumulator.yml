### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  commentId: T:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  id: KeyValueAccumulator
  parent: Microsoft.AspNetCore.WebUtilities
  children:
  - Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.Append(System.String,System.String)
  - Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.GetResults
  - Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.HasValues
  - Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.KeyCount
  - Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.ValueCount
  langs:
  - csharp
  - vb
  name: KeyValueAccumulator
  nameWithType: KeyValueAccumulator
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: KeyValueAccumulator
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public struct KeyValueAccumulator
    content.vb: Public Structure KeyValueAccumulator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.Append(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.Append(System.String,System.String)
  id: Append(System.String,System.String)
  parent: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  langs:
  - csharp
  - vb
  name: Append(String, String)
  nameWithType: KeyValueAccumulator.Append(String, String)
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.Append(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Append
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public void Append(string key, string value)
    content.vb: Public Sub Append(key As String, value As String)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.HasValues
  commentId: P:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.HasValues
  id: HasValues
  parent: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  langs:
  - csharp
  - vb
  name: HasValues
  nameWithType: KeyValueAccumulator.HasValues
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.HasValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HasValues
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public bool HasValues { get; }
    content.vb: Public ReadOnly Property HasValues As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.KeyCount
  commentId: P:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.KeyCount
  id: KeyCount
  parent: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  langs:
  - csharp
  - vb
  name: KeyCount
  nameWithType: KeyValueAccumulator.KeyCount
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.KeyCount
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: KeyCount
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public int KeyCount { get; }
    content.vb: Public ReadOnly Property KeyCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.ValueCount
  commentId: P:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.ValueCount
  id: ValueCount
  parent: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  langs:
  - csharp
  - vb
  name: ValueCount
  nameWithType: KeyValueAccumulator.ValueCount
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.ValueCount
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ValueCount
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public int ValueCount { get; }
    content.vb: Public ReadOnly Property ValueCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.GetResults
  commentId: M:Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.GetResults
  id: GetResults
  parent: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator
  langs:
  - csharp
  - vb
  name: GetResults()
  nameWithType: KeyValueAccumulator.GetResults()
  fullName: Microsoft.AspNetCore.WebUtilities.KeyValueAccumulator.GetResults()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetResults
    path: src/Microsoft.AspNetCore.WebUtilities/KeyValueAccumulator.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public Dictionary<string, StringValues> GetResults()
    content.vb: Public Function GetResults As Dictionary(Of String, StringValues)
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
