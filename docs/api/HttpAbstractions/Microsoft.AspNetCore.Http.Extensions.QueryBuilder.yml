### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  commentId: T:Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  id: QueryBuilder
  parent: Microsoft.AspNetCore.Http.Extensions
  children:
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.String)
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Equals(System.Object)
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetEnumerator
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetHashCode
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToQueryString
  - Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToString
  langs:
  - csharp
  - vb
  name: QueryBuilder
  nameWithType: QueryBuilder
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: QueryBuilder
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: 'public class QueryBuilder : IEnumerable<KeyValuePair<string, string>>, IEnumerable'
    content.vb: >-
      Public Class QueryBuilder
          Implements IEnumerable(Of KeyValuePair(Of String, String)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: QueryBuilder()
  nameWithType: QueryBuilder.QueryBuilder()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.QueryBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public QueryBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})'
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: QueryBuilder(IEnumerable<KeyValuePair<String, String>>)
  nameWithType: QueryBuilder.QueryBuilder(IEnumerable<KeyValuePair<String, String>>)
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.QueryBuilder(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public QueryBuilder(IEnumerable<KeyValuePair<string, string>> parameters)
    content.vb: Public Sub New(parameters As IEnumerable(Of KeyValuePair(Of String, String)))
    parameters:
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  nameWithType.vb: QueryBuilder.QueryBuilder(IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.QueryBuilder(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: QueryBuilder(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: Add(String, IEnumerable<String>)
  nameWithType: QueryBuilder.Add(String, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public void Add(string key, IEnumerable<string> values)
    content.vb: Public Sub Add(key As String, values As IEnumerable(Of String))
    parameters:
    - id: key
      type: System.String
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
  nameWithType.vb: QueryBuilder.Add(String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Add(String, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: Add(String, String)
  nameWithType: QueryBuilder.Add(String, String)
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Add
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public void Add(string key, string value)
    content.vb: Public Sub Add(key As String, value As String)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToString
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: QueryBuilder.ToString()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToQueryString
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToQueryString
  id: ToQueryString
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: ToQueryString()
  nameWithType: QueryBuilder.ToQueryString()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.ToQueryString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToQueryString
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public QueryString ToQueryString()
    content.vb: Public Function ToQueryString As QueryString
    return:
      type: Microsoft.AspNetCore.Http.QueryString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetHashCode
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: QueryBuilder.GetHashCode()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: QueryBuilder.Equals(Object)
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: QueryBuilder.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: public IEnumerator<KeyValuePair<string, string>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Extensions.QueryBuilder.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.Extensions.QueryBuilder
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: QueryBuilder.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Extensions.QueryBuilder.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Http.Extensions/QueryBuilder.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: QueryBuilder.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Http.Extensions
  commentId: N:Microsoft.AspNetCore.Http.Extensions
  isExternal: false
  name: Microsoft.AspNetCore.Http.Extensions
  nameWithType: Microsoft.AspNetCore.Http.Extensions
  fullName: Microsoft.AspNetCore.Http.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.QueryString
  commentId: T:Microsoft.AspNetCore.Http.QueryString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: QueryString
  nameWithType: QueryString
  fullName: Microsoft.AspNetCore.Http.QueryString
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, String>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, String>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, String)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, String>>
  nameWithType: IEnumerator<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, String))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerator(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
