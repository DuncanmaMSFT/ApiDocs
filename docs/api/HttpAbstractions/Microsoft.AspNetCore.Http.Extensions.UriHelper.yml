### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper
  commentId: T:Microsoft.AspNetCore.Http.Extensions.UriHelper
  id: UriHelper
  parent: Microsoft.AspNetCore.Http.Extensions
  children:
  - Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildAbsolute(System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  - Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildRelative(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  - Microsoft.AspNetCore.Http.Extensions.UriHelper.Encode(System.Uri)
  - Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)
  - Microsoft.AspNetCore.Http.Extensions.UriHelper.GetEncodedUrl(Microsoft.AspNetCore.Http.HttpRequest)
  langs:
  - csharp
  - vb
  name: UriHelper
  nameWithType: UriHelper
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UriHelper
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nA helper class for constructing encoded Uris for use in headers and other Uris.\n"
  example: []
  syntax:
    content: public static class UriHelper
    content.vb: Public Module UriHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildRelative(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildRelative(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  id: BuildRelative(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  parent: Microsoft.AspNetCore.Http.Extensions.UriHelper
  langs:
  - csharp
  - vb
  name: BuildRelative(PathString, PathString, QueryString, FragmentString)
  nameWithType: UriHelper.BuildRelative(PathString, PathString, QueryString, FragmentString)
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildRelative(Microsoft.AspNetCore.Http.PathString, Microsoft.AspNetCore.Http.PathString, Microsoft.AspNetCore.Http.QueryString, Microsoft.AspNetCore.Http.FragmentString)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: BuildRelative
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nCombines the given URI components into a string that is properly encoded for use in HTTP headers.\n"
  example: []
  syntax:
    content: public static string BuildRelative(PathString pathBase = null, PathString path = null, QueryString query = null, FragmentString fragment = null)
    content.vb: Public Shared Function BuildRelative(pathBase As PathString = Nothing, path As PathString = Nothing, query As QueryString = Nothing, fragment As FragmentString = Nothing) As String
    parameters:
    - id: pathBase
      type: Microsoft.AspNetCore.Http.PathString
      description: The first portion of the request path associated with application root.
    - id: path
      type: Microsoft.AspNetCore.Http.PathString
      description: The portion of the request path that identifies the requested resource.
    - id: query
      type: Microsoft.AspNetCore.Http.QueryString
      description: The query, if any.
    - id: fragment
      type: Microsoft.AspNetCore.Http.FragmentString
      description: The fragment, if any.
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildAbsolute(System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildAbsolute(System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  id: BuildAbsolute(System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.QueryString,Microsoft.AspNetCore.Http.FragmentString)
  parent: Microsoft.AspNetCore.Http.Extensions.UriHelper
  langs:
  - csharp
  - vb
  name: BuildAbsolute(String, HostString, PathString, PathString, QueryString, FragmentString)
  nameWithType: UriHelper.BuildAbsolute(String, HostString, PathString, PathString, QueryString, FragmentString)
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper.BuildAbsolute(System.String, Microsoft.AspNetCore.Http.HostString, Microsoft.AspNetCore.Http.PathString, Microsoft.AspNetCore.Http.PathString, Microsoft.AspNetCore.Http.QueryString, Microsoft.AspNetCore.Http.FragmentString)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: BuildAbsolute
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nCombines the given URI components into a string that is properly encoded for use in HTTP headers.\nNote that unicode in the HostString will be encoded as punycode.\n"
  example: []
  syntax:
    content: public static string BuildAbsolute(string scheme, HostString host, PathString pathBase = null, PathString path = null, QueryString query = null, FragmentString fragment = null)
    content.vb: Public Shared Function BuildAbsolute(scheme As String, host As HostString, pathBase As PathString = Nothing, path As PathString = Nothing, query As QueryString = Nothing, fragment As FragmentString = Nothing) As String
    parameters:
    - id: scheme
      type: System.String
      description: http, https, etc.
    - id: host
      type: Microsoft.AspNetCore.Http.HostString
      description: The host portion of the uri normally included in the Host header. This may include the port.
    - id: pathBase
      type: Microsoft.AspNetCore.Http.PathString
      description: The first portion of the request path associated with application root.
    - id: path
      type: Microsoft.AspNetCore.Http.PathString
      description: The portion of the request path that identifies the requested resource.
    - id: query
      type: Microsoft.AspNetCore.Http.QueryString
      description: The query, if any.
    - id: fragment
      type: Microsoft.AspNetCore.Http.FragmentString
      description: The fragment, if any.
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper.Encode(System.Uri)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.UriHelper.Encode(System.Uri)
  id: Encode(System.Uri)
  parent: Microsoft.AspNetCore.Http.Extensions.UriHelper
  langs:
  - csharp
  - vb
  name: Encode(Uri)
  nameWithType: UriHelper.Encode(Uri)
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper.Encode(System.Uri)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Encode
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nGenerates a string from the given absolute or relative Uri that is appropriately encoded for use in\nHTTP headers. Note that a unicode host name will be encoded as punycode.\n"
  example: []
  syntax:
    content: public static string Encode(Uri uri)
    content.vb: Public Shared Function Encode(uri As Uri) As String
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri to encode.
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper.GetEncodedUrl(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.UriHelper.GetEncodedUrl(Microsoft.AspNetCore.Http.HttpRequest)
  id: GetEncodedUrl(Microsoft.AspNetCore.Http.HttpRequest)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.Extensions.UriHelper
  langs:
  - csharp
  - vb
  name: GetEncodedUrl(HttpRequest)
  nameWithType: UriHelper.GetEncodedUrl(HttpRequest)
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper.GetEncodedUrl(Microsoft.AspNetCore.Http.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEncodedUrl
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 101
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nReturns the combined components of the request URL in a fully escaped form suitable for use in HTTP headers\nand other HTTP operations.\n"
  example: []
  syntax:
    content: public static string GetEncodedUrl(this HttpRequest request)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEncodedUrl(request As HttpRequest) As String
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
      description: The request to assemble the uri pieces from.
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)
  id: GetDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.Extensions.UriHelper
  langs:
  - csharp
  - vb
  name: GetDisplayUrl(HttpRequest)
  nameWithType: UriHelper.GetDisplayUrl(HttpRequest)
  fullName: Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetDisplayUrl
    path: src/Microsoft.AspNetCore.Http.Extensions/UriHelper.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http.Extensions
  summary: "\nReturns the combined components of the request URL in a fully un-escaped form (except for the QueryString)\nsuitable only for display. This format should not be used in HTTP headers or other HTTP operations.\n"
  example: []
  syntax:
    content: public static string GetDisplayUrl(this HttpRequest request)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDisplayUrl(request As HttpRequest) As String
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
      description: The request to assemble the uri pieces from.
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Http.Extensions
  commentId: N:Microsoft.AspNetCore.Http.Extensions
  isExternal: false
  name: Microsoft.AspNetCore.Http.Extensions
  nameWithType: Microsoft.AspNetCore.Http.Extensions
  fullName: Microsoft.AspNetCore.Http.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.AspNetCore.Http.QueryString
  commentId: T:Microsoft.AspNetCore.Http.QueryString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: QueryString
  nameWithType: QueryString
  fullName: Microsoft.AspNetCore.Http.QueryString
- uid: Microsoft.AspNetCore.Http.FragmentString
  commentId: T:Microsoft.AspNetCore.Http.FragmentString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: FragmentString
  nameWithType: FragmentString
  fullName: Microsoft.AspNetCore.Http.FragmentString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HostString
  commentId: T:Microsoft.AspNetCore.Http.HostString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HostString
  nameWithType: HostString
  fullName: Microsoft.AspNetCore.Http.HostString
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
