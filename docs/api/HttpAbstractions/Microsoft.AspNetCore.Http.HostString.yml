### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.HostString
  commentId: T:Microsoft.AspNetCore.Http.HostString
  id: HostString
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.HostString.#ctor(System.String)
  - Microsoft.AspNetCore.Http.HostString.#ctor(System.String,System.Int32)
  - Microsoft.AspNetCore.Http.HostString.Equals(Microsoft.AspNetCore.Http.HostString)
  - Microsoft.AspNetCore.Http.HostString.Equals(System.Object)
  - Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.String)
  - Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.Uri)
  - Microsoft.AspNetCore.Http.HostString.GetHashCode
  - Microsoft.AspNetCore.Http.HostString.HasValue
  - Microsoft.AspNetCore.Http.HostString.Host
  - Microsoft.AspNetCore.Http.HostString.op_Equality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  - Microsoft.AspNetCore.Http.HostString.op_Inequality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  - Microsoft.AspNetCore.Http.HostString.Port
  - Microsoft.AspNetCore.Http.HostString.ToString
  - Microsoft.AspNetCore.Http.HostString.ToUriComponent
  - Microsoft.AspNetCore.Http.HostString.Value
  langs:
  - csharp
  - vb
  name: HostString
  nameWithType: HostString
  fullName: Microsoft.AspNetCore.Http.HostString
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HostString
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nRepresents the host portion of a URI can be used to construct URI's properly formatted and encoded for use in\nHTTP headers.\n"
  example: []
  syntax:
    content: 'public struct HostString : IEquatable<HostString>'
    content.vb: >-
      Public Structure HostString
          Implements IEquatable(Of HostString)
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Http.HostString}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Http.HostString.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HostString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: HostString(String)
  nameWithType: HostString.HostString(String)
  fullName: Microsoft.AspNetCore.Http.HostString.HostString(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCreates a new HostString without modification. The value should be Unicode rather than punycode, and may have a port.\nIPv4 and IPv6 addresses are also allowed, and also may have ports.\n"
  example: []
  syntax:
    content: public HostString(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HostString.#ctor(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.HostString.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: HostString(String, Int32)
  nameWithType: HostString.HostString(String, Int32)
  fullName: Microsoft.AspNetCore.Http.HostString.HostString(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCreates a new HostString from its host and port parts.\n"
  example: []
  syntax:
    content: public HostString(string host, int port)
    content.vb: Public Sub New(host As String, port As Integer)
    parameters:
    - id: host
      type: System.String
      description: The value should be Unicode rather than punycode. IPv6 addresses must use square braces.
    - id: port
      type: System.Int32
      description: A positive, greater than 0 value representing the port in the host string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HostString.Value
  commentId: P:Microsoft.AspNetCore.Http.HostString.Value
  id: Value
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: HostString.Value
  fullName: Microsoft.AspNetCore.Http.HostString.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Value
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns the original value from the constructor.\n"
  example: []
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HostString.HasValue
  commentId: P:Microsoft.AspNetCore.Http.HostString.HasValue
  id: HasValue
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: HostString.HasValue
  fullName: Microsoft.AspNetCore.Http.HostString.HasValue
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HasValue
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public bool HasValue { get; }
    content.vb: Public ReadOnly Property HasValue As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HostString.Host
  commentId: P:Microsoft.AspNetCore.Http.HostString.Host
  id: Host
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: HostString.Host
  fullName: Microsoft.AspNetCore.Http.HostString.Host
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Host
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns the value of the host part of the value. The port is removed if it was present.\nIPv6 addresses will have brackets added if they are missing.\n"
  example: []
  syntax:
    content: public string Host { get; }
    content.vb: Public ReadOnly Property Host As String
    parameters: []
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HostString.Port
  commentId: P:Microsoft.AspNetCore.Http.HostString.Port
  id: Port
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: HostString.Port
  fullName: Microsoft.AspNetCore.Http.HostString.Port
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Port
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns the value of the port part of the host, or <returns>null</returns> if none is found.\n"
  example: []
  syntax:
    content: public int ? Port { get; }
    content.vb: Public ReadOnly Property Port As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: ''
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HostString.ToString
  commentId: M:Microsoft.AspNetCore.Http.HostString.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HostString.ToString()
  fullName: Microsoft.AspNetCore.Http.HostString.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToString
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns the value as normalized by ToUriComponent().\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: ''
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.HostString.ToUriComponent
  commentId: M:Microsoft.AspNetCore.Http.HostString.ToUriComponent
  id: ToUriComponent
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: ToUriComponent()
  nameWithType: HostString.ToUriComponent()
  fullName: Microsoft.AspNetCore.Http.HostString.ToUriComponent()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ToUriComponent
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 118
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nReturns the value properly formatted and encoded for use in a URI in a HTTP header.\nAny Unicode is converted to punycode. IPv6 addresses will have brackets added if they are missing.\n"
  example: []
  syntax:
    content: public string ToUriComponent()
    content.vb: Public Function ToUriComponent As String
    return:
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.String)
  commentId: M:Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.String)
  id: FromUriComponent(System.String)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: FromUriComponent(String)
  nameWithType: HostString.FromUriComponent(String)
  fullName: Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FromUriComponent
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCreates a new HostString from the given URI component.\nAny punycode will be converted to Unicode.\n"
  example: []
  syntax:
    content: public static HostString FromUriComponent(string uriComponent)
    content.vb: Public Shared Function FromUriComponent(uriComponent As String) As HostString
    parameters:
    - id: uriComponent
      type: System.String
      description: ''
    return:
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.Uri)
  commentId: M:Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.Uri)
  id: FromUriComponent(System.Uri)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: FromUriComponent(Uri)
  nameWithType: HostString.FromUriComponent(Uri)
  fullName: Microsoft.AspNetCore.Http.HostString.FromUriComponent(System.Uri)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FromUriComponent
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 188
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCreates a new HostString from the host and port of the give Uri instance.\nPunycode will be converted to Unicode.\n"
  example: []
  syntax:
    content: public static HostString FromUriComponent(Uri uri)
    content.vb: Public Shared Function FromUriComponent(uri As Uri) As HostString
    parameters:
    - id: uri
      type: System.Uri
      description: ''
    return:
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.HostString.Equals(Microsoft.AspNetCore.Http.HostString)
  commentId: M:Microsoft.AspNetCore.Http.HostString.Equals(Microsoft.AspNetCore.Http.HostString)
  id: Equals(Microsoft.AspNetCore.Http.HostString)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Equals(HostString)
  nameWithType: HostString.Equals(HostString)
  fullName: Microsoft.AspNetCore.Http.HostString.Equals(Microsoft.AspNetCore.Http.HostString)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 205
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCompares the equality of the Value property, ignoring case.\n"
  example: []
  syntax:
    content: public bool Equals(HostString other)
    content.vb: Public Function Equals(other As HostString) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
    return:
      type: System.Boolean
      description: ''
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Http.HostString}.Equals(Microsoft.AspNetCore.Http.HostString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.HostString.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Http.HostString.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: HostString.Equals(Object)
  fullName: Microsoft.AspNetCore.Http.HostString.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Equals
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 215
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCompares against the given object only if it is a HostString.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.HostString.GetHashCode
  commentId: M:Microsoft.AspNetCore.Http.HostString.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: HostString.GetHashCode()
  fullName: Microsoft.AspNetCore.Http.HostString.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 228
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets a hash code for the value.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: ''
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Http.HostString.op_Equality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  commentId: M:Microsoft.AspNetCore.Http.HostString.op_Equality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  id: op_Equality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Equality(HostString, HostString)
  nameWithType: HostString.Equality(HostString, HostString)
  fullName: Microsoft.AspNetCore.Http.HostString.Equality(Microsoft.AspNetCore.Http.HostString, Microsoft.AspNetCore.Http.HostString)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 239
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCompares the two instances for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(HostString left, HostString right)
    content.vb: Public Shared Operator =(left As HostString, right As HostString) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
    - id: right
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
    return:
      type: System.Boolean
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.HostString.op_Inequality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  commentId: M:Microsoft.AspNetCore.Http.HostString.op_Inequality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  id: op_Inequality(Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.HostString)
  parent: Microsoft.AspNetCore.Http.HostString
  langs:
  - csharp
  - vb
  name: Inequality(HostString, HostString)
  nameWithType: HostString.Inequality(HostString, HostString)
  fullName: Microsoft.AspNetCore.Http.HostString.Inequality(Microsoft.AspNetCore.Http.HostString, Microsoft.AspNetCore.Http.HostString)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Http.Abstractions/HostString.cs
    startLine: 250
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nCompares the two instances for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(HostString left, HostString right)
    content.vb: Public Shared Operator <>(left As HostString, right As HostString) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
    - id: right
      type: Microsoft.AspNetCore.Http.HostString
      description: ''
    return:
      type: System.Boolean
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.IEquatable{Microsoft.AspNetCore.Http.HostString}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Http.HostString}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<HostString>
  nameWithType: IEquatable<HostString>
  fullName: System.IEquatable<Microsoft.AspNetCore.Http.HostString>
  nameWithType.vb: IEquatable(Of HostString)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Http.HostString)
  name.vb: IEquatable(Of HostString)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.AspNetCore.Http.HostString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.AspNetCore.Http.HostString
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Microsoft.AspNetCore.Http.HostString
  commentId: T:Microsoft.AspNetCore.Http.HostString
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HostString
  nameWithType: HostString
  fullName: Microsoft.AspNetCore.Http.HostString
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IEquatable{Microsoft.AspNetCore.Http.HostString}.Equals(Microsoft.AspNetCore.Http.HostString)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Http.HostString}.Equals(Microsoft.AspNetCore.Http.HostString)
  parent: System.IEquatable{Microsoft.AspNetCore.Http.HostString}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(HostString)
  nameWithType: IEquatable<HostString>.Equals(HostString)
  fullName: System.IEquatable<Microsoft.AspNetCore.Http.HostString>.Equals(Microsoft.AspNetCore.Http.HostString)
  nameWithType.vb: IEquatable(Of HostString).Equals(HostString)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Http.HostString).Equals(Microsoft.AspNetCore.Http.HostString)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<HostString>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Http.HostString>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.AspNetCore.Http.HostString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of HostString).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Http.HostString).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.AspNetCore.Http.HostString
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
