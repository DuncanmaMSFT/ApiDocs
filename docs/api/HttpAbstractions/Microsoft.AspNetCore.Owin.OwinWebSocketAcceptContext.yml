### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  commentId: T:Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  id: OwinWebSocketAcceptContext
  parent: Microsoft.AspNetCore.Owin
  children:
  - Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor
  - Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.Options
  - Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.SubProtocol
  langs:
  - csharp
  - vb
  name: OwinWebSocketAcceptContext
  nameWithType: OwinWebSocketAcceptContext
  fullName: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: OwinWebSocketAcceptContext
    path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: 'public class OwinWebSocketAcceptContext : WebSocketAcceptContext'
    content.vb: >-
      Public Class OwinWebSocketAcceptContext
          Inherits WebSocketAcceptContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Http.WebSocketAcceptContext
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor
  commentId: M:Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  langs:
  - csharp
  - vb
  name: OwinWebSocketAcceptContext()
  nameWithType: OwinWebSocketAcceptContext.OwinWebSocketAcceptContext()
  fullName: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.OwinWebSocketAcceptContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public OwinWebSocketAcceptContext()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  langs:
  - csharp
  - vb
  name: OwinWebSocketAcceptContext(IDictionary<String, Object>)
  nameWithType: OwinWebSocketAcceptContext.OwinWebSocketAcceptContext(IDictionary<String, Object>)
  fullName: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.OwinWebSocketAcceptContext(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public OwinWebSocketAcceptContext(IDictionary<string, object> options)
    content.vb: Public Sub New(options As IDictionary(Of String, Object))
    parameters:
    - id: options
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  nameWithType.vb: OwinWebSocketAcceptContext.OwinWebSocketAcceptContext(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.OwinWebSocketAcceptContext(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: OwinWebSocketAcceptContext(IDictionary(Of String, Object))
- uid: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.SubProtocol
  commentId: P:Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.SubProtocol
  id: SubProtocol
  parent: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  langs:
  - csharp
  - vb
  name: SubProtocol
  nameWithType: OwinWebSocketAcceptContext.SubProtocol
  fullName: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.SubProtocol
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SubProtocol
    path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public override string SubProtocol { get; set; }
    content.vb: Public Overrides Property SubProtocol As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.AspNetCore.Http.WebSocketAcceptContext.SubProtocol
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.Options
  commentId: P:Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.Options
  id: Options
  parent: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: OwinWebSocketAcceptContext.Options
  fullName: Microsoft.AspNetCore.Owin.OwinWebSocketAcceptContext.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Options
    path: src/Microsoft.AspNetCore.Owin/WebSockets/OwinWebSocketAcceptContext.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Owin
  syntax:
    content: public IDictionary<string, object> Options { get; }
    content.vb: Public ReadOnly Property Options As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Owin
  commentId: N:Microsoft.AspNetCore.Owin
  isExternal: false
  name: Microsoft.AspNetCore.Owin
  nameWithType: Microsoft.AspNetCore.Owin
  fullName: Microsoft.AspNetCore.Owin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.WebSocketAcceptContext
  commentId: T:Microsoft.AspNetCore.Http.WebSocketAcceptContext
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: WebSocketAcceptContext
  nameWithType: WebSocketAcceptContext
  fullName: Microsoft.AspNetCore.Http.WebSocketAcceptContext
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Http.WebSocketAcceptContext.SubProtocol
  commentId: P:Microsoft.AspNetCore.Http.WebSocketAcceptContext.SubProtocol
  parent: Microsoft.AspNetCore.Http.WebSocketAcceptContext
  isExternal: false
  name: SubProtocol
  nameWithType: WebSocketAcceptContext.SubProtocol
  fullName: Microsoft.AspNetCore.Http.WebSocketAcceptContext.SubProtocol
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
