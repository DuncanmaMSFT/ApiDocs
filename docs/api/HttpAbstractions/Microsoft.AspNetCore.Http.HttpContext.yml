### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  id: HttpContext
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.HttpContext.Abort
  - Microsoft.AspNetCore.Http.HttpContext.Authentication
  - Microsoft.AspNetCore.Http.HttpContext.Connection
  - Microsoft.AspNetCore.Http.HttpContext.Features
  - Microsoft.AspNetCore.Http.HttpContext.Items
  - Microsoft.AspNetCore.Http.HttpContext.Request
  - Microsoft.AspNetCore.Http.HttpContext.RequestAborted
  - Microsoft.AspNetCore.Http.HttpContext.RequestServices
  - Microsoft.AspNetCore.Http.HttpContext.Response
  - Microsoft.AspNetCore.Http.HttpContext.Session
  - Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier
  - Microsoft.AspNetCore.Http.HttpContext.User
  - Microsoft.AspNetCore.Http.HttpContext.WebSockets
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: HttpContext
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nEncapsulates all HTTP-specific information about an individual HTTP request.\n"
  example: []
  syntax:
    content: public abstract class HttpContext
    content.vb: Public MustInherit Class HttpContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Http.HttpContext.Features
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Features
  id: Features
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: HttpContext.Features
  fullName: Microsoft.AspNetCore.Http.HttpContext.Features
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Features
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the collection of HTTP features provided by the server and middleware available on this request.\n"
  example: []
  syntax:
    content: public abstract IFeatureCollection Features { get; }
    content.vb: Public MustOverride ReadOnly Property Features As IFeatureCollection
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.Request
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Request
  id: Request
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: HttpContext.Request
  fullName: Microsoft.AspNetCore.Http.HttpContext.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Request
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref> object for this request.\n"
  example: []
  syntax:
    content: public abstract HttpRequest Request { get; }
    content.vb: Public MustOverride ReadOnly Property Request As HttpRequest
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpRequest
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.Response
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Response
  id: Response
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: HttpContext.Response
  fullName: Microsoft.AspNetCore.Http.HttpContext.Response
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Response
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref> object for this request.\n"
  example: []
  syntax:
    content: public abstract HttpResponse Response { get; }
    content.vb: Public MustOverride ReadOnly Property Response As HttpResponse
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpResponse
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.Connection
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Connection
  id: Connection
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: HttpContext.Connection
  fullName: Microsoft.AspNetCore.Http.HttpContext.Connection
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Connection
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets information about the underlying connection for this request.\n"
  example: []
  syntax:
    content: public abstract ConnectionInfo Connection { get; }
    content.vb: Public MustOverride ReadOnly Property Connection As ConnectionInfo
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.ConnectionInfo
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.WebSockets
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.WebSockets
  id: WebSockets
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: WebSockets
  nameWithType: HttpContext.WebSockets
  fullName: Microsoft.AspNetCore.Http.HttpContext.WebSockets
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: WebSockets
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets an object that manages the establishment of WebSocket connections for this request.\n"
  example: []
  syntax:
    content: public abstract WebSocketManager WebSockets { get; }
    content.vb: Public MustOverride ReadOnly Property WebSockets As WebSocketManager
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.WebSocketManager
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.Authentication
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Authentication
  id: Authentication
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Authentication
  nameWithType: HttpContext.Authentication
  fullName: Microsoft.AspNetCore.Http.HttpContext.Authentication
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Authentication
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets an object that facilitates authentication for this request.\n"
  example: []
  syntax:
    content: public abstract AuthenticationManager Authentication { get; }
    content.vb: Public MustOverride ReadOnly Property Authentication As AuthenticationManager
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.HttpContext.User
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.User
  id: User
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: HttpContext.User
  fullName: Microsoft.AspNetCore.Http.HttpContext.User
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: User
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets or sets the the user for this request.\n"
  example: []
  syntax:
    content: public abstract ClaimsPrincipal User { get; set; }
    content.vb: Public MustOverride Property User As ClaimsPrincipal
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.Items
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Items
  id: Items
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: HttpContext.Items
  fullName: Microsoft.AspNetCore.Http.HttpContext.Items
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Items
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets or sets a key/value collection that can be used to share data within the scope of this request.\n"
  example: []
  syntax:
    content: public abstract IDictionary<object, object> Items { get; set; }
    content.vb: Public MustOverride Property Items As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.RequestServices
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.RequestServices
  id: RequestServices
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: RequestServices
  nameWithType: HttpContext.RequestServices
  fullName: Microsoft.AspNetCore.Http.HttpContext.RequestServices
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RequestServices
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets or sets the <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> that provides access to the request's service container.\n"
  example: []
  syntax:
    content: public abstract IServiceProvider RequestServices { get; set; }
    content.vb: Public MustOverride Property RequestServices As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.RequestAborted
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.RequestAborted
  id: RequestAborted
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: RequestAborted
  nameWithType: HttpContext.RequestAborted
  fullName: Microsoft.AspNetCore.Http.HttpContext.RequestAborted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RequestAborted
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nNotifies when the connection underlying this request is aborted and thus request operations should be\ncancelled.\n"
  example: []
  syntax:
    content: public abstract CancellationToken RequestAborted { get; set; }
    content.vb: Public MustOverride Property RequestAborted As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier
  id: TraceIdentifier
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: TraceIdentifier
  nameWithType: HttpContext.TraceIdentifier
  fullName: Microsoft.AspNetCore.Http.HttpContext.TraceIdentifier
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TraceIdentifier
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets or sets a unique identifier to represent this request in trace logs.\n"
  example: []
  syntax:
    content: public abstract string TraceIdentifier { get; set; }
    content.vb: Public MustOverride Property TraceIdentifier As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.Session
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.Session
  id: Session
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: HttpContext.Session
  fullName: Microsoft.AspNetCore.Http.HttpContext.Session
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Session
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nGets or sets the object used to manage user session data for this request.\n"
  example: []
  syntax:
    content: public abstract ISession Session { get; set; }
    content.vb: Public MustOverride Property Session As ISession
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.ISession
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.Http.HttpContext.Abort
  commentId: M:Microsoft.AspNetCore.Http.HttpContext.Abort
  id: Abort
  parent: Microsoft.AspNetCore.Http.HttpContext
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: HttpContext.Abort()
  fullName: Microsoft.AspNetCore.Http.HttpContext.Abort()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Abort
    path: src/Microsoft.AspNetCore.Http.Abstractions/HttpContext.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http
  summary: "\nAborts the connection underlying this request.\n"
  example: []
  syntax:
    content: public abstract void Abort()
    content.vb: Public MustOverride Sub Abort
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.IFeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: Microsoft.AspNetCore.Http.ConnectionInfo
  commentId: T:Microsoft.AspNetCore.Http.ConnectionInfo
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: ConnectionInfo
  nameWithType: ConnectionInfo
  fullName: Microsoft.AspNetCore.Http.ConnectionInfo
- uid: Microsoft.AspNetCore.Http.WebSocketManager
  commentId: T:Microsoft.AspNetCore.Http.WebSocketManager
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: WebSocketManager
  nameWithType: WebSocketManager
  fullName: Microsoft.AspNetCore.Http.WebSocketManager
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http.ISession
  commentId: T:Microsoft.AspNetCore.Http.ISession
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: ISession
  nameWithType: ISession
  fullName: Microsoft.AspNetCore.Http.ISession
