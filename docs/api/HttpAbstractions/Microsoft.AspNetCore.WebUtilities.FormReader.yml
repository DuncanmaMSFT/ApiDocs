### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebUtilities.FormReader
  commentId: T:Microsoft.AspNetCore.WebUtilities.FormReader
  id: FormReader
  parent: Microsoft.AspNetCore.WebUtilities
  children:
  - Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream)
  - Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding)
  - Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Buffers.ArrayPool{System.Char})
  - Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String)
  - Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String,System.Buffers.ArrayPool{System.Char})
  - Microsoft.AspNetCore.WebUtilities.FormReader.DefaultKeyLengthLimit
  - Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueCountLimit
  - Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueLengthLimit
  - Microsoft.AspNetCore.WebUtilities.FormReader.Dispose
  - Microsoft.AspNetCore.WebUtilities.FormReader.KeyLengthLimit
  - Microsoft.AspNetCore.WebUtilities.FormReader.ReadForm
  - Microsoft.AspNetCore.WebUtilities.FormReader.ReadFormAsync(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPair
  - Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPairAsync(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebUtilities.FormReader.ValueCountLimit
  - Microsoft.AspNetCore.WebUtilities.FormReader.ValueLengthLimit
  langs:
  - csharp
  - vb
  name: FormReader
  nameWithType: FormReader
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: FormReader
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nUsed to read an 'application/x-www-form-urlencoded' form.\n"
  example: []
  syntax:
    content: 'public class FormReader : IDisposable'
    content.vb: >-
      Public Class FormReader
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueCountLimit
  commentId: F:Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueCountLimit
  id: DefaultValueCountLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: DefaultValueCountLimit
  nameWithType: FormReader.DefaultValueCountLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueCountLimit
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DefaultValueCountLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public const int DefaultValueCountLimit = 1024
    content.vb: Public Const DefaultValueCountLimit As Integer = 1024
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultKeyLengthLimit
  commentId: F:Microsoft.AspNetCore.WebUtilities.FormReader.DefaultKeyLengthLimit
  id: DefaultKeyLengthLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: DefaultKeyLengthLimit
  nameWithType: FormReader.DefaultKeyLengthLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultKeyLengthLimit
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DefaultKeyLengthLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public const int DefaultKeyLengthLimit = 2048
    content.vb: Public Const DefaultKeyLengthLimit As Integer = 2048
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueLengthLimit
  commentId: F:Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueLengthLimit
  id: DefaultValueLengthLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: DefaultValueLengthLimit
  nameWithType: FormReader.DefaultValueLengthLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueLengthLimit
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: DefaultValueLengthLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public const int DefaultValueLengthLimit = 4194304
    content.vb: Public Const DefaultValueLengthLimit As Integer = 4194304
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: FormReader(String)
  nameWithType: FormReader.FormReader(String)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public FormReader(string data)
    content.vb: Public Sub New(data As String)
    parameters:
    - id: data
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String,System.Buffers.ArrayPool{System.Char})
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.String,System.Buffers.ArrayPool{System.Char})
  id: '#ctor(System.String,System.Buffers.ArrayPool{System.Char})'
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: FormReader(String, ArrayPool<Char>)
  nameWithType: FormReader.FormReader(String, ArrayPool<Char>)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.String, System.Buffers.ArrayPool<System.Char>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public FormReader(string data, ArrayPool<char> charPool)
    content.vb: Public Sub New(data As String, charPool As ArrayPool(Of Char))
    parameters:
    - id: data
      type: System.String
    - id: charPool
      type: System.Buffers.ArrayPool{System.Char}
  nameWithType.vb: FormReader.FormReader(String, ArrayPool(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.String, System.Buffers.ArrayPool(Of System.Char))
  name.vb: FormReader(String, ArrayPool(Of Char))
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream)
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: FormReader(Stream)
  nameWithType: FormReader.FormReader(Stream)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public FormReader(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: FormReader(Stream, Encoding)
  nameWithType: FormReader.FormReader(Stream, Encoding)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.IO.Stream, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public FormReader(Stream stream, Encoding encoding)
    content.vb: Public Sub New(stream As Stream, encoding As Encoding)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: encoding
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Buffers.ArrayPool{System.Char})
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Buffers.ArrayPool{System.Char})
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Buffers.ArrayPool{System.Char})'
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: FormReader(Stream, Encoding, ArrayPool<Char>)
  nameWithType: FormReader.FormReader(Stream, Encoding, ArrayPool<Char>)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.IO.Stream, System.Text.Encoding, System.Buffers.ArrayPool<System.Char>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public FormReader(Stream stream, Encoding encoding, ArrayPool<char> charPool)
    content.vb: Public Sub New(stream As Stream, encoding As Encoding, charPool As ArrayPool(Of Char))
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: encoding
      type: System.Text.Encoding
    - id: charPool
      type: System.Buffers.ArrayPool{System.Char}
  nameWithType.vb: FormReader.FormReader(Stream, Encoding, ArrayPool(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.WebUtilities.FormReader.FormReader(System.IO.Stream, System.Text.Encoding, System.Buffers.ArrayPool(Of System.Char))
  name.vb: FormReader(Stream, Encoding, ArrayPool(Of Char))
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ValueCountLimit
  commentId: P:Microsoft.AspNetCore.WebUtilities.FormReader.ValueCountLimit
  id: ValueCountLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ValueCountLimit
  nameWithType: FormReader.ValueCountLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ValueCountLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ValueCountLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nThe limit on the number of form values to allow in ReadForm or ReadFormAsync.\n"
  example: []
  syntax:
    content: public int ValueCountLimit { get; set; }
    content.vb: Public Property ValueCountLimit As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.KeyLengthLimit
  commentId: P:Microsoft.AspNetCore.WebUtilities.FormReader.KeyLengthLimit
  id: KeyLengthLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: KeyLengthLimit
  nameWithType: FormReader.KeyLengthLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.KeyLengthLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: KeyLengthLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nThe limit on the length of form keys.\n"
  example: []
  syntax:
    content: public int KeyLengthLimit { get; set; }
    content.vb: Public Property KeyLengthLimit As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ValueLengthLimit
  commentId: P:Microsoft.AspNetCore.WebUtilities.FormReader.ValueLengthLimit
  id: ValueLengthLimit
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ValueLengthLimit
  nameWithType: FormReader.ValueLengthLimit
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ValueLengthLimit
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ValueLengthLimit
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nThe limit on the length of form values.\n"
  example: []
  syntax:
    content: public int ValueLengthLimit { get; set; }
    content.vb: Public Property ValueLengthLimit As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPair
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPair
  id: ReadNextPair
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ReadNextPair()
  nameWithType: FormReader.ReadNextPair()
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPair()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ReadNextPair
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nReads the next key value pair from the form.\nFor unbuffered data use the async overload instead.\n"
  example: []
  syntax:
    content: public KeyValuePair<string, string>? ReadNextPair()
    content.vb: Public Function ReadNextPair As KeyValuePair(Of String, String)?
    return:
      type: System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: The next key value pair, or null when the end of the form is reached.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPairAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPairAsync(System.Threading.CancellationToken)
  id: ReadNextPairAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ReadNextPairAsync(CancellationToken)
  nameWithType: FormReader.ReadNextPairAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ReadNextPairAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ReadNextPairAsync
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 133
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nAsynchronously reads the next key value pair from the form.\n"
  example: []
  syntax:
    content: public Task<KeyValuePair<string, string>? > ReadNextPairAsync(CancellationToken cancellationToken = null)
    content.vb: Public Function ReadNextPairAsync(cancellationToken As CancellationToken = Nothing) As Task(Of KeyValuePair(Of String, String)?)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}}
      description: The next key value pair, or null when the end of the form is reached.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ReadForm
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.ReadForm
  id: ReadForm
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ReadForm()
  nameWithType: FormReader.ReadForm()
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ReadForm()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ReadForm
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 258
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nParses text from an HTTP form body.\n"
  example: []
  syntax:
    content: public Dictionary<string, StringValues> ReadForm()
    content.vb: Public Function ReadForm As Dictionary(Of String, StringValues)
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
      description: The collection containing the parsed HTTP form body.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.ReadFormAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.ReadFormAsync(System.Threading.CancellationToken)
  id: ReadFormAsync(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: ReadFormAsync(CancellationToken)
  nameWithType: FormReader.ReadFormAsync(CancellationToken)
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.ReadFormAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ReadFormAsync
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 274
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  summary: "\nParses an HTTP form body.\n"
  example: []
  syntax:
    content: public Task<Dictionary<string, StringValues>> ReadFormAsync(CancellationToken cancellationToken = null)
    content.vb: Public Function ReadFormAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Dictionary(Of String, StringValues))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}}
      description: The collection containing the parsed HTTP form body.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebUtilities.FormReader.Dispose
  commentId: M:Microsoft.AspNetCore.WebUtilities.FormReader.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.WebUtilities.FormReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FormReader.Dispose()
  fullName: Microsoft.AspNetCore.WebUtilities.FormReader.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Dispose
    path: src/Microsoft.AspNetCore.WebUtilities/FormReader.cs
    startLine: 302
  assemblies:
  - Microsoft.AspNetCore.WebUtilities
  namespace: Microsoft.AspNetCore.WebUtilities
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: false
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Buffers.ArrayPool{System.Char}
  commentId: T:System.Buffers.ArrayPool{System.Char}
  parent: System.Buffers
  definition: System.Buffers.ArrayPool`1
  name: ArrayPool<Char>
  nameWithType: ArrayPool<Char>
  fullName: System.Buffers.ArrayPool<System.Char>
  nameWithType.vb: ArrayPool(Of Char)
  fullname.vb: System.Buffers.ArrayPool(Of System.Char)
  name.vb: ArrayPool(Of Char)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers.ArrayPool`1
  commentId: T:System.Buffers.ArrayPool`1
  isExternal: true
  name: ArrayPool<T>
  nameWithType: ArrayPool<T>
  fullName: System.Buffers.ArrayPool<T>
  nameWithType.vb: ArrayPool(Of T)
  fullname.vb: System.Buffers.ArrayPool(Of T)
  name.vb: ArrayPool(Of T)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    nameWithType: ArrayPool
    fullName: System.Buffers.ArrayPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: false
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<KeyValuePair<String, String>>
  nameWithType: Nullable<KeyValuePair<String, String>>
  fullName: System.Nullable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: Nullable(Of KeyValuePair(Of String, String))
  fullname.vb: System.Nullable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: Nullable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Nullable<KeyValuePair<String, String>>>
  nameWithType: Task<Nullable<KeyValuePair<String, String>>>
  fullName: System.Threading.Tasks.Task<System.Nullable<System.Collections.Generic.KeyValuePair<System.String, System.String>>>
  nameWithType.vb: Task(Of Nullable(Of KeyValuePair(Of String, String)))
  fullname.vb: System.Threading.Tasks.Task(Of System.Nullable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: Task(Of Nullable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Dictionary<String, StringValues>>
  nameWithType: Task<Dictionary<String, StringValues>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: Task(Of Dictionary(Of String, StringValues))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: Task(Of Dictionary(Of String, StringValues))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
