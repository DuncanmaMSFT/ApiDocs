### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection
  commentId: T:Microsoft.AspNetCore.Http.Internal.QueryCollection
  id: QueryCollection
  parent: Microsoft.AspNetCore.Http.Internal
  children:
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(Microsoft.AspNetCore.Http.Internal.QueryCollection)
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Int32)
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.ContainsKey(System.String)
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.Count
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.Empty
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.GetEnumerator
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.Item(System.String)
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.Keys
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.AspNetCore.Http.Internal.QueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  langs:
  - csharp
  - vb
  name: QueryCollection
  nameWithType: QueryCollection
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: QueryCollection
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nThe HttpRequest query string collection\n"
  example: []
  syntax:
    content: 'public class QueryCollection : IQueryCollection, IEnumerable<KeyValuePair<string, StringValues>>, IEnumerable'
    content.vb: >-
      Public Class QueryCollection
          Implements IQueryCollection, IEnumerable(Of KeyValuePair(Of String, StringValues)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.Empty
  commentId: F:Microsoft.AspNetCore.Http.Internal.QueryCollection.Empty
  id: Empty
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: QueryCollection.Empty
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.Empty
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Empty
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public static readonly QueryCollection Empty
    content.vb: Public Shared ReadOnly Empty As QueryCollection
    return:
      type: Microsoft.AspNetCore.Http.Internal.QueryCollection
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: QueryCollection()
  nameWithType: QueryCollection.QueryCollection()
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.QueryCollection()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public QueryCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues})'
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: QueryCollection(Dictionary<String, StringValues>)
  nameWithType: QueryCollection.QueryCollection(Dictionary<String, StringValues>)
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.QueryCollection(System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public QueryCollection(Dictionary<string, StringValues> store)
    content.vb: Public Sub New(store As Dictionary(Of String, StringValues))
    parameters:
    - id: store
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  nameWithType.vb: QueryCollection.QueryCollection(Dictionary(Of String, StringValues))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Internal.QueryCollection.QueryCollection(System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: QueryCollection(Dictionary(Of String, StringValues))
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(Microsoft.AspNetCore.Http.Internal.QueryCollection)
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(Microsoft.AspNetCore.Http.Internal.QueryCollection)
  id: '#ctor(Microsoft.AspNetCore.Http.Internal.QueryCollection)'
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: QueryCollection(QueryCollection)
  nameWithType: QueryCollection.QueryCollection(QueryCollection)
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.QueryCollection(Microsoft.AspNetCore.Http.Internal.QueryCollection)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public QueryCollection(QueryCollection store)
    content.vb: Public Sub New(store As QueryCollection)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Http.Internal.QueryCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: QueryCollection(Int32)
  nameWithType: QueryCollection.QueryCollection(Int32)
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.QueryCollection(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public QueryCollection(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.Internal.QueryCollection.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: QueryCollection.Item[String]
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: this[]
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nGet or sets the associated value from the collection as a single string.\n"
  example: []
  syntax:
    content: public StringValues this[string key] { get; }
    content.vb: Public ReadOnly Property Item(key As String) As StringValues
    parameters:
    - id: key
      type: System.String
      description: The header name.
    return:
      type: Microsoft.Extensions.Primitives.StringValues
      description: the associated value from the collection as a StringValues or StringValues.Empty if the key is not present.
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
  nameWithType.vb: QueryCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Http.Internal.QueryCollection.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.Count
  commentId: P:Microsoft.AspNetCore.Http.Internal.QueryCollection.Count
  id: Count
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: QueryCollection.Count
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Count
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nGets the number of elements contained in the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref>;.\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.Keys
  commentId: P:Microsoft.AspNetCore.Http.Internal.QueryCollection.Keys
  id: Keys
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: QueryCollection.Keys
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.Keys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Keys
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  syntax:
    content: public ICollection<string> Keys { get; }
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection.Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: QueryCollection.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ContainsKey
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nDetermines whether the <xref href=\"Microsoft.AspNetCore.Http.HeaderDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    content.vb: Public Function ContainsKey(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains a specific key; otherwise, false.
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  id: TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out StringValues)
  nameWithType: QueryCollection.TryGetValue(String, out StringValues)
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.TryGetValue(System.String, out Microsoft.Extensions.Primitives.StringValues)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: TryGetValue
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nRetrieves a value from the dictionary.\n"
  example: []
  syntax:
    content: public bool TryGetValue(string key, out StringValues value)
    content.vb: Public Function TryGetValue(key As String, ByRef value As StringValues) As Boolean
    parameters:
    - id: key
      type: System.String
      description: The header name.
    - id: value
      type: Microsoft.Extensions.Primitives.StringValues
      description: The value.
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.AspNetCore.Http.HeaderDictionary" data-throw-if-not-resolved="false"></xref> contains the key; otherwise, false.
  implements:
  - Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  nameWithType.vb: QueryCollection.TryGetValue(String, ByRef StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Internal.QueryCollection.TryGetValue(System.String, ByRef Microsoft.Extensions.Primitives.StringValues)
  name.vb: TryGetValue(String, ByRef StringValues)
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: QueryCollection.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetEnumerator
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: public QueryCollection.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As QueryCollection.Enumerator
    return:
      type: Microsoft.AspNetCore.Http.Internal.QueryCollection.Enumerator
      description: An <xref href="Microsoft.AspNetCore.Http.Internal.QueryCollection.Enumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,Microsoft#Extensions#Primitives#StringValues}}#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  nameWithType: QueryCollection.IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 148
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, StringValues>> IEnumerable<KeyValuePair<string, StringValues>>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, StringValues)) Implements IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
      description: An <xref href="System.Collections.Generic.IEnumerator%601" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  nameWithType.vb: QueryCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  fullName.vb: Microsoft.AspNetCore.Http.Internal.QueryCollection.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.AspNetCore.Http.Internal.QueryCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.AspNetCore.Http.Internal.QueryCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: QueryCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.AspNetCore.Http/Internal/QueryCollection.cs
    startLine: 162
  assemblies:
  - Microsoft.AspNetCore.Http
  namespace: Microsoft.AspNetCore.Http.Internal
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: QueryCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.AspNetCore.Http.Internal
  commentId: N:Microsoft.AspNetCore.Http.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Http.Internal
  nameWithType: Microsoft.AspNetCore.Http.Internal
  fullName: Microsoft.AspNetCore.Http.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.IQueryCollection
  commentId: T:Microsoft.AspNetCore.Http.IQueryCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: IQueryCollection
  nameWithType: IQueryCollection
  fullName: Microsoft.AspNetCore.Http.IQueryCollection
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerable<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: IEnumerable(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection
  commentId: T:Microsoft.AspNetCore.Http.Internal.QueryCollection
  parent: Microsoft.AspNetCore.Http.Internal
  isExternal: false
  name: QueryCollection
  nameWithType: QueryCollection
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
  parent: Microsoft.AspNetCore.Http.IQueryCollection
  isExternal: true
  name: Item[String]
  nameWithType: IQueryCollection.Item[String]
  fullName: Microsoft.AspNetCore.Http.IQueryCollection.Item[System.String]
  nameWithType.vb: IQueryCollection.Item(String)
  fullname.vb: Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
    name: Item
    nameWithType: IQueryCollection.Item
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.Item(System.String)
    name: Item
    nameWithType: IQueryCollection.Item
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Primitives.StringValues
  commentId: T:Microsoft.Extensions.Primitives.StringValues
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: Microsoft.Extensions.Primitives.StringValues
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.AspNetCore.Http.HeaderDictionary
  commentId: T:Microsoft.AspNetCore.Http.HeaderDictionary
  isExternal: false
  name: HeaderDictionary
  nameWithType: HeaderDictionary
  fullName: Microsoft.AspNetCore.Http.HeaderDictionary
- uid: Microsoft.AspNetCore.Http.IQueryCollection.Count
  commentId: P:Microsoft.AspNetCore.Http.IQueryCollection.Count
  parent: Microsoft.AspNetCore.Http.IQueryCollection
  isExternal: false
  name: Count
  nameWithType: IQueryCollection.Count
  fullName: Microsoft.AspNetCore.Http.IQueryCollection.Count
- uid: Microsoft.AspNetCore.Http.IQueryCollection.Keys
  commentId: P:Microsoft.AspNetCore.Http.IQueryCollection.Keys
  parent: Microsoft.AspNetCore.Http.IQueryCollection
  isExternal: false
  name: Keys
  nameWithType: IQueryCollection.Keys
  fullName: Microsoft.AspNetCore.Http.IQueryCollection.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
  commentId: M:Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
  parent: Microsoft.AspNetCore.Http.IQueryCollection
  isExternal: true
  name: ContainsKey(String)
  nameWithType: IQueryCollection.ContainsKey(String)
  fullName: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
    name: ContainsKey
    nameWithType: IQueryCollection.ContainsKey
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey(System.String)
    name: ContainsKey
    nameWithType: IQueryCollection.ContainsKey
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.ContainsKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  commentId: M:Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
  parent: Microsoft.AspNetCore.Http.IQueryCollection
  isExternal: true
  name: TryGetValue(String, StringValues)
  nameWithType: IQueryCollection.TryGetValue(String, StringValues)
  fullName: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String, Microsoft.Extensions.Primitives.StringValues)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
    name: TryGetValue
    nameWithType: IQueryCollection.TryGetValue
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue(System.String,Microsoft.Extensions.Primitives.StringValues@)
    name: TryGetValue
    nameWithType: IQueryCollection.TryGetValue
    fullName: Microsoft.AspNetCore.Http.IQueryCollection.TryGetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Internal.QueryCollection.Enumerator
  commentId: T:Microsoft.AspNetCore.Http.Internal.QueryCollection.Enumerator
  parent: Microsoft.AspNetCore.Http.Internal
  isExternal: false
  name: QueryCollection.Enumerator
  nameWithType: QueryCollection.Enumerator
  fullName: Microsoft.AspNetCore.Http.Internal.QueryCollection.Enumerator
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, StringValues>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, StringValues)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, StringValues>>
  nameWithType: IEnumerator<KeyValuePair<String, StringValues>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Extensions.Primitives.StringValues))
  name.vb: IEnumerator(Of KeyValuePair(Of String, StringValues))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
