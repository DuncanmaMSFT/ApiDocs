### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.SessionExtensions
  commentId: T:Microsoft.AspNetCore.Http.SessionExtensions
  id: SessionExtensions
  parent: Microsoft.AspNetCore.Http
  children:
  - Microsoft.AspNetCore.Http.SessionExtensions.Get(Microsoft.AspNetCore.Http.ISession,System.String)
  - Microsoft.AspNetCore.Http.SessionExtensions.GetInt32(Microsoft.AspNetCore.Http.ISession,System.String)
  - Microsoft.AspNetCore.Http.SessionExtensions.GetString(Microsoft.AspNetCore.Http.ISession,System.String)
  - Microsoft.AspNetCore.Http.SessionExtensions.SetInt32(Microsoft.AspNetCore.Http.ISession,System.String,System.Int32)
  - Microsoft.AspNetCore.Http.SessionExtensions.SetString(Microsoft.AspNetCore.Http.ISession,System.String,System.String)
  langs:
  - csharp
  - vb
  name: SessionExtensions
  nameWithType: SessionExtensions
  fullName: Microsoft.AspNetCore.Http.SessionExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SessionExtensions
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static class SessionExtensions
    content.vb: Public Module SessionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Http.SessionExtensions.SetInt32(Microsoft.AspNetCore.Http.ISession,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Http.SessionExtensions.SetInt32(Microsoft.AspNetCore.Http.ISession,System.String,System.Int32)
  id: SetInt32(Microsoft.AspNetCore.Http.ISession,System.String,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SessionExtensions
  langs:
  - csharp
  - vb
  name: SetInt32(ISession, String, Int32)
  nameWithType: SessionExtensions.SetInt32(ISession, String, Int32)
  fullName: Microsoft.AspNetCore.Http.SessionExtensions.SetInt32(Microsoft.AspNetCore.Http.ISession, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SetInt32
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static void SetInt32(this ISession session, string key, int value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetInt32(session As ISession, key As String, value As Integer)
    parameters:
    - id: session
      type: Microsoft.AspNetCore.Http.ISession
    - id: key
      type: System.String
    - id: value
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SessionExtensions.GetInt32(Microsoft.AspNetCore.Http.ISession,System.String)
  commentId: M:Microsoft.AspNetCore.Http.SessionExtensions.GetInt32(Microsoft.AspNetCore.Http.ISession,System.String)
  id: GetInt32(Microsoft.AspNetCore.Http.ISession,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SessionExtensions
  langs:
  - csharp
  - vb
  name: GetInt32(ISession, String)
  nameWithType: SessionExtensions.GetInt32(ISession, String)
  fullName: Microsoft.AspNetCore.Http.SessionExtensions.GetInt32(Microsoft.AspNetCore.Http.ISession, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetInt32
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static int ? GetInt32(this ISession session, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetInt32(session As ISession, key As String) As Integer?
    parameters:
    - id: session
      type: Microsoft.AspNetCore.Http.ISession
    - id: key
      type: System.String
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SessionExtensions.SetString(Microsoft.AspNetCore.Http.ISession,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Http.SessionExtensions.SetString(Microsoft.AspNetCore.Http.ISession,System.String,System.String)
  id: SetString(Microsoft.AspNetCore.Http.ISession,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SessionExtensions
  langs:
  - csharp
  - vb
  name: SetString(ISession, String, String)
  nameWithType: SessionExtensions.SetString(ISession, String, String)
  fullName: Microsoft.AspNetCore.Http.SessionExtensions.SetString(Microsoft.AspNetCore.Http.ISession, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: SetString
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static void SetString(this ISession session, string key, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetString(session As ISession, key As String, value As String)
    parameters:
    - id: session
      type: Microsoft.AspNetCore.Http.ISession
    - id: key
      type: System.String
    - id: value
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SessionExtensions.GetString(Microsoft.AspNetCore.Http.ISession,System.String)
  commentId: M:Microsoft.AspNetCore.Http.SessionExtensions.GetString(Microsoft.AspNetCore.Http.ISession,System.String)
  id: GetString(Microsoft.AspNetCore.Http.ISession,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SessionExtensions
  langs:
  - csharp
  - vb
  name: GetString(ISession, String)
  nameWithType: SessionExtensions.GetString(ISession, String)
  fullName: Microsoft.AspNetCore.Http.SessionExtensions.GetString(Microsoft.AspNetCore.Http.ISession, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: GetString
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static string GetString(this ISession session, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(session As ISession, key As String) As String
    parameters:
    - id: session
      type: Microsoft.AspNetCore.Http.ISession
    - id: key
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Http.SessionExtensions.Get(Microsoft.AspNetCore.Http.ISession,System.String)
  commentId: M:Microsoft.AspNetCore.Http.SessionExtensions.Get(Microsoft.AspNetCore.Http.ISession,System.String)
  id: Get(Microsoft.AspNetCore.Http.ISession,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Http.SessionExtensions
  langs:
  - csharp
  - vb
  name: Get(ISession, String)
  nameWithType: SessionExtensions.Get(ISession, String)
  fullName: Microsoft.AspNetCore.Http.SessionExtensions.Get(Microsoft.AspNetCore.Http.ISession, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Get
    path: src/Microsoft.AspNetCore.Http.Extensions/SessionExtensions.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Http.Extensions
  namespace: Microsoft.AspNetCore.Http
  syntax:
    content: public static byte[] Get(this ISession session, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(session As ISession, key As String) As Byte()
    parameters:
    - id: session
      type: Microsoft.AspNetCore.Http.ISession
    - id: key
      type: System.String
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.ISession
  commentId: T:Microsoft.AspNetCore.Http.ISession
  parent: Microsoft.AspNetCore.Http
  isExternal: false
  name: ISession
  nameWithType: ISession
  fullName: Microsoft.AspNetCore.Http.ISession
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
