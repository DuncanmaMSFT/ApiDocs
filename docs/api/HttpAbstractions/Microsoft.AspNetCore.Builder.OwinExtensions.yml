### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.OwinExtensions
  commentId: T:Microsoft.AspNetCore.Builder.OwinExtensions
  id: OwinExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}})
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.IServiceProvider)
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.IServiceProvider)
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}})
  langs:
  - csharp
  - vb
  name: OwinExtensions
  nameWithType: OwinExtensions
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: OwinExtensions
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static class OwinExtensions
    content.vb: Public Module OwinExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseOwin(IApplicationBuilder)
  nameWithType: OwinExtensions.UseOwin(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseOwin
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> UseOwin(this IApplicationBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseOwin(builder As IApplicationBuilder) As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    return:
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}})
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}})
  id: UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseOwin(IApplicationBuilder, Action<Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>>)
  nameWithType: OwinExtensions.UseOwin(IApplicationBuilder, Action<Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>>)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action<System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseOwin
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IApplicationBuilder UseOwin(this IApplicationBuilder builder, Action<Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>>> pipeline)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseOwin(builder As IApplicationBuilder, pipeline As Action(Of Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))))) As IApplicationBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    - id: pipeline
      type: System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}}
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
  nameWithType.vb: OwinExtensions.UseOwin(IApplicationBuilder, Action(Of Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.OwinExtensions.UseOwin(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action(Of System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task)))))
  name.vb: UseOwin(IApplicationBuilder, Action(Of Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))))
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}})
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}})
  id: UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>)
  nameWithType: OwinExtensions.UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseBuilder
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IApplicationBuilder UseBuilder(this Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> app)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseBuilder(app As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))) As IApplicationBuilder
    parameters:
    - id: app
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
  nameWithType.vb: OwinExtensions.UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task))))
  name.vb: UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))))
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.IServiceProvider)
  id: UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.IServiceProvider)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, IServiceProvider)
  nameWithType: OwinExtensions.UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, IServiceProvider)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseBuilder
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static IApplicationBuilder UseBuilder(this Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> app, IServiceProvider serviceProvider)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseBuilder(app As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), serviceProvider As IServiceProvider) As IApplicationBuilder
    parameters:
    - id: app
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
  nameWithType.vb: OwinExtensions.UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), IServiceProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task))), System.IServiceProvider)
  name.vb: UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), IServiceProvider)
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  id: UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, Action<IApplicationBuilder>)
  nameWithType: OwinExtensions.UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, Action<IApplicationBuilder>)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>, System.Action<Microsoft.AspNetCore.Builder.IApplicationBuilder>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseBuilder
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 145
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> UseBuilder(this Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> app, Action<IApplicationBuilder> pipeline)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseBuilder(app As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), pipeline As Action(Of IApplicationBuilder)) As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))
    parameters:
    - id: app
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
    - id: pipeline
      type: System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder}
    return:
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
  nameWithType.vb: OwinExtensions.UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), Action(Of IApplicationBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task))), System.Action(Of Microsoft.AspNetCore.Builder.IApplicationBuilder))
  name.vb: UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), Action(Of IApplicationBuilder))
- uid: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.IServiceProvider)
  id: UseBuilder(System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.IServiceProvider)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.OwinExtensions
  langs:
  - csharp
  - vb
  name: UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, Action<IApplicationBuilder>, IServiceProvider)
  nameWithType: OwinExtensions.UseBuilder(Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>, Action<IApplicationBuilder>, IServiceProvider)
  fullName: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>, System.Action<Microsoft.AspNetCore.Builder.IApplicationBuilder>, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: UseBuilder
    path: src/Microsoft.AspNetCore.Owin/OwinExtensions.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.Owin
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public static Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> UseBuilder(this Action<Func<Func<IDictionary<string, object>, Task>, Func<IDictionary<string, object>, Task>>> app, Action<IApplicationBuilder> pipeline, IServiceProvider serviceProvider)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseBuilder(app As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), pipeline As Action(Of IApplicationBuilder), serviceProvider As IServiceProvider) As Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))
    parameters:
    - id: app
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
    - id: pipeline
      type: System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder}
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
  nameWithType.vb: OwinExtensions.UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), Action(Of IApplicationBuilder), IServiceProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.OwinExtensions.UseBuilder(System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task))), System.Action(Of Microsoft.AspNetCore.Builder.IApplicationBuilder), System.IServiceProvider)
  name.vb: UseBuilder(Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))), Action(Of IApplicationBuilder), IServiceProvider)
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
  commentId: T:System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}
  parent: System
  definition: System.Action`1
  name: Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>
  nameWithType: Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>
  fullName: System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>
  nameWithType.vb: Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))
  fullname.vb: System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task)))
  name.vb: Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task)))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}}
  commentId: T:System.Action{System.Action{System.Func{System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}}}}
  parent: System
  definition: System.Action`1
  name: Action<Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>>
  nameWithType: Action<Action<Func<Func<IDictionary<String, Object>, Task>, Func<IDictionary<String, Object>, Task>>>>
  fullName: System.Action<System.Action<System.Func<System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>>>>
  nameWithType.vb: Action(Of Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))))
  fullname.vb: System.Action(Of System.Action(Of System.Func(Of System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task))))
  name.vb: Action(Of Action(Of Func(Of Func(Of IDictionary(Of String, Object), Task), Func(Of IDictionary(Of String, Object), Task))))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApplicationBuilder>
  nameWithType: Action<IApplicationBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Builder.IApplicationBuilder>
  nameWithType.vb: Action(Of IApplicationBuilder)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Builder.IApplicationBuilder)
  name.vb: Action(Of IApplicationBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
  - name: )
    nameWithType: )
    fullName: )
