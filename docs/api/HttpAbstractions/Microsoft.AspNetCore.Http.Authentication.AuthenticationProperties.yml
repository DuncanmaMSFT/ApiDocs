### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  id: AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  children:
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AllowRefresh
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.ExpiresUtc
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IsPersistent
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IssuedUtc
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.Items
  - Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.RedirectUri
  langs:
  - csharp
  - vb
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AuthenticationProperties
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nDictionary used to store state values about the authentication session.\n"
  example: []
  syntax:
    content: public class AuthenticationProperties
    content.vb: Public Class AuthenticationProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor
  commentId: M:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: AuthenticationProperties()
  nameWithType: AuthenticationProperties.AuthenticationProperties()
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AuthenticationProperties()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public AuthenticationProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: AuthenticationProperties(IDictionary<String, String>)
  nameWithType: AuthenticationProperties.AuthenticationProperties(IDictionary<String, String>)
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AuthenticationProperties(System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public AuthenticationProperties(IDictionary<string, string> items)
    content.vb: Public Sub New(items As IDictionary(Of String, String))
    parameters:
    - id: items
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
  nameWithType.vb: AuthenticationProperties.AuthenticationProperties(IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AuthenticationProperties(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: AuthenticationProperties(IDictionary(Of String, String))
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.Items
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.Items
  id: Items
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: AuthenticationProperties.Items
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.Items
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: Items
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nState values about the authentication session.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Items { get; }
    content.vb: Public ReadOnly Property Items As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IsPersistent
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IsPersistent
  id: IsPersistent
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: IsPersistent
  nameWithType: AuthenticationProperties.IsPersistent
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IsPersistent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IsPersistent
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nGets or sets whether the authentication session is persisted across multiple requests.\n"
  example: []
  syntax:
    content: public bool IsPersistent { get; set; }
    content.vb: Public Property IsPersistent As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.RedirectUri
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.RedirectUri
  id: RedirectUri
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: RedirectUri
  nameWithType: AuthenticationProperties.RedirectUri
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.RedirectUri
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: RedirectUri
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nGets or sets the full path or absolute URI to be used as an http redirect response value.\n"
  example: []
  syntax:
    content: public string RedirectUri { get; set; }
    content.vb: Public Property RedirectUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IssuedUtc
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IssuedUtc
  id: IssuedUtc
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: IssuedUtc
  nameWithType: AuthenticationProperties.IssuedUtc
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.IssuedUtc
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: IssuedUtc
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nGets or sets the time at which the authentication ticket was issued.\n"
  example: []
  syntax:
    content: public DateTimeOffset? IssuedUtc { get; set; }
    content.vb: Public Property IssuedUtc As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.ExpiresUtc
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.ExpiresUtc
  id: ExpiresUtc
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: ExpiresUtc
  nameWithType: AuthenticationProperties.ExpiresUtc
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.ExpiresUtc
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: ExpiresUtc
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 131
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nGets or sets the time at which the authentication ticket expires.\n"
  example: []
  syntax:
    content: public DateTimeOffset? ExpiresUtc { get; set; }
    content.vb: Public Property ExpiresUtc As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AllowRefresh
  commentId: P:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AllowRefresh
  id: AllowRefresh
  parent: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  langs:
  - csharp
  - vb
  name: AllowRefresh
  nameWithType: AuthenticationProperties.AllowRefresh
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties.AllowRefresh
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
      branch: master
      repo: https://github.com/aspnet/HttpAbstractions.git
    id: AllowRefresh
    path: src/Microsoft.AspNetCore.Http.Abstractions/Authentication/AuthenticationProperties.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Http.Abstractions
  namespace: Microsoft.AspNetCore.Http.Authentication
  summary: "\nGets or sets if refreshing the authentication session should be allowed.\n"
  example: []
  syntax:
    content: public bool ? AllowRefresh { get; set; }
    content.vb: Public Property AllowRefresh As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
